

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Fri Feb 12 18:02:36 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1  0000                     opt subtitle "Microchip Technology Omniscient Code Generator (Lite mode) build 52243"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F886
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    43  0000                     INDF equ 00h ;# 
    44                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    45  0001                     TMR0 equ 01h ;# 
    46                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    47  0002                     PCL equ 02h ;# 
    48                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    49  0003                     STATUS equ 03h ;# 
    50                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    51  0004                     FSR equ 04h ;# 
    52                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    53  0005                     PORTA equ 05h ;# 
    54                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    55  0006                     PORTB equ 06h ;# 
    56                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    57  0007                     PORTC equ 07h ;# 
    58                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    59  0009                     PORTE equ 09h ;# 
    60                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    61  000A                     PCLATH equ 0Ah ;# 
    62                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    63  000B                     INTCON equ 0Bh ;# 
    64                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    65  000C                     PIR1 equ 0Ch ;# 
    66                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    67  000D                     PIR2 equ 0Dh ;# 
    68                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    69  000E                     TMR1 equ 0Eh ;# 
    70                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    71  000E                     TMR1L equ 0Eh ;# 
    72                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    73  000F                     TMR1H equ 0Fh ;# 
    74                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    75  0010                     T1CON equ 010h ;# 
    76                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    77  0011                     TMR2 equ 011h ;# 
    78                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    79  0012                     T2CON equ 012h ;# 
    80                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    81  0013                     SSPBUF equ 013h ;# 
    82                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    83  0014                     SSPCON equ 014h ;# 
    84                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    85  0015                     CCPR1 equ 015h ;# 
    86                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    87  0015                     CCPR1L equ 015h ;# 
    88                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    89  0016                     CCPR1H equ 016h ;# 
    90                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    91  0017                     CCP1CON equ 017h ;# 
    92                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    93  0018                     RCSTA equ 018h ;# 
    94                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    95  0019                     TXREG equ 019h ;# 
    96                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    97  001A                     RCREG equ 01Ah ;# 
    98                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
    99  001B                     CCPR2 equ 01Bh ;# 
   100                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   101  001B                     CCPR2L equ 01Bh ;# 
   102                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   103  001C                     CCPR2H equ 01Ch ;# 
   104                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   105  001D                     CCP2CON equ 01Dh ;# 
   106                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   107  001E                     ADRESH equ 01Eh ;# 
   108                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   109  001F                     ADCON0 equ 01Fh ;# 
   110                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   111  0081                     OPTION_REG equ 081h ;# 
   112                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   113  0085                     TRISA equ 085h ;# 
   114                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   115  0086                     TRISB equ 086h ;# 
   116                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   117  0087                     TRISC equ 087h ;# 
   118                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   119  0089                     TRISE equ 089h ;# 
   120                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   121  008C                     PIE1 equ 08Ch ;# 
   122                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   123  008D                     PIE2 equ 08Dh ;# 
   124                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   125  008E                     PCON equ 08Eh ;# 
   126                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   127  008F                     OSCCON equ 08Fh ;# 
   128                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   129  0090                     OSCTUNE equ 090h ;# 
   130                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   131  0091                     SSPCON2 equ 091h ;# 
   132                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   133  0092                     PR2 equ 092h ;# 
   134                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   135  0093                     SSPADD equ 093h ;# 
   136                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   137  0093                     SSPMSK equ 093h ;# 
   138                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   139  0093                     MSK equ 093h ;# 
   140                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   141  0094                     SSPSTAT equ 094h ;# 
   142                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   143  0095                     WPUB equ 095h ;# 
   144                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   145  0096                     IOCB equ 096h ;# 
   146                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   147  0097                     VRCON equ 097h ;# 
   148                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   149  0098                     TXSTA equ 098h ;# 
   150                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   151  0099                     SPBRG equ 099h ;# 
   152                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   153  009A                     SPBRGH equ 09Ah ;# 
   154                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   155  009B                     PWM1CON equ 09Bh ;# 
   156                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   157  009C                     ECCPAS equ 09Ch ;# 
   158                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   159  009D                     PSTRCON equ 09Dh ;# 
   160                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   161  009E                     ADRESL equ 09Eh ;# 
   162                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   163  009F                     ADCON1 equ 09Fh ;# 
   164                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   165  0105                     WDTCON equ 0105h ;# 
   166                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   167  0107                     CM1CON0 equ 0107h ;# 
   168                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   169  0108                     CM2CON0 equ 0108h ;# 
   170                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   171  0109                     CM2CON1 equ 0109h ;# 
   172                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   173  010C                     EEDATA equ 010Ch ;# 
   174                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   175  010C                     EEDAT equ 010Ch ;# 
   176                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   177  010D                     EEADR equ 010Dh ;# 
   178                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   179  010E                     EEDATH equ 010Eh ;# 
   180                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   181  010F                     EEADRH equ 010Fh ;# 
   182                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   183  0185                     SRCON equ 0185h ;# 
   184                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   185  0187                     BAUDCTL equ 0187h ;# 
   186                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   187  0188                     ANSEL equ 0188h ;# 
   188                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   189  0189                     ANSELH equ 0189h ;# 
   190                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   191  018C                     EECON1 equ 018Ch ;# 
   192                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   193  018D                     EECON2 equ 018Dh ;# 
   194                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   195  0000                     INDF equ 00h ;# 
   196                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   197  0001                     TMR0 equ 01h ;# 
   198                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   199  0002                     PCL equ 02h ;# 
   200                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   201  0003                     STATUS equ 03h ;# 
   202                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   203  0004                     FSR equ 04h ;# 
   204                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   205  0005                     PORTA equ 05h ;# 
   206                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   207  0006                     PORTB equ 06h ;# 
   208                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   209  0007                     PORTC equ 07h ;# 
   210                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   211  0009                     PORTE equ 09h ;# 
   212                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   213  000A                     PCLATH equ 0Ah ;# 
   214                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   215  000B                     INTCON equ 0Bh ;# 
   216                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   217  000C                     PIR1 equ 0Ch ;# 
   218                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   219  000D                     PIR2 equ 0Dh ;# 
   220                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   221  000E                     TMR1 equ 0Eh ;# 
   222                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   223  000E                     TMR1L equ 0Eh ;# 
   224                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   225  000F                     TMR1H equ 0Fh ;# 
   226                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   227  0010                     T1CON equ 010h ;# 
   228                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   229  0011                     TMR2 equ 011h ;# 
   230                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   231  0012                     T2CON equ 012h ;# 
   232                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   233  0013                     SSPBUF equ 013h ;# 
   234                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   235  0014                     SSPCON equ 014h ;# 
   236                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   237  0015                     CCPR1 equ 015h ;# 
   238                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   239  0015                     CCPR1L equ 015h ;# 
   240                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   241  0016                     CCPR1H equ 016h ;# 
   242                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   243  0017                     CCP1CON equ 017h ;# 
   244                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   245  0018                     RCSTA equ 018h ;# 
   246                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   247  0019                     TXREG equ 019h ;# 
   248                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   249  001A                     RCREG equ 01Ah ;# 
   250                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   251  001B                     CCPR2 equ 01Bh ;# 
   252                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   253  001B                     CCPR2L equ 01Bh ;# 
   254                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   255  001C                     CCPR2H equ 01Ch ;# 
   256                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   257  001D                     CCP2CON equ 01Dh ;# 
   258                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   259  001E                     ADRESH equ 01Eh ;# 
   260                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   261  001F                     ADCON0 equ 01Fh ;# 
   262                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   263  0081                     OPTION_REG equ 081h ;# 
   264                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   265  0085                     TRISA equ 085h ;# 
   266                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   267  0086                     TRISB equ 086h ;# 
   268                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   269  0087                     TRISC equ 087h ;# 
   270                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   271  0089                     TRISE equ 089h ;# 
   272                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   273  008C                     PIE1 equ 08Ch ;# 
   274                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   275  008D                     PIE2 equ 08Dh ;# 
   276                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   277  008E                     PCON equ 08Eh ;# 
   278                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   279  008F                     OSCCON equ 08Fh ;# 
   280                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   281  0090                     OSCTUNE equ 090h ;# 
   282                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   283  0091                     SSPCON2 equ 091h ;# 
   284                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   285  0092                     PR2 equ 092h ;# 
   286                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   287  0093                     SSPADD equ 093h ;# 
   288                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   289  0093                     SSPMSK equ 093h ;# 
   290                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   291  0093                     MSK equ 093h ;# 
   292                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   293  0094                     SSPSTAT equ 094h ;# 
   294                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   295  0095                     WPUB equ 095h ;# 
   296                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   297  0096                     IOCB equ 096h ;# 
   298                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   299  0097                     VRCON equ 097h ;# 
   300                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   301  0098                     TXSTA equ 098h ;# 
   302                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   303  0099                     SPBRG equ 099h ;# 
   304                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   305  009A                     SPBRGH equ 09Ah ;# 
   306                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   307  009B                     PWM1CON equ 09Bh ;# 
   308                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   309  009C                     ECCPAS equ 09Ch ;# 
   310                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   311  009D                     PSTRCON equ 09Dh ;# 
   312                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   313  009E                     ADRESL equ 09Eh ;# 
   314                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   315  009F                     ADCON1 equ 09Fh ;# 
   316                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   317  0105                     WDTCON equ 0105h ;# 
   318                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   319  0107                     CM1CON0 equ 0107h ;# 
   320                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   321  0108                     CM2CON0 equ 0108h ;# 
   322                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   323  0109                     CM2CON1 equ 0109h ;# 
   324                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   325  010C                     EEDATA equ 010Ch ;# 
   326                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   327  010C                     EEDAT equ 010Ch ;# 
   328                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   329  010D                     EEADR equ 010Dh ;# 
   330                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   331  010E                     EEDATH equ 010Eh ;# 
   332                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   333  010F                     EEADRH equ 010Fh ;# 
   334                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   335  0185                     SRCON equ 0185h ;# 
   336                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   337  0187                     BAUDCTL equ 0187h ;# 
   338                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   339  0188                     ANSEL equ 0188h ;# 
   340                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   341  0189                     ANSELH equ 0189h ;# 
   342                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   343  018C                     EECON1 equ 018Ch ;# 
   344                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   345  018D                     EECON2 equ 018Dh ;# 
   346                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   347  0000                     INDF equ 00h ;# 
   348                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   349  0001                     TMR0 equ 01h ;# 
   350                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   351  0002                     PCL equ 02h ;# 
   352                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   353  0003                     STATUS equ 03h ;# 
   354                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   355  0004                     FSR equ 04h ;# 
   356                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   357  0005                     PORTA equ 05h ;# 
   358                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   359  0006                     PORTB equ 06h ;# 
   360                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   361  0007                     PORTC equ 07h ;# 
   362                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   363  0009                     PORTE equ 09h ;# 
   364                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   365  000A                     PCLATH equ 0Ah ;# 
   366                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   367  000B                     INTCON equ 0Bh ;# 
   368                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   369  000C                     PIR1 equ 0Ch ;# 
   370                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   371  000D                     PIR2 equ 0Dh ;# 
   372                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   373  000E                     TMR1 equ 0Eh ;# 
   374                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   375  000E                     TMR1L equ 0Eh ;# 
   376                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   377  000F                     TMR1H equ 0Fh ;# 
   378                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   379  0010                     T1CON equ 010h ;# 
   380                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   381  0011                     TMR2 equ 011h ;# 
   382                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   383  0012                     T2CON equ 012h ;# 
   384                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   385  0013                     SSPBUF equ 013h ;# 
   386                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   387  0014                     SSPCON equ 014h ;# 
   388                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   389  0015                     CCPR1 equ 015h ;# 
   390                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   391  0015                     CCPR1L equ 015h ;# 
   392                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   393  0016                     CCPR1H equ 016h ;# 
   394                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   395  0017                     CCP1CON equ 017h ;# 
   396                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   397  0018                     RCSTA equ 018h ;# 
   398                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   399  0019                     TXREG equ 019h ;# 
   400                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   401  001A                     RCREG equ 01Ah ;# 
   402                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   403  001B                     CCPR2 equ 01Bh ;# 
   404                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   405  001B                     CCPR2L equ 01Bh ;# 
   406                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   407  001C                     CCPR2H equ 01Ch ;# 
   408                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   409  001D                     CCP2CON equ 01Dh ;# 
   410                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   411  001E                     ADRESH equ 01Eh ;# 
   412                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   413  001F                     ADCON0 equ 01Fh ;# 
   414                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   415  0081                     OPTION_REG equ 081h ;# 
   416                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   417  0085                     TRISA equ 085h ;# 
   418                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   419  0086                     TRISB equ 086h ;# 
   420                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   421  0087                     TRISC equ 087h ;# 
   422                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   423  0089                     TRISE equ 089h ;# 
   424                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   425  008C                     PIE1 equ 08Ch ;# 
   426                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   427  008D                     PIE2 equ 08Dh ;# 
   428                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   429  008E                     PCON equ 08Eh ;# 
   430                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   431  008F                     OSCCON equ 08Fh ;# 
   432                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   433  0090                     OSCTUNE equ 090h ;# 
   434                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   435  0091                     SSPCON2 equ 091h ;# 
   436                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   437  0092                     PR2 equ 092h ;# 
   438                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   439  0093                     SSPADD equ 093h ;# 
   440                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   441  0093                     SSPMSK equ 093h ;# 
   442                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   443  0093                     MSK equ 093h ;# 
   444                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   445  0094                     SSPSTAT equ 094h ;# 
   446                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   447  0095                     WPUB equ 095h ;# 
   448                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   449  0096                     IOCB equ 096h ;# 
   450                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   451  0097                     VRCON equ 097h ;# 
   452                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   453  0098                     TXSTA equ 098h ;# 
   454                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   455  0099                     SPBRG equ 099h ;# 
   456                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   457  009A                     SPBRGH equ 09Ah ;# 
   458                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   459  009B                     PWM1CON equ 09Bh ;# 
   460                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   461  009C                     ECCPAS equ 09Ch ;# 
   462                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   463  009D                     PSTRCON equ 09Dh ;# 
   464                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   465  009E                     ADRESL equ 09Eh ;# 
   466                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   467  009F                     ADCON1 equ 09Fh ;# 
   468                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   469  0105                     WDTCON equ 0105h ;# 
   470                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   471  0107                     CM1CON0 equ 0107h ;# 
   472                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   473  0108                     CM2CON0 equ 0108h ;# 
   474                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   475  0109                     CM2CON1 equ 0109h ;# 
   476                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   477  010C                     EEDATA equ 010Ch ;# 
   478                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   479  010C                     EEDAT equ 010Ch ;# 
   480                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   481  010D                     EEADR equ 010Dh ;# 
   482                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   483  010E                     EEDATH equ 010Eh ;# 
   484                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   485  010F                     EEADRH equ 010Fh ;# 
   486                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   487  0185                     SRCON equ 0185h ;# 
   488                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   489  0187                     BAUDCTL equ 0187h ;# 
   490                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   491  0188                     ANSEL equ 0188h ;# 
   492                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   493  0189                     ANSELH equ 0189h ;# 
   494                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   495  018C                     EECON1 equ 018Ch ;# 
   496                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   497  018D                     EECON2 equ 018Dh ;# 
   498                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   499  0000                     INDF equ 00h ;# 
   500                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   501  0001                     TMR0 equ 01h ;# 
   502                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   503  0002                     PCL equ 02h ;# 
   504                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   505  0003                     STATUS equ 03h ;# 
   506                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   507  0004                     FSR equ 04h ;# 
   508                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   509  0005                     PORTA equ 05h ;# 
   510                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   511  0006                     PORTB equ 06h ;# 
   512                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   513  0007                     PORTC equ 07h ;# 
   514                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   515  0009                     PORTE equ 09h ;# 
   516                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   517  000A                     PCLATH equ 0Ah ;# 
   518                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   519  000B                     INTCON equ 0Bh ;# 
   520                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   521  000C                     PIR1 equ 0Ch ;# 
   522                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   523  000D                     PIR2 equ 0Dh ;# 
   524                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   525  000E                     TMR1 equ 0Eh ;# 
   526                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   527  000E                     TMR1L equ 0Eh ;# 
   528                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   529  000F                     TMR1H equ 0Fh ;# 
   530                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   531  0010                     T1CON equ 010h ;# 
   532                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   533  0011                     TMR2 equ 011h ;# 
   534                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   535  0012                     T2CON equ 012h ;# 
   536                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   537  0013                     SSPBUF equ 013h ;# 
   538                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   539  0014                     SSPCON equ 014h ;# 
   540                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   541  0015                     CCPR1 equ 015h ;# 
   542                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   543  0015                     CCPR1L equ 015h ;# 
   544                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   545  0016                     CCPR1H equ 016h ;# 
   546                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   547  0017                     CCP1CON equ 017h ;# 
   548                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   549  0018                     RCSTA equ 018h ;# 
   550                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   551  0019                     TXREG equ 019h ;# 
   552                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   553  001A                     RCREG equ 01Ah ;# 
   554                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   555  001B                     CCPR2 equ 01Bh ;# 
   556                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   557  001B                     CCPR2L equ 01Bh ;# 
   558                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   559  001C                     CCPR2H equ 01Ch ;# 
   560                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   561  001D                     CCP2CON equ 01Dh ;# 
   562                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   563  001E                     ADRESH equ 01Eh ;# 
   564                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   565  001F                     ADCON0 equ 01Fh ;# 
   566                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   567  0081                     OPTION_REG equ 081h ;# 
   568                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   569  0085                     TRISA equ 085h ;# 
   570                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   571  0086                     TRISB equ 086h ;# 
   572                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   573  0087                     TRISC equ 087h ;# 
   574                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   575  0089                     TRISE equ 089h ;# 
   576                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   577  008C                     PIE1 equ 08Ch ;# 
   578                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   579  008D                     PIE2 equ 08Dh ;# 
   580                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   581  008E                     PCON equ 08Eh ;# 
   582                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   583  008F                     OSCCON equ 08Fh ;# 
   584                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   585  0090                     OSCTUNE equ 090h ;# 
   586                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   587  0091                     SSPCON2 equ 091h ;# 
   588                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   589  0092                     PR2 equ 092h ;# 
   590                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   591  0093                     SSPADD equ 093h ;# 
   592                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   593  0093                     SSPMSK equ 093h ;# 
   594                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   595  0093                     MSK equ 093h ;# 
   596                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   597  0094                     SSPSTAT equ 094h ;# 
   598                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   599  0095                     WPUB equ 095h ;# 
   600                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   601  0096                     IOCB equ 096h ;# 
   602                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   603  0097                     VRCON equ 097h ;# 
   604                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   605  0098                     TXSTA equ 098h ;# 
   606                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   607  0099                     SPBRG equ 099h ;# 
   608                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   609  009A                     SPBRGH equ 09Ah ;# 
   610                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   611  009B                     PWM1CON equ 09Bh ;# 
   612                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   613  009C                     ECCPAS equ 09Ch ;# 
   614                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   615  009D                     PSTRCON equ 09Dh ;# 
   616                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   617  009E                     ADRESL equ 09Eh ;# 
   618                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   619  009F                     ADCON1 equ 09Fh ;# 
   620                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   621  0105                     WDTCON equ 0105h ;# 
   622                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   623  0107                     CM1CON0 equ 0107h ;# 
   624                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   625  0108                     CM2CON0 equ 0108h ;# 
   626                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   627  0109                     CM2CON1 equ 0109h ;# 
   628                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   629  010C                     EEDATA equ 010Ch ;# 
   630                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   631  010C                     EEDAT equ 010Ch ;# 
   632                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   633  010D                     EEADR equ 010Dh ;# 
   634                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   635  010E                     EEDATH equ 010Eh ;# 
   636                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   637  010F                     EEADRH equ 010Fh ;# 
   638                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   639  0185                     SRCON equ 0185h ;# 
   640                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   641  0187                     BAUDCTL equ 0187h ;# 
   642                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   643  0188                     ANSEL equ 0188h ;# 
   644                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   645  0189                     ANSELH equ 0189h ;# 
   646                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   647  018C                     EECON1 equ 018Ch ;# 
   648                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   649  018D                     EECON2 equ 018Dh ;# 
   650                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   651  0000                     INDF equ 00h ;# 
   652                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   653  0001                     TMR0 equ 01h ;# 
   654                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   655  0002                     PCL equ 02h ;# 
   656                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   657  0003                     STATUS equ 03h ;# 
   658                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   659  0004                     FSR equ 04h ;# 
   660                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   661  0005                     PORTA equ 05h ;# 
   662                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   663  0006                     PORTB equ 06h ;# 
   664                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   665  0007                     PORTC equ 07h ;# 
   666                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   667  0009                     PORTE equ 09h ;# 
   668                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   669  000A                     PCLATH equ 0Ah ;# 
   670                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   671  000B                     INTCON equ 0Bh ;# 
   672                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   673  000C                     PIR1 equ 0Ch ;# 
   674                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   675  000D                     PIR2 equ 0Dh ;# 
   676                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   677  000E                     TMR1 equ 0Eh ;# 
   678                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   679  000E                     TMR1L equ 0Eh ;# 
   680                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   681  000F                     TMR1H equ 0Fh ;# 
   682                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   683  0010                     T1CON equ 010h ;# 
   684                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   685  0011                     TMR2 equ 011h ;# 
   686                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   687  0012                     T2CON equ 012h ;# 
   688                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   689  0013                     SSPBUF equ 013h ;# 
   690                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   691  0014                     SSPCON equ 014h ;# 
   692                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   693  0015                     CCPR1 equ 015h ;# 
   694                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   695  0015                     CCPR1L equ 015h ;# 
   696                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   697  0016                     CCPR1H equ 016h ;# 
   698                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   699  0017                     CCP1CON equ 017h ;# 
   700                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   701  0018                     RCSTA equ 018h ;# 
   702                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   703  0019                     TXREG equ 019h ;# 
   704                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   705  001A                     RCREG equ 01Ah ;# 
   706                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   707  001B                     CCPR2 equ 01Bh ;# 
   708                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   709  001B                     CCPR2L equ 01Bh ;# 
   710                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   711  001C                     CCPR2H equ 01Ch ;# 
   712                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   713  001D                     CCP2CON equ 01Dh ;# 
   714                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   715  001E                     ADRESH equ 01Eh ;# 
   716                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   717  001F                     ADCON0 equ 01Fh ;# 
   718                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   719  0081                     OPTION_REG equ 081h ;# 
   720                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   721  0085                     TRISA equ 085h ;# 
   722                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   723  0086                     TRISB equ 086h ;# 
   724                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   725  0087                     TRISC equ 087h ;# 
   726                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   727  0089                     TRISE equ 089h ;# 
   728                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   729  008C                     PIE1 equ 08Ch ;# 
   730                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   731  008D                     PIE2 equ 08Dh ;# 
   732                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   733  008E                     PCON equ 08Eh ;# 
   734                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   735  008F                     OSCCON equ 08Fh ;# 
   736                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   737  0090                     OSCTUNE equ 090h ;# 
   738                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   739  0091                     SSPCON2 equ 091h ;# 
   740                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   741  0092                     PR2 equ 092h ;# 
   742                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   743  0093                     SSPADD equ 093h ;# 
   744                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   745  0093                     SSPMSK equ 093h ;# 
   746                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   747  0093                     MSK equ 093h ;# 
   748                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   749  0094                     SSPSTAT equ 094h ;# 
   750                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   751  0095                     WPUB equ 095h ;# 
   752                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   753  0096                     IOCB equ 096h ;# 
   754                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   755  0097                     VRCON equ 097h ;# 
   756                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   757  0098                     TXSTA equ 098h ;# 
   758                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   759  0099                     SPBRG equ 099h ;# 
   760                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   761  009A                     SPBRGH equ 09Ah ;# 
   762                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   763  009B                     PWM1CON equ 09Bh ;# 
   764                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   765  009C                     ECCPAS equ 09Ch ;# 
   766                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   767  009D                     PSTRCON equ 09Dh ;# 
   768                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   769  009E                     ADRESL equ 09Eh ;# 
   770                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   771  009F                     ADCON1 equ 09Fh ;# 
   772                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   773  0105                     WDTCON equ 0105h ;# 
   774                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   775  0107                     CM1CON0 equ 0107h ;# 
   776                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   777  0108                     CM2CON0 equ 0108h ;# 
   778                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   779  0109                     CM2CON1 equ 0109h ;# 
   780                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   781  010C                     EEDATA equ 010Ch ;# 
   782                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   783  010C                     EEDAT equ 010Ch ;# 
   784                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   785  010D                     EEADR equ 010Dh ;# 
   786                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   787  010E                     EEDATH equ 010Eh ;# 
   788                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   789  010F                     EEADRH equ 010Fh ;# 
   790                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   791  0185                     SRCON equ 0185h ;# 
   792                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   793  0187                     BAUDCTL equ 0187h ;# 
   794                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   795  0188                     ANSEL equ 0188h ;# 
   796                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   797  0189                     ANSELH equ 0189h ;# 
   798                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   799  018C                     EECON1 equ 018Ch ;# 
   800                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   801  018D                     EECON2 equ 018Dh ;# 
   802                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   803  0000                     INDF equ 00h ;# 
   804                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   805  0001                     TMR0 equ 01h ;# 
   806                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   807  0002                     PCL equ 02h ;# 
   808                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   809  0003                     STATUS equ 03h ;# 
   810                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   811  0004                     FSR equ 04h ;# 
   812                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   813  0005                     PORTA equ 05h ;# 
   814                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   815  0006                     PORTB equ 06h ;# 
   816                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   817  0007                     PORTC equ 07h ;# 
   818                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   819  0009                     PORTE equ 09h ;# 
   820                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   821  000A                     PCLATH equ 0Ah ;# 
   822                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   823  000B                     INTCON equ 0Bh ;# 
   824                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   825  000C                     PIR1 equ 0Ch ;# 
   826                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   827  000D                     PIR2 equ 0Dh ;# 
   828                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   829  000E                     TMR1 equ 0Eh ;# 
   830                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   831  000E                     TMR1L equ 0Eh ;# 
   832                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   833  000F                     TMR1H equ 0Fh ;# 
   834                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   835  0010                     T1CON equ 010h ;# 
   836                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   837  0011                     TMR2 equ 011h ;# 
   838                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   839  0012                     T2CON equ 012h ;# 
   840                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   841  0013                     SSPBUF equ 013h ;# 
   842                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   843  0014                     SSPCON equ 014h ;# 
   844                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   845  0015                     CCPR1 equ 015h ;# 
   846                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   847  0015                     CCPR1L equ 015h ;# 
   848                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   849  0016                     CCPR1H equ 016h ;# 
   850                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   851  0017                     CCP1CON equ 017h ;# 
   852                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   853  0018                     RCSTA equ 018h ;# 
   854                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   855  0019                     TXREG equ 019h ;# 
   856                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   857  001A                     RCREG equ 01Ah ;# 
   858                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   859  001B                     CCPR2 equ 01Bh ;# 
   860                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   861  001B                     CCPR2L equ 01Bh ;# 
   862                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   863  001C                     CCPR2H equ 01Ch ;# 
   864                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   865  001D                     CCP2CON equ 01Dh ;# 
   866                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   867  001E                     ADRESH equ 01Eh ;# 
   868                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   869  001F                     ADCON0 equ 01Fh ;# 
   870                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   871  0081                     OPTION_REG equ 081h ;# 
   872                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   873  0085                     TRISA equ 085h ;# 
   874                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   875  0086                     TRISB equ 086h ;# 
   876                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   877  0087                     TRISC equ 087h ;# 
   878                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   879  0089                     TRISE equ 089h ;# 
   880                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   881  008C                     PIE1 equ 08Ch ;# 
   882                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   883  008D                     PIE2 equ 08Dh ;# 
   884                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   885  008E                     PCON equ 08Eh ;# 
   886                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   887  008F                     OSCCON equ 08Fh ;# 
   888                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   889  0090                     OSCTUNE equ 090h ;# 
   890                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   891  0091                     SSPCON2 equ 091h ;# 
   892                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   893  0092                     PR2 equ 092h ;# 
   894                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   895  0093                     SSPADD equ 093h ;# 
   896                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   897  0093                     SSPMSK equ 093h ;# 
   898                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   899  0093                     MSK equ 093h ;# 
   900                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   901  0094                     SSPSTAT equ 094h ;# 
   902                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   903  0095                     WPUB equ 095h ;# 
   904                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   905  0096                     IOCB equ 096h ;# 
   906                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   907  0097                     VRCON equ 097h ;# 
   908                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   909  0098                     TXSTA equ 098h ;# 
   910                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   911  0099                     SPBRG equ 099h ;# 
   912                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   913  009A                     SPBRGH equ 09Ah ;# 
   914                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   915  009B                     PWM1CON equ 09Bh ;# 
   916                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   917  009C                     ECCPAS equ 09Ch ;# 
   918                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   919  009D                     PSTRCON equ 09Dh ;# 
   920                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   921  009E                     ADRESL equ 09Eh ;# 
   922                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   923  009F                     ADCON1 equ 09Fh ;# 
   924                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   925  0105                     WDTCON equ 0105h ;# 
   926                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   927  0107                     CM1CON0 equ 0107h ;# 
   928                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   929  0108                     CM2CON0 equ 0108h ;# 
   930                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   931  0109                     CM2CON1 equ 0109h ;# 
   932                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   933  010C                     EEDATA equ 010Ch ;# 
   934                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   935  010C                     EEDAT equ 010Ch ;# 
   936                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   937  010D                     EEADR equ 010Dh ;# 
   938                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   939  010E                     EEDATH equ 010Eh ;# 
   940                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   941  010F                     EEADRH equ 010Fh ;# 
   942                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   943  0185                     SRCON equ 0185h ;# 
   944                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   945  0187                     BAUDCTL equ 0187h ;# 
   946                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   947  0188                     ANSEL equ 0188h ;# 
   948                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   949  0189                     ANSELH equ 0189h ;# 
   950                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   951  018C                     EECON1 equ 018Ch ;# 
   952                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   953  018D                     EECON2 equ 018Dh ;# 
   954                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   955  0000                     INDF equ 00h ;# 
   956                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   957  0001                     TMR0 equ 01h ;# 
   958                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   959  0002                     PCL equ 02h ;# 
   960                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   961  0003                     STATUS equ 03h ;# 
   962                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   963  0004                     FSR equ 04h ;# 
   964                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   965  0005                     PORTA equ 05h ;# 
   966                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   967  0006                     PORTB equ 06h ;# 
   968                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   969  0007                     PORTC equ 07h ;# 
   970                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   971  0009                     PORTE equ 09h ;# 
   972                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   973  000A                     PCLATH equ 0Ah ;# 
   974                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   975  000B                     INTCON equ 0Bh ;# 
   976                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   977  000C                     PIR1 equ 0Ch ;# 
   978                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   979  000D                     PIR2 equ 0Dh ;# 
   980                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   981  000E                     TMR1 equ 0Eh ;# 
   982                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   983  000E                     TMR1L equ 0Eh ;# 
   984                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   985  000F                     TMR1H equ 0Fh ;# 
   986                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   987  0010                     T1CON equ 010h ;# 
   988                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   989  0011                     TMR2 equ 011h ;# 
   990                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   991  0012                     T2CON equ 012h ;# 
   992                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   993  0013                     SSPBUF equ 013h ;# 
   994                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   995  0014                     SSPCON equ 014h ;# 
   996                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   997  0015                     CCPR1 equ 015h ;# 
   998                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
   999  0015                     CCPR1L equ 015h ;# 
  1000                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1001  0016                     CCPR1H equ 016h ;# 
  1002                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1003  0017                     CCP1CON equ 017h ;# 
  1004                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1005  0018                     RCSTA equ 018h ;# 
  1006                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1007  0019                     TXREG equ 019h ;# 
  1008                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1009  001A                     RCREG equ 01Ah ;# 
  1010                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1011  001B                     CCPR2 equ 01Bh ;# 
  1012                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1013  001B                     CCPR2L equ 01Bh ;# 
  1014                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1015  001C                     CCPR2H equ 01Ch ;# 
  1016                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1017  001D                     CCP2CON equ 01Dh ;# 
  1018                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1019  001E                     ADRESH equ 01Eh ;# 
  1020                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1021  001F                     ADCON0 equ 01Fh ;# 
  1022                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1023  0081                     OPTION_REG equ 081h ;# 
  1024                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1025  0085                     TRISA equ 085h ;# 
  1026                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1027  0086                     TRISB equ 086h ;# 
  1028                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1029  0087                     TRISC equ 087h ;# 
  1030                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1031  0089                     TRISE equ 089h ;# 
  1032                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1033  008C                     PIE1 equ 08Ch ;# 
  1034                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1035  008D                     PIE2 equ 08Dh ;# 
  1036                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1037  008E                     PCON equ 08Eh ;# 
  1038                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1039  008F                     OSCCON equ 08Fh ;# 
  1040                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1041  0090                     OSCTUNE equ 090h ;# 
  1042                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1043  0091                     SSPCON2 equ 091h ;# 
  1044                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1045  0092                     PR2 equ 092h ;# 
  1046                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1047  0093                     SSPADD equ 093h ;# 
  1048                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1049  0093                     SSPMSK equ 093h ;# 
  1050                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1051  0093                     MSK equ 093h ;# 
  1052                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1053  0094                     SSPSTAT equ 094h ;# 
  1054                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1055  0095                     WPUB equ 095h ;# 
  1056                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1057  0096                     IOCB equ 096h ;# 
  1058                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1059  0097                     VRCON equ 097h ;# 
  1060                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1061  0098                     TXSTA equ 098h ;# 
  1062                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1063  0099                     SPBRG equ 099h ;# 
  1064                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1065  009A                     SPBRGH equ 09Ah ;# 
  1066                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1067  009B                     PWM1CON equ 09Bh ;# 
  1068                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1069  009C                     ECCPAS equ 09Ch ;# 
  1070                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1071  009D                     PSTRCON equ 09Dh ;# 
  1072                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1073  009E                     ADRESL equ 09Eh ;# 
  1074                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1075  009F                     ADCON1 equ 09Fh ;# 
  1076                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1077  0105                     WDTCON equ 0105h ;# 
  1078                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1079  0107                     CM1CON0 equ 0107h ;# 
  1080                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1081  0108                     CM2CON0 equ 0108h ;# 
  1082                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1083  0109                     CM2CON1 equ 0109h ;# 
  1084                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1085  010C                     EEDATA equ 010Ch ;# 
  1086                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1087  010C                     EEDAT equ 010Ch ;# 
  1088                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1089  010D                     EEADR equ 010Dh ;# 
  1090                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1091  010E                     EEDATH equ 010Eh ;# 
  1092                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1093  010F                     EEADRH equ 010Fh ;# 
  1094                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1095  0185                     SRCON equ 0185h ;# 
  1096                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1097  0187                     BAUDCTL equ 0187h ;# 
  1098                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1099  0188                     ANSEL equ 0188h ;# 
  1100                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1101  0189                     ANSELH equ 0189h ;# 
  1102                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1103  018C                     EECON1 equ 018Ch ;# 
  1104                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1105  018D                     EECON2 equ 018Dh ;# 
  1106                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1107  0000                     INDF equ 00h ;# 
  1108                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1109  0001                     TMR0 equ 01h ;# 
  1110                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1111  0002                     PCL equ 02h ;# 
  1112                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1113  0003                     STATUS equ 03h ;# 
  1114                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1115  0004                     FSR equ 04h ;# 
  1116                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1117  0005                     PORTA equ 05h ;# 
  1118                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1119  0006                     PORTB equ 06h ;# 
  1120                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1121  0007                     PORTC equ 07h ;# 
  1122                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1123  0009                     PORTE equ 09h ;# 
  1124                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1125  000A                     PCLATH equ 0Ah ;# 
  1126                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1127  000B                     INTCON equ 0Bh ;# 
  1128                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1129  000C                     PIR1 equ 0Ch ;# 
  1130                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1131  000D                     PIR2 equ 0Dh ;# 
  1132                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1133  000E                     TMR1 equ 0Eh ;# 
  1134                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1135  000E                     TMR1L equ 0Eh ;# 
  1136                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1137  000F                     TMR1H equ 0Fh ;# 
  1138                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1139  0010                     T1CON equ 010h ;# 
  1140                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1141  0011                     TMR2 equ 011h ;# 
  1142                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1143  0012                     T2CON equ 012h ;# 
  1144                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1145  0013                     SSPBUF equ 013h ;# 
  1146                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1147  0014                     SSPCON equ 014h ;# 
  1148                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1149  0015                     CCPR1 equ 015h ;# 
  1150                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1151  0015                     CCPR1L equ 015h ;# 
  1152                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1153  0016                     CCPR1H equ 016h ;# 
  1154                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1155  0017                     CCP1CON equ 017h ;# 
  1156                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1157  0018                     RCSTA equ 018h ;# 
  1158                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1159  0019                     TXREG equ 019h ;# 
  1160                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1161  001A                     RCREG equ 01Ah ;# 
  1162                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1163  001B                     CCPR2 equ 01Bh ;# 
  1164                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1165  001B                     CCPR2L equ 01Bh ;# 
  1166                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1167  001C                     CCPR2H equ 01Ch ;# 
  1168                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1169  001D                     CCP2CON equ 01Dh ;# 
  1170                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1171  001E                     ADRESH equ 01Eh ;# 
  1172                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1173  001F                     ADCON0 equ 01Fh ;# 
  1174                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1175  0081                     OPTION_REG equ 081h ;# 
  1176                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1177  0085                     TRISA equ 085h ;# 
  1178                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1179  0086                     TRISB equ 086h ;# 
  1180                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1181  0087                     TRISC equ 087h ;# 
  1182                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1183  0089                     TRISE equ 089h ;# 
  1184                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1185  008C                     PIE1 equ 08Ch ;# 
  1186                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1187  008D                     PIE2 equ 08Dh ;# 
  1188                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1189  008E                     PCON equ 08Eh ;# 
  1190                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1191  008F                     OSCCON equ 08Fh ;# 
  1192                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1193  0090                     OSCTUNE equ 090h ;# 
  1194                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1195  0091                     SSPCON2 equ 091h ;# 
  1196                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1197  0092                     PR2 equ 092h ;# 
  1198                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1199  0093                     SSPADD equ 093h ;# 
  1200                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1201  0093                     SSPMSK equ 093h ;# 
  1202                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1203  0093                     MSK equ 093h ;# 
  1204                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1205  0094                     SSPSTAT equ 094h ;# 
  1206                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1207  0095                     WPUB equ 095h ;# 
  1208                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1209  0096                     IOCB equ 096h ;# 
  1210                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1211  0097                     VRCON equ 097h ;# 
  1212                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1213  0098                     TXSTA equ 098h ;# 
  1214                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1215  0099                     SPBRG equ 099h ;# 
  1216                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1217  009A                     SPBRGH equ 09Ah ;# 
  1218                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1219  009B                     PWM1CON equ 09Bh ;# 
  1220                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1221  009C                     ECCPAS equ 09Ch ;# 
  1222                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1223  009D                     PSTRCON equ 09Dh ;# 
  1224                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1225  009E                     ADRESL equ 09Eh ;# 
  1226                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1227  009F                     ADCON1 equ 09Fh ;# 
  1228                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1229  0105                     WDTCON equ 0105h ;# 
  1230                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1231  0107                     CM1CON0 equ 0107h ;# 
  1232                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1233  0108                     CM2CON0 equ 0108h ;# 
  1234                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1235  0109                     CM2CON1 equ 0109h ;# 
  1236                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1237  010C                     EEDATA equ 010Ch ;# 
  1238                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1239  010C                     EEDAT equ 010Ch ;# 
  1240                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1241  010D                     EEADR equ 010Dh ;# 
  1242                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1243  010E                     EEDATH equ 010Eh ;# 
  1244                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1245  010F                     EEADRH equ 010Fh ;# 
  1246                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1247  0185                     SRCON equ 0185h ;# 
  1248                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1249  0187                     BAUDCTL equ 0187h ;# 
  1250                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1251  0188                     ANSEL equ 0188h ;# 
  1252                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1253  0189                     ANSELH equ 0189h ;# 
  1254                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1255  018C                     EECON1 equ 018Ch ;# 
  1256                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1257  018D                     EECON2 equ 018Dh ;# 
  1258                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1259  0000                     INDF equ 00h ;# 
  1260                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1261  0001                     TMR0 equ 01h ;# 
  1262                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1263  0002                     PCL equ 02h ;# 
  1264                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1265  0003                     STATUS equ 03h ;# 
  1266                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1267  0004                     FSR equ 04h ;# 
  1268                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1269  0005                     PORTA equ 05h ;# 
  1270                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1271  0006                     PORTB equ 06h ;# 
  1272                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1273  0007                     PORTC equ 07h ;# 
  1274                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1275  0009                     PORTE equ 09h ;# 
  1276                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1277  000A                     PCLATH equ 0Ah ;# 
  1278                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1279  000B                     INTCON equ 0Bh ;# 
  1280                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1281  000C                     PIR1 equ 0Ch ;# 
  1282                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1283  000D                     PIR2 equ 0Dh ;# 
  1284                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1285  000E                     TMR1 equ 0Eh ;# 
  1286                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1287  000E                     TMR1L equ 0Eh ;# 
  1288                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1289  000F                     TMR1H equ 0Fh ;# 
  1290                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1291  0010                     T1CON equ 010h ;# 
  1292                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1293  0011                     TMR2 equ 011h ;# 
  1294                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1295  0012                     T2CON equ 012h ;# 
  1296                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1297  0013                     SSPBUF equ 013h ;# 
  1298                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1299  0014                     SSPCON equ 014h ;# 
  1300                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1301  0015                     CCPR1 equ 015h ;# 
  1302                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1303  0015                     CCPR1L equ 015h ;# 
  1304                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1305  0016                     CCPR1H equ 016h ;# 
  1306                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1307  0017                     CCP1CON equ 017h ;# 
  1308                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1309  0018                     RCSTA equ 018h ;# 
  1310                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1311  0019                     TXREG equ 019h ;# 
  1312                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1313  001A                     RCREG equ 01Ah ;# 
  1314                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1315  001B                     CCPR2 equ 01Bh ;# 
  1316                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1317  001B                     CCPR2L equ 01Bh ;# 
  1318                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1319  001C                     CCPR2H equ 01Ch ;# 
  1320                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1321  001D                     CCP2CON equ 01Dh ;# 
  1322                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1323  001E                     ADRESH equ 01Eh ;# 
  1324                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1325  001F                     ADCON0 equ 01Fh ;# 
  1326                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1327  0081                     OPTION_REG equ 081h ;# 
  1328                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1329  0085                     TRISA equ 085h ;# 
  1330                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1331  0086                     TRISB equ 086h ;# 
  1332                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1333  0087                     TRISC equ 087h ;# 
  1334                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1335  0089                     TRISE equ 089h ;# 
  1336                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1337  008C                     PIE1 equ 08Ch ;# 
  1338                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1339  008D                     PIE2 equ 08Dh ;# 
  1340                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1341  008E                     PCON equ 08Eh ;# 
  1342                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1343  008F                     OSCCON equ 08Fh ;# 
  1344                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1345  0090                     OSCTUNE equ 090h ;# 
  1346                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1347  0091                     SSPCON2 equ 091h ;# 
  1348                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1349  0092                     PR2 equ 092h ;# 
  1350                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1351  0093                     SSPADD equ 093h ;# 
  1352                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1353  0093                     SSPMSK equ 093h ;# 
  1354                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1355  0093                     MSK equ 093h ;# 
  1356                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1357  0094                     SSPSTAT equ 094h ;# 
  1358                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1359  0095                     WPUB equ 095h ;# 
  1360                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1361  0096                     IOCB equ 096h ;# 
  1362                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1363  0097                     VRCON equ 097h ;# 
  1364                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1365  0098                     TXSTA equ 098h ;# 
  1366                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1367  0099                     SPBRG equ 099h ;# 
  1368                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1369  009A                     SPBRGH equ 09Ah ;# 
  1370                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1371  009B                     PWM1CON equ 09Bh ;# 
  1372                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1373  009C                     ECCPAS equ 09Ch ;# 
  1374                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1375  009D                     PSTRCON equ 09Dh ;# 
  1376                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1377  009E                     ADRESL equ 09Eh ;# 
  1378                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1379  009F                     ADCON1 equ 09Fh ;# 
  1380                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1381  0105                     WDTCON equ 0105h ;# 
  1382                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1383  0107                     CM1CON0 equ 0107h ;# 
  1384                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1385  0108                     CM2CON0 equ 0108h ;# 
  1386                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1387  0109                     CM2CON1 equ 0109h ;# 
  1388                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1389  010C                     EEDATA equ 010Ch ;# 
  1390                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1391  010C                     EEDAT equ 010Ch ;# 
  1392                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1393  010D                     EEADR equ 010Dh ;# 
  1394                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1395  010E                     EEDATH equ 010Eh ;# 
  1396                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1397  010F                     EEADRH equ 010Fh ;# 
  1398                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1399  0185                     SRCON equ 0185h ;# 
  1400                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1401  0187                     BAUDCTL equ 0187h ;# 
  1402                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1403  0188                     ANSEL equ 0188h ;# 
  1404                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1405  0189                     ANSELH equ 0189h ;# 
  1406                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1407  018C                     EECON1 equ 018Ch ;# 
  1408                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1409  018D                     EECON2 equ 018Dh ;# 
  1410                           # 46 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1411  0000                     INDF equ 00h ;# 
  1412                           # 52 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1413  0001                     TMR0 equ 01h ;# 
  1414                           # 58 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1415  0002                     PCL equ 02h ;# 
  1416                           # 64 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1417  0003                     STATUS equ 03h ;# 
  1418                           # 151 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1419  0004                     FSR equ 04h ;# 
  1420                           # 157 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1421  0005                     PORTA equ 05h ;# 
  1422                           # 218 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1423  0006                     PORTB equ 06h ;# 
  1424                           # 279 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1425  0007                     PORTC equ 07h ;# 
  1426                           # 340 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1427  0009                     PORTE equ 09h ;# 
  1428                           # 360 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1429  000A                     PCLATH equ 0Ah ;# 
  1430                           # 366 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1431  000B                     INTCON equ 0Bh ;# 
  1432                           # 443 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1433  000C                     PIR1 equ 0Ch ;# 
  1434                           # 498 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1435  000D                     PIR2 equ 0Dh ;# 
  1436                           # 554 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1437  000E                     TMR1 equ 0Eh ;# 
  1438                           # 560 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1439  000E                     TMR1L equ 0Eh ;# 
  1440                           # 566 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1441  000F                     TMR1H equ 0Fh ;# 
  1442                           # 572 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1443  0010                     T1CON equ 010h ;# 
  1444                           # 665 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1445  0011                     TMR2 equ 011h ;# 
  1446                           # 671 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1447  0012                     T2CON equ 012h ;# 
  1448                           # 741 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1449  0013                     SSPBUF equ 013h ;# 
  1450                           # 747 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1451  0014                     SSPCON equ 014h ;# 
  1452                           # 816 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1453  0015                     CCPR1 equ 015h ;# 
  1454                           # 822 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1455  0015                     CCPR1L equ 015h ;# 
  1456                           # 828 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1457  0016                     CCPR1H equ 016h ;# 
  1458                           # 834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1459  0017                     CCP1CON equ 017h ;# 
  1460                           # 930 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1461  0018                     RCSTA equ 018h ;# 
  1462                           # 1024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1463  0019                     TXREG equ 019h ;# 
  1464                           # 1030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1465  001A                     RCREG equ 01Ah ;# 
  1466                           # 1036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1467  001B                     CCPR2 equ 01Bh ;# 
  1468                           # 1042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1469  001B                     CCPR2L equ 01Bh ;# 
  1470                           # 1048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1471  001C                     CCPR2H equ 01Ch ;# 
  1472                           # 1054 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1473  001D                     CCP2CON equ 01Dh ;# 
  1474                           # 1123 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1475  001E                     ADRESH equ 01Eh ;# 
  1476                           # 1129 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1477  001F                     ADCON0 equ 01Fh ;# 
  1478                           # 1229 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1479  0081                     OPTION_REG equ 081h ;# 
  1480                           # 1298 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1481  0085                     TRISA equ 085h ;# 
  1482                           # 1359 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1483  0086                     TRISB equ 086h ;# 
  1484                           # 1420 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1485  0087                     TRISC equ 087h ;# 
  1486                           # 1481 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1487  0089                     TRISE equ 089h ;# 
  1488                           # 1501 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1489  008C                     PIE1 equ 08Ch ;# 
  1490                           # 1556 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1491  008D                     PIE2 equ 08Dh ;# 
  1492                           # 1612 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1493  008E                     PCON equ 08Eh ;# 
  1494                           # 1658 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1495  008F                     OSCCON equ 08Fh ;# 
  1496                           # 1722 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1497  0090                     OSCTUNE equ 090h ;# 
  1498                           # 1773 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1499  0091                     SSPCON2 equ 091h ;# 
  1500                           # 1834 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1501  0092                     PR2 equ 092h ;# 
  1502                           # 1840 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1503  0093                     SSPADD equ 093h ;# 
  1504                           # 1846 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1505  0093                     SSPMSK equ 093h ;# 
  1506                           # 1851 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1507  0093                     MSK equ 093h ;# 
  1508                           # 1967 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1509  0094                     SSPSTAT equ 094h ;# 
  1510                           # 2135 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1511  0095                     WPUB equ 095h ;# 
  1512                           # 2204 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1513  0096                     IOCB equ 096h ;# 
  1514                           # 2273 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1515  0097                     VRCON equ 097h ;# 
  1516                           # 2342 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1517  0098                     TXSTA equ 098h ;# 
  1518                           # 2427 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1519  0099                     SPBRG equ 099h ;# 
  1520                           # 2488 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1521  009A                     SPBRGH equ 09Ah ;# 
  1522                           # 2557 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1523  009B                     PWM1CON equ 09Bh ;# 
  1524                           # 2626 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1525  009C                     ECCPAS equ 09Ch ;# 
  1526                           # 2707 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1527  009D                     PSTRCON equ 09Dh ;# 
  1528                           # 2750 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1529  009E                     ADRESL equ 09Eh ;# 
  1530                           # 2756 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1531  009F                     ADCON1 equ 09Fh ;# 
  1532                           # 2789 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1533  0105                     WDTCON equ 0105h ;# 
  1534                           # 2841 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1535  0107                     CM1CON0 equ 0107h ;# 
  1536                           # 2905 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1537  0108                     CM2CON0 equ 0108h ;# 
  1538                           # 2969 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1539  0109                     CM2CON1 equ 0109h ;# 
  1540                           # 3019 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1541  010C                     EEDATA equ 010Ch ;# 
  1542                           # 3024 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1543  010C                     EEDAT equ 010Ch ;# 
  1544                           # 3030 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1545  010D                     EEADR equ 010Dh ;# 
  1546                           # 3036 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1547  010E                     EEDATH equ 010Eh ;# 
  1548                           # 3042 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1549  010F                     EEADRH equ 010Fh ;# 
  1550                           # 3048 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1551  0185                     SRCON equ 0185h ;# 
  1552                           # 3104 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1553  0187                     BAUDCTL equ 0187h ;# 
  1554                           # 3155 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1555  0188                     ANSEL equ 0188h ;# 
  1556                           # 3198 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1557  0189                     ANSELH equ 0189h ;# 
  1558                           # 3247 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1559  018C                     EECON1 equ 018Ch ;# 
  1560                           # 3291 "/opt/microchip/xc8/v1.20/include/pic16f886.h"
  1561  018D                     EECON2 equ 018Dh ;# 
  1562                           	FNCALL	_main,_btns_init
  1563                           	FNCALL	_main,_rs232_init
  1564                           	FNCALL	_main,_lcd_init
  1565                           	FNCALL	_main,_lcd_puts
  1566                           	FNCALL	_main,_lcd_goto
  1567                           	FNCALL	_main,_eeprom_read
  1568                           	FNCALL	_main,_eeprom_write
  1569                           	FNCALL	_main,_eeprom_gravar_word
  1570                           	FNCALL	_main,_adcon_init
  1571                           	FNCALL	_main,_timer0_init
  1572                           	FNCALL	_eeprom_gravar_word,_eeprom_write
  1573                           	FNCALL	_lcd_goto,_lcd_write
  1574                           	FNCALL	_lcd_puts,_lcd_write
  1575                           	FNCALL	_lcd_init,_lcd_write
  1576                           	FNROOT	_main
  1577                           	FNCALL	_handler,_btns_testa
  1578                           	FNCALL	_handler,_rs232_transmite
  1579                           	FNCALL	_handler,_eeprom_ler_word
  1580                           	FNCALL	_handler,_adcon_captura_grava
  1581                           	FNCALL	_handler,_estado_maquina
  1582                           	FNCALL	_estado_maquina,_estado_inicial
  1583                           	FNCALL	_estado_maquina,_estado_menu_principal
  1584                           	FNCALL	_estado_maquina,_estado_captura_mostra
  1585                           	FNCALL	_estado_maquina,_estado_ver_todos
  1586                           	FNCALL	_estado_maquina,_estado_max_min
  1587                           	FNCALL	_estado_maquina,_estado_menu_limpar
  1588                           	FNCALL	_estado_maquina,_estado_menu_conf_tempo_amostra
  1589                           	FNCALL	_estado_maquina,_estado_menu_conf_quant_sensores
  1590                           	FNCALL	_estado_menu_conf_quant_sensores,_estado_executa_muda
  1591                           	FNCALL	_estado_menu_conf_quant_sensores,i1_eeprom_write
  1592                           	FNCALL	_estado_menu_conf_tempo_amostra,_estado_executa_muda
  1593                           	FNCALL	_estado_menu_conf_tempo_amostra,i1_eeprom_gravar_word
  1594                           	FNCALL	_estado_menu_limpar,_estado_executa_muda
  1595                           	FNCALL	_estado_max_min,_estado_executa_muda
  1596                           	FNCALL	_estado_ver_todos,_estado_executa_muda
  1597                           	FNCALL	_estado_ver_todos,___lbdiv
  1598                           	FNCALL	_estado_ver_todos,i1_eeprom_read
  1599                           	FNCALL	_estado_captura_mostra,_estado_executa_muda
  1600                           	FNCALL	_estado_menu_principal,_lcd_clear
  1601                           	FNCALL	_estado_menu_principal,_eeprom_ler_word
  1602                           	FNCALL	_estado_menu_principal,_adcon_ler_canal
  1603                           	FNCALL	_estado_menu_principal,_adcon_mostra
  1604                           	FNCALL	_estado_menu_principal,_estado_executa_muda
  1605                           	FNCALL	_estado_menu_principal,___bmul
  1606                           	FNCALL	_estado_menu_principal,i1_lcd_puts
  1607                           	FNCALL	_estado_menu_principal,i1_eeprom_gravar_word
  1608                           	FNCALL	_estado_menu_principal,i1_eeprom_read
  1609                           	FNCALL	_estado_menu_principal,i1_eeprom_write
  1610                           	FNCALL	_estado_inicial,_estado_executa_muda
  1611                           	FNCALL	_estado_executa_muda,_lcd_clear
  1612                           	FNCALL	_estado_executa_muda,_eeprom_ler_word
  1613                           	FNCALL	_estado_executa_muda,_sprintf
  1614                           	FNCALL	_estado_executa_muda,___bmul
  1615                           	FNCALL	_estado_executa_muda,___lwdiv
  1616                           	FNCALL	_estado_executa_muda,___lwmod
  1617                           	FNCALL	_estado_executa_muda,i1_lcd_goto
  1618                           	FNCALL	_estado_executa_muda,i1_lcd_puts
  1619                           	FNCALL	_estado_executa_muda,i1_eeprom_gravar_word
  1620                           	FNCALL	_estado_executa_muda,i1_eeprom_read
  1621                           	FNCALL	_estado_executa_muda,i1_eeprom_write
  1622                           	FNCALL	_adcon_captura_grava,_lcd_clear
  1623                           	FNCALL	_adcon_captura_grava,_eeprom_ler_word
  1624                           	FNCALL	_adcon_captura_grava,_adcon_ler_canal
  1625                           	FNCALL	_adcon_captura_grava,_adcon_mostra
  1626                           	FNCALL	_adcon_captura_grava,___bmul
  1627                           	FNCALL	_adcon_captura_grava,i1_lcd_puts
  1628                           	FNCALL	_adcon_captura_grava,i1_eeprom_gravar_word
  1629                           	FNCALL	_adcon_captura_grava,i1_eeprom_read
  1630                           	FNCALL	_adcon_captura_grava,i1_eeprom_write
  1631                           	FNCALL	i1_eeprom_gravar_word,i1_eeprom_write
  1632                           	FNCALL	_adcon_mostra,_div
  1633                           	FNCALL	_adcon_mostra,_sprintf
  1634                           	FNCALL	_adcon_mostra,___bmul
  1635                           	FNCALL	_adcon_mostra,i1_lcd_goto
  1636                           	FNCALL	_adcon_mostra,i1_lcd_puts
  1637                           	FNCALL	i1_lcd_puts,i1_lcd_write
  1638                           	FNCALL	i1_lcd_goto,i1_lcd_write
  1639                           	FNCALL	_sprintf,___lwdiv
  1640                           	FNCALL	_sprintf,___lwmod
  1641                           	FNCALL	_div,___awdiv
  1642                           	FNCALL	_div,___awmod
  1643                           	FNCALL	_eeprom_ler_word,i1_eeprom_read
  1644                           	FNCALL	_lcd_clear,i1_lcd_write
  1645                           	FNCALL	_rs232_transmite,___bmul
  1646                           	FNCALL	_rs232_transmite,i1_eeprom_read
  1647                           	FNCALL	intlevel1,_handler
  1648                           	global	intlevel1
  1649                           	FNROOT	intlevel1
  1650                           	global	_menu_inicial
  1651                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1652                           global __pidataBANK1
  1653  14FE                     __pidataBANK1:
  1654                           	file	"menu.h"
  1655                           	line	28
  1656                           
  1657                           ;initializer for _menu_inicial
  1658  14FE  3434               	retlw	low(STR_22|8000h)
  1659  14FF  3486               	retlw	high(STR_22|8000h)
  1660                           
  1661  1500  348B               	retlw	low(STR_23|8000h)
  1662  1501  3485               	retlw	high(STR_23|8000h)
  1663                           
  1664  1502  342A               	retlw	low(STR_24|8000h)
  1665  1503  3486               	retlw	high(STR_24|8000h)
  1666                           
  1667  1504  344F               	retlw	low(STR_25|8000h)
  1668  1505  3486               	retlw	high(STR_25|8000h)
  1669                           
  1670  1506  3457               	retlw	low(STR_26|8000h)
  1671  1507  3486               	retlw	high(STR_26|8000h)
  1672                           
  1673  1508  34A9               	retlw	low(STR_27|8000h)
  1674  1509  3485               	retlw	high(STR_27|8000h)
  1675                           
  1676  150A  349A               	retlw	low(STR_28|8000h)
  1677  150B  3485               	retlw	high(STR_28|8000h)
  1678                           
  1679                           	global	_menu_tempo_amostra
  1680                           psect	stringtext,class=STRCODE,delta=2,reloc=256
  1681                           global __pstringtext
  1682  0500                     __pstringtext:
  1683  0500                     stringtab:
  1684                           	global    __stringtab
  1685  0500                     __stringtab:
  1686                           ;	String table - string pointers are 2 bytes each
  1687  0500  1BFF               	btfsc	(btemp+1),7
  1688  0501  2D0A               	ljmp	stringcode
  1689  0502  1383               	bcf	status,7
  1690  0503  187F               	btfsc	(btemp+1),0
  1691  0504  1783               	bsf	status,7
  1692  0505  0800               	movf	indf,w
  1693  0506  0A84               	incf fsr
  1694  0507  1903               skipnz
  1695  0508  0AFF               incf btemp+1
  1696  0509  0008               	return
  1697  050A                     stringcode:
  1698  050A  087F               	movf btemp+1,w
  1699  050B  397F               andlw 7Fh
  1700  050C  008A               movwf	pclath
  1701  050D  0804               	movf	fsr,w
  1702  050E  0A84               incf fsr
  1703  050F  1903               skipnz
  1704  0510  0AFF               incf btemp+1
  1705  0511  0082               	movwf pc
  1706                           	global __stringbase
  1707  0512                     __stringbase:
  1708                           	global    __end_of__stringtab
  1709  0512                     __end_of__stringtab:
  1710                           	file	"tempo_amostra.h"
  1711                           	line	23
  1712  0512                     _menu_tempo_amostra:
  1713  0512  3488               	retlw	low(STR_33|8000h)
  1714  0513  3486               	retlw	high(STR_33|8000h)
  1715                           
  1716  0514  3412               	retlw	012h
  1717  0515  3400               	retlw	0
  1718                           
  1719  0516  346C               	retlw	low(STR_34|8000h)
  1720  0517  3486               	retlw	high(STR_34|8000h)
  1721                           
  1722  0518  34B4               	retlw	0B4h
  1723  0519  3400               	retlw	0
  1724                           
  1725  051A  3473               	retlw	low(STR_35|8000h)
  1726  051B  3486               	retlw	high(STR_35|8000h)
  1727                           
  1728  051C  341C               	retlw	01Ch
  1729  051D  3402               	retlw	02h
  1730                           
  1731  051E  348E               	retlw	low(STR_36|8000h)
  1732  051F  3486               	retlw	high(STR_36|8000h)
  1733                           
  1734  0520  3438               	retlw	038h
  1735  0521  3404               	retlw	04h
  1736                           
  1737  0522  347A               	retlw	low(STR_37|8000h)
  1738  0523  3486               	retlw	high(STR_37|8000h)
  1739                           
  1740  0524  3430               	retlw	030h
  1741  0525  342A               	retlw	02Ah
  1742                           
  1743  0526  3481               	retlw	low(STR_38|8000h)
  1744  0527  3486               	retlw	high(STR_38|8000h)
  1745                           
  1746  0528  3490               	retlw	090h
  1747  0529  347E               	retlw	07Eh
  1748                           
  1749  052A  3465               	retlw	low(STR_39|8000h)
  1750  052B  3486               	retlw	high(STR_39|8000h)
  1751                           
  1752  052C  3420               	retlw	020h
  1753  052D  34FD               	retlw	0FDh
  1754                           
  1755                           	global __end_of_menu_tempo_amostra
  1756  052E                     __end_of_menu_tempo_amostra:
  1757                           	global	_menu_quant_sensores
  1758                           psect	stringtext
  1759                           	file	"quant_sensores.h"
  1760                           	line	24
  1761  052E                     _menu_quant_sensores:
  1762  052E  3446               	retlw	low(STR_29|8000h)
  1763  052F  3486               	retlw	high(STR_29|8000h)
  1764                           
  1765  0530  3401               	retlw	01h
  1766  0531  34EA               	retlw	low(STR_30|8000h)
  1767  0532  3485               	retlw	high(STR_30|8000h)
  1768                           
  1769  0533  3402               	retlw	02h
  1770  0534  34F5               	retlw	low(STR_31|8000h)
  1771  0535  3485               	retlw	high(STR_31|8000h)
  1772                           
  1773  0536  3403               	retlw	03h
  1774  0537  3400               	retlw	low(STR_32|8000h)
  1775  0538  3486               	retlw	high(STR_32|8000h)
  1776                           
  1777  0539  3404               	retlw	04h
  1778                           	global __end_of_menu_quant_sensores
  1779  053A                     __end_of_menu_quant_sensores:
  1780                           	global	_dpowers
  1781                           psect	stringtext
  1782                           	file	"/opt/microchip/xc8/v1.20/sources/common/doprnt.c"
  1783                           	line	354
  1784  053A                     _dpowers:
  1785  053A  3401               	retlw	01h
  1786  053B  3400               	retlw	0
  1787                           
  1788  053C  340A               	retlw	0Ah
  1789  053D  3400               	retlw	0
  1790                           
  1791  053E  3464               	retlw	064h
  1792  053F  3400               	retlw	0
  1793                           
  1794  0540  34E8               	retlw	0E8h
  1795  0541  3403               	retlw	03h
  1796                           
  1797  0542  3410               	retlw	010h
  1798  0543  3427               	retlw	027h
  1799                           
  1800                           	global __end_of_dpowers
  1801  0544                     __end_of_dpowers:
  1802                           	global	_LCD_POSICAO
  1803                           psect	stringtext
  1804                           	file	"lcd.h"
  1805                           	line	85
  1806  0544                     _LCD_POSICAO:
  1807  0544  3401               	retlw	01h
  1808  0545  3400               	retlw	0
  1809  0546  3401               	retlw	01h
  1810  0547  3408               	retlw	08h
  1811  0548  3402               	retlw	02h
  1812  0549  3400               	retlw	0
  1813  054A  3402               	retlw	02h
  1814  054B  3408               	retlw	08h
  1815                           	global __end_of_LCD_POSICAO
  1816  054C                     __end_of_LCD_POSICAO:
  1817                           	global	_canais
  1818                           psect	stringtext
  1819                           	file	"adcon.h"
  1820                           	line	17
  1821  054C                     _canais:
  1822  054C  3400               	retlw	0
  1823  054D  3401               	retlw	01h
  1824  054E  3402               	retlw	02h
  1825  054F  3404               	retlw	04h
  1826                           	global __end_of_canais
  1827  0550                     __end_of_canais:
  1828                           	global	_mq_gl_r0
  1829                           psect	stringtext
  1830                           	file	"mq6.h"
  1831                           	line	18
  1832  0550                     _mq_gl_r0:
  1833  0550  347A               	retlw	07Ah
  1834  0551  3401               	retlw	01h
  1835                           
  1836                           	global __end_of_mq_gl_r0
  1837  0552                     __end_of_mq_gl_r0:
  1838                           	global	exp@coeff
  1839                           psect	stringtext
  1840                           	file	"/opt/microchip/xc8/v1.20/sources/common/exp.c"
  1841                           	line	17
  1842  0552                     exp@coeff:
  1843  0552  3400               	retlw	0x0
  1844  0553  3480               	retlw	0x80
  1845  0554  343F               	retlw	0x3f
  1846                           
  1847  0555  3472               	retlw	0x72
  1848  0556  3431               	retlw	0x31
  1849  0557  343F               	retlw	0x3f
  1850                           
  1851  0558  34FE               	retlw	0xfe
  1852  0559  3475               	retlw	0x75
  1853  055A  343E               	retlw	0x3e
  1854                           
  1855  055B  3458               	retlw	0x58
  1856  055C  3463               	retlw	0x63
  1857  055D  343D               	retlw	0x3d
  1858                           
  1859  055E  3495               	retlw	0x95
  1860  055F  341D               	retlw	0x1d
  1861  0560  343C               	retlw	0x3c
  1862                           
  1863  0561  34C5               	retlw	0xc5
  1864  0562  34AE               	retlw	0xae
  1865  0563  343A               	retlw	0x3a
  1866                           
  1867  0564  3479               	retlw	0x79
  1868  0565  3421               	retlw	0x21
  1869  0566  3439               	retlw	0x39
  1870                           
  1871  0567  3494               	retlw	0x94
  1872  0568  3480               	retlw	0x80
  1873  0569  3437               	retlw	0x37
  1874                           
  1875  056A  3493               	retlw	0x93
  1876  056B  34A7               	retlw	0xa7
  1877  056C  3435               	retlw	0x35
  1878                           
  1879  056D  3456               	retlw	0x56
  1880  056E  3415               	retlw	0x15
  1881  056F  3434               	retlw	0x34
  1882                           
  1883                           	global __end_ofexp@coeff
  1884  0570                     __end_ofexp@coeff:
  1885                           	global	log@coeff
  1886                           psect	stringtext
  1887                           	file	"/opt/microchip/xc8/v1.20/sources/common/log.c"
  1888                           	line	9
  1889  0570                     log@coeff:
  1890  0570  3400               	retlw	0x0
  1891  0571  3400               	retlw	0x0
  1892  0572  3400               	retlw	0x0
  1893                           
  1894  0573  3400               	retlw	0x0
  1895  0574  3480               	retlw	0x80
  1896  0575  343F               	retlw	0x3f
  1897                           
  1898  0576  34F0               	retlw	0xf0
  1899  0577  34FF               	retlw	0xff
  1900  0578  34BE               	retlw	0xbe
  1901                           
  1902  0579  34E2               	retlw	0xe2
  1903  057A  34A9               	retlw	0xa9
  1904  057B  343E               	retlw	0x3e
  1905                           
  1906  057C  3483               	retlw	0x83
  1907  057D  3476               	retlw	0x76
  1908  057E  34BE               	retlw	0xbe
  1909                           
  1910  057F  34AE               	retlw	0xae
  1911  0580  342B               	retlw	0x2b
  1912  0581  343E               	retlw	0x3e
  1913                           
  1914  0582  343C               	retlw	0x3c
  1915  0583  34C3               	retlw	0xc3
  1916  0584  34BD               	retlw	0xbd
  1917                           
  1918  0585  34D2               	retlw	0xd2
  1919  0586  3413               	retlw	0x13
  1920  0587  343D               	retlw	0x3d
  1921                           
  1922  0588  3478               	retlw	0x78
  1923  0589  34D3               	retlw	0xd3
  1924  058A  34BB               	retlw	0xbb
  1925                           
  1926                           	global __end_oflog@coeff
  1927  058B                     __end_oflog@coeff:
  1928                           	global	_menu_tempo_amostra
  1929                           	global	_menu_quant_sensores
  1930                           	global	_dpowers
  1931                           	global	_LCD_POSICAO
  1932                           	global	_canais
  1933                           	global	_mq_gl_r0
  1934                           	global	exp@coeff
  1935                           	global	log@coeff
  1936                           	global	_gl_item_menu_config_sensores
  1937                           	global	_gl_item_menu_principal
  1938                           	global	mq_mostra@F1739
  1939                           	global	mq_mostra@F1741
  1940                           	global	adcon_mostra@F1828
  1941                           	global	_errno
  1942                           	global	_gl_item_menu_config_amostra
  1943                           	global	handler@count_t0
  1944                           	global	_gl_estado
  1945                           	global	_gl_item_menu_ver_todos
  1946                           	global	estado_executa_muda@F1751
  1947                           	global	_ADCON0bits
  1948  001F                     _ADCON0bits	set	0x1F
  1949                           	global	_ADRESH
  1950  001E                     _ADRESH	set	0x1E
  1951                           	global	_INTCONbits
  1952  000B                     _INTCONbits	set	0xB
  1953                           	global	_PIR1bits
  1954  000C                     _PIR1bits	set	0xC
  1955                           	global	_RCREG
  1956  001A                     _RCREG	set	0x1A
  1957                           	global	_TMR0
  1958  0001                     _TMR0	set	0x1
  1959                           	global	_TXREG
  1960  0019                     _TXREG	set	0x19
  1961                           	global	_CARRY
  1962  0018                     _CARRY	set	0x18
  1963                           	global	_CREN
  1964  00C4                     _CREN	set	0xC4
  1965                           	global	_GIE
  1966  005F                     _GIE	set	0x5F
  1967                           	global	_RB0
  1968  0030                     _RB0	set	0x30
  1969                           	global	_RB1
  1970  0031                     _RB1	set	0x31
  1971                           	global	_RB2
  1972  0032                     _RB2	set	0x32
  1973                           	global	_RB4
  1974  0034                     _RB4	set	0x34
  1975                           	global	_RB5
  1976  0035                     _RB5	set	0x35
  1977                           	global	_RB6
  1978  0036                     _RB6	set	0x36
  1979                           	global	_RB7
  1980  0037                     _RB7	set	0x37
  1981                           	global	_RBIE
  1982  005B                     _RBIE	set	0x5B
  1983                           	global	_RBIF
  1984  0058                     _RBIF	set	0x58
  1985                           	global	_RC0
  1986  0038                     _RC0	set	0x38
  1987                           	global	_RC1
  1988  0039                     _RC1	set	0x39
  1989                           	global	_RC2
  1990  003A                     _RC2	set	0x3A
  1991                           	global	_SPEN
  1992  00C7                     _SPEN	set	0xC7
  1993                           	global	_ADCON1bits
  1994  009F                     _ADCON1bits	set	0x9F
  1995                           	global	_ADRESL
  1996  009E                     _ADRESL	set	0x9E
  1997                           	global	_IOCB
  1998  0096                     _IOCB	set	0x96
  1999                           	global	_OPTION_REGbits
  2000  0081                     _OPTION_REGbits	set	0x81
  2001                           	global	_PIE1bits
  2002  008C                     _PIE1bits	set	0x8C
  2003                           	global	_SPBRG
  2004  0099                     _SPBRG	set	0x99
  2005                           	global	_TRISA
  2006  0085                     _TRISA	set	0x85
  2007                           	global	_WPUB
  2008  0095                     _WPUB	set	0x95
  2009                           	global	_BRGH
  2010  04C2                     _BRGH	set	0x4C2
  2011                           	global	_SYNC
  2012  04C4                     _SYNC	set	0x4C4
  2013                           	global	_TRISB0
  2014  0430                     _TRISB0	set	0x430
  2015                           	global	_TRISB1
  2016  0431                     _TRISB1	set	0x431
  2017                           	global	_TRISB2
  2018  0432                     _TRISB2	set	0x432
  2019                           	global	_TRISB4
  2020  0434                     _TRISB4	set	0x434
  2021                           	global	_TRISB5
  2022  0435                     _TRISB5	set	0x435
  2023                           	global	_TRISB6
  2024  0436                     _TRISB6	set	0x436
  2025                           	global	_TRISB7
  2026  0437                     _TRISB7	set	0x437
  2027                           	global	_TRISC0
  2028  0438                     _TRISC0	set	0x438
  2029                           	global	_TRISC1
  2030  0439                     _TRISC1	set	0x439
  2031                           	global	_TRISC2
  2032  043A                     _TRISC2	set	0x43A
  2033                           	global	_TRISC6
  2034  043E                     _TRISC6	set	0x43E
  2035                           	global	_TRISC7
  2036  043F                     _TRISC7	set	0x43F
  2037                           	global	_TX9
  2038  04C6                     _TX9	set	0x4C6
  2039                           	global	_TXEN
  2040  04C5                     _TXEN	set	0x4C5
  2041                           	global	_EEADR
  2042  010D                     _EEADR	set	0x10D
  2043                           	global	_EEDATA
  2044  010C                     _EEDATA	set	0x10C
  2045                           	global	_ANSEL
  2046  0188                     _ANSEL	set	0x188
  2047                           	global	_ANSELH
  2048  0189                     _ANSELH	set	0x189
  2049                           	global	_EECON1
  2050  018C                     _EECON1	set	0x18C
  2051                           	global	_EECON2
  2052  018D                     _EECON2	set	0x18D
  2053                           	global	_BRG16
  2054  0C3B                     _BRG16	set	0xC3B
  2055                           	global	_RD
  2056  0C60                     _RD	set	0xC60
  2057                           	global	_WR
  2058  0C61                     _WR	set	0xC61
  2059                           	global	_WREN
  2060  0C62                     _WREN	set	0xC62
  2061                           	global __stringdata
  2062  058B                     __stringdata:
  2063                           	
  2064  058B                     STR_23:	
  2065  058B  344D               	retlw	77	;'M'
  2066  058C  346F               	retlw	111	;'o'
  2067  058D  346E               	retlw	110	;'n'
  2068  058E  3469               	retlw	105	;'i'
  2069  058F  3474               	retlw	116	;'t'
  2070  0590  346F               	retlw	111	;'o'
  2071  0591  3472               	retlw	114	;'r'
  2072  0592  3461               	retlw	97	;'a'
  2073  0593  342F               	retlw	47	;'/'
  2074  0594  3447               	retlw	71	;'G'
  2075  0595  3472               	retlw	114	;'r'
  2076  0596  3461               	retlw	97	;'a'
  2077  0597  3476               	retlw	118	;'v'
  2078  0598  3461               	retlw	97	;'a'
  2079  0599  3400               	retlw	0
  2080                           psect	stringtext
  2081                           	
  2082  059A                     STR_28:	
  2083  059A  3451               	retlw	81	;'Q'
  2084  059B  3475               	retlw	117	;'u'
  2085  059C  3461               	retlw	97	;'a'
  2086  059D  346E               	retlw	110	;'n'
  2087  059E  3474               	retlw	116	;'t'
  2088  059F  3420               	retlw	32	;' '
  2089  05A0  3453               	retlw	83	;'S'
  2090  05A1  3465               	retlw	101	;'e'
  2091  05A2  346E               	retlw	110	;'n'
  2092  05A3  3473               	retlw	115	;'s'
  2093  05A4  346F               	retlw	111	;'o'
  2094  05A5  3472               	retlw	114	;'r'
  2095  05A6  3465               	retlw	101	;'e'
  2096  05A7  3473               	retlw	115	;'s'
  2097  05A8  3400               	retlw	0
  2098                           psect	stringtext
  2099                           	
  2100  05A9                     STR_27:	
  2101  05A9  3454               	retlw	84	;'T'
  2102  05AA  3465               	retlw	101	;'e'
  2103  05AB  346D               	retlw	109	;'m'
  2104  05AC  3470               	retlw	112	;'p'
  2105  05AD  346F               	retlw	111	;'o'
  2106  05AE  3420               	retlw	32	;' '
  2107  05AF  3441               	retlw	65	;'A'
  2108  05B0  346D               	retlw	109	;'m'
  2109  05B1  346F               	retlw	111	;'o'
  2110  05B2  3473               	retlw	115	;'s'
  2111  05B3  3474               	retlw	116	;'t'
  2112  05B4  3472               	retlw	114	;'r'
  2113  05B5  3461               	retlw	97	;'a'
  2114  05B6  3400               	retlw	0
  2115                           psect	stringtext
  2116                           	
  2117  05B7                     STR_15:	
  2118  05B7  344D               	retlw	77	;'M'
  2119  05B8  3465               	retlw	101	;'e'
  2120  05B9  346D               	retlw	109	;'m'
  2121  05BA  346F               	retlw	111	;'o'
  2122  05BB  3472               	retlw	114	;'r'
  2123  05BC  3469               	retlw	105	;'i'
  2124  05BD  3461               	retlw	97	;'a'
  2125  05BE  3420               	retlw	32	;' '
  2126  05BF  3443               	retlw	67	;'C'
  2127  05C0  3468               	retlw	104	;'h'
  2128  05C1  3465               	retlw	101	;'e'
  2129  05C2  3469               	retlw	105	;'i'
  2130  05C3  3461               	retlw	97	;'a'
  2131  05C4  3400               	retlw	0
  2132                           psect	stringtext
  2133                           	
  2134  05C5                     STR_1:	
  2135  05C5  3449               	retlw	73	;'I'
  2136  05C6  346E               	retlw	110	;'n'
  2137  05C7  3469               	retlw	105	;'i'
  2138  05C8  3463               	retlw	99	;'c'
  2139  05C9  3469               	retlw	105	;'i'
  2140  05CA  346F               	retlw	111	;'o'
  2141  05CB  3420               	retlw	32	;' '
  2142  05CC  3476               	retlw	118	;'v'
  2143  05CD  3431               	retlw	49	;'1'
  2144  05CE  342E               	retlw	46	;'.'
  2145  05CF  3435               	retlw	53	;'5'
  2146  05D0  3430               	retlw	48	;'0'
  2147  05D1  342D               	retlw	45	;'-'
  2148  05D2  3400               	retlw	0
  2149                           psect	stringtext
  2150                           	
  2151  05D3                     STR_41:	
  2152  05D3  344E               	retlw	78	;'N'
  2153  05D4  3465               	retlw	101	;'e'
  2154  05D5  346E               	retlw	110	;'n'
  2155  05D6  3468               	retlw	104	;'h'
  2156  05D7  3475               	retlw	117	;'u'
  2157  05D8  346D               	retlw	109	;'m'
  2158  05D9  3420               	retlw	32	;' '
  2159  05DA  3444               	retlw	68	;'D'
  2160  05DB  3461               	retlw	97	;'a'
  2161  05DC  3464               	retlw	100	;'d'
  2162  05DD  346F               	retlw	111	;'o'
  2163  05DE  3400               	retlw	0
  2164                           psect	stringtext
  2165                           	
  2166  05DF                     STR_46:	
  2167  05DF  3454               	retlw	84	;'T'
  2168  05E0  3475               	retlw	117	;'u'
  2169  05E1  3464               	retlw	100	;'d'
  2170  05E2  346F               	retlw	111	;'o'
  2171  05E3  3420               	retlw	32	;' '
  2172  05E4  344C               	retlw	76	;'L'
  2173  05E5  3469               	retlw	105	;'i'
  2174  05E6  346D               	retlw	109	;'m'
  2175  05E7  3470               	retlw	112	;'p'
  2176  05E8  346F               	retlw	111	;'o'
  2177  05E9  3400               	retlw	0
  2178                           psect	stringtext
  2179                           	
  2180  05EA                     STR_12:	
  2181  05EA  3432               	retlw	50	;'2'
  2182  05EB  3420               	retlw	32	;' '
  2183  05EC  3473               	retlw	115	;'s'
  2184  05ED  3465               	retlw	101	;'e'
  2185  05EE  346E               	retlw	110	;'n'
  2186  05EF  3473               	retlw	115	;'s'
  2187  05F0  346F               	retlw	111	;'o'
  2188  05F1  3472               	retlw	114	;'r'
  2189  05F2  3465               	retlw	101	;'e'
  2190  05F3  3473               	retlw	115	;'s'
  2191  05F4  3400               	retlw	0
  2192                           psect	stringtext
  2193                           	
  2194  05F5                     STR_13:	
  2195  05F5  3433               	retlw	51	;'3'
  2196  05F6  3420               	retlw	32	;' '
  2197  05F7  3473               	retlw	115	;'s'
  2198  05F8  3465               	retlw	101	;'e'
  2199  05F9  346E               	retlw	110	;'n'
  2200  05FA  3473               	retlw	115	;'s'
  2201  05FB  346F               	retlw	111	;'o'
  2202  05FC  3472               	retlw	114	;'r'
  2203  05FD  3465               	retlw	101	;'e'
  2204  05FE  3473               	retlw	115	;'s'
  2205  05FF  3400               	retlw	0
  2206                           psect	stringtext
  2207                           	
  2208  0600                     STR_14:	
  2209  0600  3434               	retlw	52	;'4'
  2210  0601  3420               	retlw	32	;' '
  2211  0602  3473               	retlw	115	;'s'
  2212  0603  3465               	retlw	101	;'e'
  2213  0604  346E               	retlw	110	;'n'
  2214  0605  3473               	retlw	115	;'s'
  2215  0606  346F               	retlw	111	;'o'
  2216  0607  3472               	retlw	114	;'r'
  2217  0608  3465               	retlw	101	;'e'
  2218  0609  3473               	retlw	115	;'s'
  2219  060A  3400               	retlw	0
  2220                           psect	stringtext
  2221                           	
  2222  060B                     STR_3:	
  2223  060B  3431               	retlw	49	;'1'
  2224  060C  3432               	retlw	50	;'2'
  2225  060D  342F               	retlw	47	;'/'
  2226  060E  3430               	retlw	48	;'0'
  2227  060F  3432               	retlw	50	;'2'
  2228  0610  342F               	retlw	47	;'/'
  2229  0611  3432               	retlw	50	;'2'
  2230  0612  3430               	retlw	48	;'0'
  2231  0613  3431               	retlw	49	;'1'
  2232  0614  3436               	retlw	54	;'6'
  2233  0615  3400               	retlw	0
  2234                           psect	stringtext
  2235                           	
  2236  0616                     STR_45:	
  2237  0616  344D               	retlw	77	;'M'
  2238  0617  3469               	retlw	105	;'i'
  2239  0618  346E               	retlw	110	;'n'
  2240  0619  343D               	retlw	61	;'='
  2241  061A  3425               	retlw	37	;'%'
  2242  061B  3464               	retlw	100	;'d'
  2243  061C  342E               	retlw	46	;'.'
  2244  061D  3425               	retlw	37	;'%'
  2245  061E  3464               	retlw	100	;'d'
  2246  061F  3400               	retlw	0
  2247                           psect	stringtext
  2248                           	
  2249  0620                     STR_44:	
  2250  0620  344D               	retlw	77	;'M'
  2251  0621  3461               	retlw	97	;'a'
  2252  0622  3478               	retlw	120	;'x'
  2253  0623  343D               	retlw	61	;'='
  2254  0624  3425               	retlw	37	;'%'
  2255  0625  3464               	retlw	100	;'d'
  2256  0626  342E               	retlw	46	;'.'
  2257  0627  3425               	retlw	37	;'%'
  2258  0628  3464               	retlw	100	;'d'
  2259  0629  3400               	retlw	0
  2260                           psect	stringtext
  2261                           	
  2262  062A                     STR_24:	
  2263  062A  3456               	retlw	86	;'V'
  2264  062B  3465               	retlw	101	;'e'
  2265  062C  3472               	retlw	114	;'r'
  2266  062D  3420               	retlw	32	;' '
  2267  062E  3454               	retlw	84	;'T'
  2268  062F  346F               	retlw	111	;'o'
  2269  0630  3464               	retlw	100	;'d'
  2270  0631  346F               	retlw	111	;'o'
  2271  0632  3473               	retlw	115	;'s'
  2272  0633  3400               	retlw	0
  2273                           psect	stringtext
  2274                           	
  2275  0634                     STR_22:	
  2276  0634  344D               	retlw	77	;'M'
  2277  0635  346F               	retlw	111	;'o'
  2278  0636  346E               	retlw	110	;'n'
  2279  0637  3469               	retlw	105	;'i'
  2280  0638  3474               	retlw	116	;'t'
  2281  0639  346F               	retlw	111	;'o'
  2282  063A  3472               	retlw	114	;'r'
  2283  063B  3461               	retlw	97	;'a'
  2284  063C  3400               	retlw	0
  2285                           psect	stringtext
  2286                           	
  2287  063D                     STR_16:	
  2288  063D  3425               	retlw	37	;'%'
  2289  063E  3464               	retlw	100	;'d'
  2290  063F  343D               	retlw	61	;'='
  2291  0640  3425               	retlw	37	;'%'
  2292  0641  3464               	retlw	100	;'d'
  2293  0642  342E               	retlw	46	;'.'
  2294  0643  3425               	retlw	37	;'%'
  2295  0644  3464               	retlw	100	;'d'
  2296  0645  3400               	retlw	0
  2297                           psect	stringtext
  2298                           	
  2299  0646                     STR_11:	
  2300  0646  3431               	retlw	49	;'1'
  2301  0647  3420               	retlw	32	;' '
  2302  0648  3473               	retlw	115	;'s'
  2303  0649  3465               	retlw	101	;'e'
  2304  064A  346E               	retlw	110	;'n'
  2305  064B  3473               	retlw	115	;'s'
  2306  064C  346F               	retlw	111	;'o'
  2307  064D  3472               	retlw	114	;'r'
  2308  064E  3400               	retlw	0
  2309                           psect	stringtext
  2310                           	
  2311  064F                     STR_25:	
  2312  064F  344D               	retlw	77	;'M'
  2313  0650  3461               	retlw	97	;'a'
  2314  0651  3478               	retlw	120	;'x'
  2315  0652  342F               	retlw	47	;'/'
  2316  0653  344D               	retlw	77	;'M'
  2317  0654  3469               	retlw	105	;'i'
  2318  0655  346E               	retlw	110	;'n'
  2319  0656  3400               	retlw	0
  2320                           psect	stringtext
  2321                           	
  2322  0657                     STR_26:	
  2323  0657  344C               	retlw	76	;'L'
  2324  0658  3469               	retlw	105	;'i'
  2325  0659  346D               	retlw	109	;'m'
  2326  065A  3470               	retlw	112	;'p'
  2327  065B  3461               	retlw	97	;'a'
  2328  065C  3472               	retlw	114	;'r'
  2329  065D  3400               	retlw	0
  2330                           psect	stringtext
  2331                           	
  2332  065E                     STR_21:	
  2333  065E  3470               	retlw	112	;'p'
  2334  065F  3470               	retlw	112	;'p'
  2335  0660  346D               	retlw	109	;'m'
  2336  0661  343D               	retlw	61	;'='
  2337  0662  3425               	retlw	37	;'%'
  2338  0663  3475               	retlw	117	;'u'
  2339  0664  3400               	retlw	0
  2340                           psect	stringtext
  2341                           	
  2342  0665                     STR_10:	
  2343  0665  3431               	retlw	49	;'1'
  2344  0666  3420               	retlw	32	;' '
  2345  0667  3468               	retlw	104	;'h'
  2346  0668  346F               	retlw	111	;'o'
  2347  0669  3472               	retlw	114	;'r'
  2348  066A  3461               	retlw	97	;'a'
  2349  066B  3400               	retlw	0
  2350                           psect	stringtext
  2351                           	
  2352  066C                     STR_5:	
  2353  066C  3431               	retlw	49	;'1'
  2354  066D  3430               	retlw	48	;'0'
  2355  066E  3420               	retlw	32	;' '
  2356  066F  3473               	retlw	115	;'s'
  2357  0670  3465               	retlw	101	;'e'
  2358  0671  3467               	retlw	103	;'g'
  2359  0672  3400               	retlw	0
  2360                           psect	stringtext
  2361                           	
  2362  0673                     STR_6:	
  2363  0673  3433               	retlw	51	;'3'
  2364  0674  3430               	retlw	48	;'0'
  2365  0675  3420               	retlw	32	;' '
  2366  0676  3473               	retlw	115	;'s'
  2367  0677  3465               	retlw	101	;'e'
  2368  0678  3467               	retlw	103	;'g'
  2369  0679  3400               	retlw	0
  2370                           psect	stringtext
  2371                           	
  2372  067A                     STR_8:	
  2373  067A  3431               	retlw	49	;'1'
  2374  067B  3430               	retlw	48	;'0'
  2375  067C  3420               	retlw	32	;' '
  2376  067D  346D               	retlw	109	;'m'
  2377  067E  3469               	retlw	105	;'i'
  2378  067F  346E               	retlw	110	;'n'
  2379  0680  3400               	retlw	0
  2380                           psect	stringtext
  2381                           	
  2382  0681                     STR_9:	
  2383  0681  3433               	retlw	51	;'3'
  2384  0682  3430               	retlw	48	;'0'
  2385  0683  3420               	retlw	32	;' '
  2386  0684  346D               	retlw	109	;'m'
  2387  0685  3469               	retlw	105	;'i'
  2388  0686  346E               	retlw	110	;'n'
  2389  0687  3400               	retlw	0
  2390                           psect	stringtext
  2391                           	
  2392  0688                     STR_4:	
  2393  0688  3431               	retlw	49	;'1'
  2394  0689  3420               	retlw	32	;' '
  2395  068A  3473               	retlw	115	;'s'
  2396  068B  3465               	retlw	101	;'e'
  2397  068C  3467               	retlw	103	;'g'
  2398  068D  3400               	retlw	0
  2399                           psect	stringtext
  2400                           	
  2401  068E                     STR_7:	
  2402  068E  3431               	retlw	49	;'1'
  2403  068F  3420               	retlw	32	;' '
  2404  0690  346D               	retlw	109	;'m'
  2405  0691  3469               	retlw	105	;'i'
  2406  0692  346E               	retlw	110	;'n'
  2407  0693  3400               	retlw	0
  2408                           psect	stringtext
  2409                           	
  2410  0694                     STR_2:	
  2411  0694  344E               	retlw	78	;'N'
  2412  0695  3400               	retlw	0
  2413                           psect	stringtext
  2414  0600                     STR_20	equ	STR_14+0
  2415  0600                     STR_32	equ	STR_14+0
  2416  05F5                     STR_19	equ	STR_13+0
  2417  05F5                     STR_31	equ	STR_13+0
  2418  05EA                     STR_18	equ	STR_12+0
  2419  05EA                     STR_30	equ	STR_12+0
  2420  0646                     STR_17	equ	STR_11+0
  2421  0646                     STR_29	equ	STR_11+0
  2422  05D3                     STR_43	equ	STR_41+0
  2423  068E                     STR_36	equ	STR_7+0
  2424  0681                     STR_38	equ	STR_9+0
  2425  067A                     STR_37	equ	STR_8+0
  2426  0688                     STR_33	equ	STR_4+0
  2427  0673                     STR_35	equ	STR_6+0
  2428  066C                     STR_34	equ	STR_5+0
  2429  063D                     STR_42	equ	STR_16+0
  2430  0665                     STR_39	equ	STR_10+0
  2431  05B7                     STR_40	equ	STR_15+0
  2432                           	global __end_of__stringdata
  2433  0696                     __end_of__stringdata:
  2434                           ; #config settings
  2435                           global __CFG_BOREN$OFF
  2436  0000                     __CFG_BOREN$OFF equ 0x0
  2437                           global __CFG_FOSC$XT
  2438  0000                     __CFG_FOSC$XT equ 0x0
  2439                           global __CFG_WDTE$OFF
  2440  0000                     __CFG_WDTE$OFF equ 0x0
  2441                           global __CFG_CP$OFF
  2442  0000                     __CFG_CP$OFF equ 0x0
  2443                           global __CFG_LVP$OFF
  2444  0000                     __CFG_LVP$OFF equ 0x0
  2445                           global __CFG_PWRTE$ON
  2446  0000                     __CFG_PWRTE$ON equ 0x0
  2447                           	file	"/tmp/cgtBWKWLd"
  2448                           	line	#
  2449                           psect cinit,class=CODE,delta=2
  2450                           global start_initialization
  2451  162B                     start_initialization:
  2452                           
  2453                           global __initialization
  2454  162B                     __initialization:
  2455                           psect	bssBANK0,class=BANK0,space=1,noexec
  2456                           global __pbssBANK0
  2457  006E                     __pbssBANK0:
  2458  006E                     _gl_item_menu_config_sensores:
  2459  006E                            ds      1
  2460                           
  2461  006F                     _gl_item_menu_principal:
  2462  006F                            ds      1
  2463                           
  2464                           psect	bssBANK1,class=BANK1,space=1,noexec
  2465                           global __pbssBANK1
  2466  00A0                     __pbssBANK1:
  2467  00A0                     mq_mostra@F1739:
  2468  00A0                            ds      16
  2469                           
  2470  00B0                     mq_mostra@F1741:
  2471  00B0                            ds      16
  2472                           
  2473  00C0                     adcon_mostra@F1828:
  2474  00C0                            ds      9
  2475                           
  2476  00C9                     _errno:
  2477  00C9                            ds      2
  2478                           
  2479  00CB                     _gl_item_menu_config_amostra:
  2480  00CB                            ds      2
  2481                           
  2482  00CD                     handler@count_t0:
  2483  00CD                            ds      2
  2484                           
  2485  00CF                     _gl_estado:
  2486  00CF                            ds      1
  2487                           
  2488  00D0                     _gl_item_menu_ver_todos:
  2489  00D0                            ds      1
  2490                           
  2491                           psect	dataBANK1,class=BANK1,space=1,noexec
  2492                           global __pdataBANK1
  2493  00D1                     __pdataBANK1:
  2494                           	file	"menu.h"
  2495                           	line	28
  2496  00D1                     _menu_inicial:
  2497  00D1                            ds      14
  2498                           
  2499                           psect	bssBANK3,class=BANK3,space=1,noexec
  2500                           global __pbssBANK3
  2501  0190                     __pbssBANK3:
  2502  0190                     estado_executa_muda@F1751:
  2503  0190                            ds      17
  2504                           
  2505                           psect clrtext,class=CODE,delta=2
  2506                           global clear_ram0
  2507                           ;	Called with FSR containing the base address, and
  2508                           ;	W with the last address+1
  2509  14E9                     clear_ram0:
  2510  14E9  0064               	clrwdt			;clear the watchdog before getting into this loop
  2511  14EA                     clrloop0:
  2512  14EA  0180               	clrf	indf		;clear RAM location pointed to by FSR
  2513  14EB  0A84               	incf	fsr,f		;increment pointer
  2514  14EC  0604               	xorwf	fsr,w		;XOR with final address
  2515  14ED  1903               	btfsc	status,2	;have we reached the end yet?
  2516  14EE  3400               	retlw	0		;all done for this memory range, return
  2517  14EF  0604               	xorwf	fsr,w		;XOR again to restore value
  2518  14F0  2CEA               	goto	clrloop0		;do the next byte
  2519                           
  2520                           ; Clear objects allocated to BANK0
  2521                           psect cinit,class=CODE,delta=2,merge=1
  2522  162B  01EE               	clrf	((__pbssBANK0)+0)&07Fh
  2523  162C  01EF               	clrf	((__pbssBANK0)+1)&07Fh
  2524                           ; Clear objects allocated to BANK1
  2525                           psect cinit,class=CODE,delta=2,merge=1
  2526  162D  1383               	bcf	status, 7	;select IRP bank0
  2527  162E  30A0               	movlw	low(__pbssBANK1)
  2528  162F  0084               	movwf	fsr
  2529  1630  30D1               	movlw	low((__pbssBANK1)+031h)
  2530  1631  160A  118A  24E9   	fcall	clear_ram0
              160A  118A         
  2531                           ; Clear objects allocated to BANK3
  2532                           psect cinit,class=CODE,delta=2,merge=1
  2533  1636  1783               	bsf	status, 7	;select IRP bank2
  2534  1637  3090               	movlw	low(__pbssBANK3)
  2535  1638  0084               	movwf	fsr
  2536  1639  30A1               	movlw	low((__pbssBANK3)+011h)
  2537  163A  160A  118A  24E9   	fcall	clear_ram0
              160A  118A         
  2538                           global btemp
  2539                           psect inittext,class=CODE,delta=2
  2540                           global init_fetch0,btemp
  2541                           ;	Called with low address in FSR and high address in W
  2542  1540                     init_fetch0:
  2543  1540  087E               	movf btemp,w
  2544  1541  008A               	movwf pclath
  2545  1542  087F               	movf btemp+1,w
  2546  1543  0082               	movwf pc
  2547                           global init_ram0
  2548                           ;Called with:
  2549                           ;	high address of idata address in btemp 
  2550                           ;	low address of idata address in btemp+1 
  2551                           ;	low address of data in FSR
  2552                           ;	high address + 1 of data in btemp-1
  2553  1544                     init_ram0:
  2554  1544  160A  118A  2540   	fcall init_fetch0
              160A  118A         
  2555  1549  0080               	movwf indf,f
  2556  154A  0A84               	incf fsr,f
  2557  154B  0804               	movf fsr,w
  2558  154C  067D               	xorwf btemp-1,w
  2559  154D  1903               	btfsc status,2
  2560  154E  3400               	retlw 0
  2561  154F  0AFF               	incf btemp+1,f
  2562  1550  1903               	btfsc status,2
  2563  1551  0AFE               	incf btemp,f
  2564  1552  2D44               	goto init_ram0
  2565                           ; Initialize objects allocated to BANK1
  2566                           psect cinit,class=CODE,delta=2,merge=1
  2567                           global init_ram0, __pidataBANK1
  2568  163F  1383               	bcf	status, 7	;select IRP bank0
  2569  1640  30DF               	movlw low(__pdataBANK1+14)
  2570  1641  00FD               	movwf btemp-1,f
  2571  1642  3014               	movlw high(__pidataBANK1)
  2572  1643  00FE               	movwf btemp,f
  2573  1644  30FE               	movlw low(__pidataBANK1)
  2574  1645  00FF               	movwf btemp+1,f
  2575  1646  30D1               	movlw low(__pdataBANK1)
  2576  1647  0084               	movwf fsr,f
  2577  1648  160A  118A  2544   	fcall init_ram0
              160A  118A         
  2578                           psect cinit,class=CODE,delta=2,merge=1
  2579                           global end_of_initialization,__end_of__initialization
  2580                           
  2581                           ;End of C runtime variable initialization code
  2582                           
  2583  164D                     end_of_initialization:
  2584  164D                     __end_of__initialization:clrf status
      + 164D  0183               	clrf	3
  2585  164E  120A  158A  2E1B   ljmp _main	;jump to C main() function
  2586                           psect	cstackBANK3,class=BANK3,space=1,noexec
  2587                           global __pcstackBANK3
  2588  01A1                     __pcstackBANK3:
  2589  01A1                     ??_main:	; 0 bytes @ 0x0
  2590  01A1                     	ds	1
  2591                           	global	main@i
  2592  01A2                     main@i:	; 1 bytes @ 0x1
  2593  01A2                     	ds	1
  2594                           psect	cstackBANK1,class=BANK1,space=1,noexec
  2595                           global __pcstackBANK1
  2596  00DF                     __pcstackBANK1:
  2597                           	global	handler@tempo_amostra
  2598  00DF                     handler@tempo_amostra:	; 2 bytes @ 0x0
  2599  00DF                     	ds	2
  2600                           	global	handler@pos_taxa
  2601  00E1                     handler@pos_taxa:	; 2 bytes @ 0x2
  2602  00E1                     	ds	2
  2603                           	global	handler@option
  2604  00E3                     handler@option:	; 1 bytes @ 0x4
  2605  00E3                     	ds	1
  2606  00E4                     ??_btns_init:	; 0 bytes @ 0x5
  2607  00E4                     ??_rs232_init:	; 0 bytes @ 0x5
  2608  00E4                     ??_eeprom_read:	; 0 bytes @ 0x5
  2609                           	global	?_eeprom_write
  2610  00E4                     ?_eeprom_write:	; 0 bytes @ 0x5
  2611  00E4                     ??_adcon_init:	; 0 bytes @ 0x5
  2612  00E4                     ??_timer0_init:	; 0 bytes @ 0x5
  2613  00E4                     ??_lcd_write:	; 0 bytes @ 0x5
  2614                           	global	eeprom_write@value
  2615  00E4                     eeprom_write@value:	; 1 bytes @ 0x5
  2616  00E4                     	ds	1
  2617  00E5                     ??_eeprom_write:	; 0 bytes @ 0x6
  2618                           	global	lcd_write@c
  2619  00E5                     lcd_write@c:	; 1 bytes @ 0x6
  2620                           	global	eeprom_read@addr
  2621  00E5                     eeprom_read@addr:	; 1 bytes @ 0x6
  2622  00E5                     	ds	1
  2623  00E6                     ??_lcd_init:	; 0 bytes @ 0x7
  2624                           	global	?_lcd_puts
  2625  00E6                     ?_lcd_puts:	; 0 bytes @ 0x7
  2626                           	global	?_lcd_goto
  2627  00E6                     ?_lcd_goto:	; 0 bytes @ 0x7
  2628                           	global	lcd_goto@x
  2629  00E6                     lcd_goto@x:	; 1 bytes @ 0x7
  2630                           	global	eeprom_write@addr
  2631  00E6                     eeprom_write@addr:	; 1 bytes @ 0x7
  2632                           	global	lcd_puts@str
  2633  00E6                     lcd_puts@str:	; 2 bytes @ 0x7
  2634  00E6                     	ds	1
  2635  00E7                     ??_lcd_goto:	; 0 bytes @ 0x8
  2636                           	global	?_eeprom_gravar_word
  2637  00E7                     ?_eeprom_gravar_word:	; 0 bytes @ 0x8
  2638                           	global	eeprom_gravar_word@dado
  2639  00E7                     eeprom_gravar_word@dado:	; 2 bytes @ 0x8
  2640  00E7                     	ds	1
  2641  00E8                     ??_lcd_puts:	; 0 bytes @ 0x9
  2642                           	global	lcd_goto@y
  2643  00E8                     lcd_goto@y:	; 1 bytes @ 0x9
  2644  00E8                     	ds	1
  2645  00E9                     ??_eeprom_gravar_word:	; 0 bytes @ 0xA
  2646  00E9                     	ds	1
  2647                           	global	lcd_puts@cmd
  2648  00EA                     lcd_puts@cmd:	; 1 bytes @ 0xB
  2649                           	global	eeprom_gravar_word@end
  2650  00EA                     eeprom_gravar_word@end:	; 1 bytes @ 0xB
  2651  00EA                     	ds	1
  2652                           psect	cstackCOMMON,class=COMMON,space=1,noexec
  2653                           global __pcstackCOMMON
  2654  0070                     __pcstackCOMMON:
  2655  0070                     ?_btns_init:	; 0 bytes @ 0x0
  2656  0070                     ?_rs232_init:	; 0 bytes @ 0x0
  2657  0070                     ?_lcd_init:	; 0 bytes @ 0x0
  2658  0070                     ?_adcon_init:	; 0 bytes @ 0x0
  2659  0070                     ?_timer0_init:	; 0 bytes @ 0x0
  2660  0070                     ?_adcon_captura_grava:	; 0 bytes @ 0x0
  2661  0070                     ?_estado_maquina:	; 0 bytes @ 0x0
  2662  0070                     ?_estado_inicial:	; 0 bytes @ 0x0
  2663  0070                     ?_estado_menu_principal:	; 0 bytes @ 0x0
  2664  0070                     ?_estado_captura_mostra:	; 0 bytes @ 0x0
  2665  0070                     ?_estado_ver_todos:	; 0 bytes @ 0x0
  2666  0070                     ?_estado_max_min:	; 0 bytes @ 0x0
  2667  0070                     ?_estado_menu_limpar:	; 0 bytes @ 0x0
  2668  0070                     ?_estado_menu_conf_tempo_amostra:	; 0 bytes @ 0x0
  2669  0070                     ?_estado_menu_conf_quant_sensores:	; 0 bytes @ 0x0
  2670  0070                     ?_estado_executa_muda:	; 0 bytes @ 0x0
  2671  0070                     ?_lcd_write:	; 0 bytes @ 0x0
  2672  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
  2673  0070                     ??_btns_testa:	; 0 bytes @ 0x0
  2674  0070                     ?_handler:	; 0 bytes @ 0x0
  2675  0070                     ?i1_lcd_write:	; 0 bytes @ 0x0
  2676  0070                     ??i1_lcd_write:	; 0 bytes @ 0x0
  2677  0070                     ??i1_eeprom_read:	; 0 bytes @ 0x0
  2678                           	global	?i1_eeprom_write
  2679  0070                     ?i1_eeprom_write:	; 0 bytes @ 0x0
  2680  0070                     ?_eeprom_read:	; 1 bytes @ 0x0
  2681  0070                     ?_rs232_transmite:	; 1 bytes @ 0x0
  2682  0070                     ?_btns_testa:	; 1 bytes @ 0x0
  2683                           	global	?___bmul
  2684  0070                     ?___bmul:	; 1 bytes @ 0x0
  2685  0070                     ?i1_eeprom_read:	; 1 bytes @ 0x0
  2686                           	global	?_adcon_ler_canal
  2687  0070                     ?_adcon_ler_canal:	; 2 bytes @ 0x0
  2688  0070                     ?_main:	; 2 bytes @ 0x0
  2689                           	global	?___awdiv
  2690  0070                     ?___awdiv:	; 2 bytes @ 0x0
  2691                           	global	?___awmod
  2692  0070                     ?___awmod:	; 2 bytes @ 0x0
  2693                           	global	?___lwdiv
  2694  0070                     ?___lwdiv:	; 2 bytes @ 0x0
  2695  0070                     estado_inicial@opt:	; 1 bytes @ 0x0
  2696                           	global	___bmul@multiplicand
  2697  0070                     ___bmul@multiplicand:	; 1 bytes @ 0x0
  2698                           	global	i1eeprom_write@value
  2699  0070                     i1eeprom_write@value:	; 1 bytes @ 0x0
  2700                           	global	___awdiv@divisor
  2701  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
  2702                           	global	___awmod@divisor
  2703  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
  2704                           	global	___lwdiv@divisor
  2705  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
  2706  0070                     	ds	1
  2707  0071                     ??___bmul:	; 0 bytes @ 0x1
  2708  0071                     ??i1_eeprom_write:	; 0 bytes @ 0x1
  2709                           	global	i1lcd_write@c
  2710  0071                     i1lcd_write@c:	; 1 bytes @ 0x1
  2711                           	global	i1eeprom_read@addr
  2712  0071                     i1eeprom_read@addr:	; 1 bytes @ 0x1
  2713  0071                     	ds	1
  2714  0072                     ??_adcon_ler_canal:	; 0 bytes @ 0x2
  2715  0072                     ??_lcd_clear:	; 0 bytes @ 0x2
  2716                           	global	?i1_lcd_goto
  2717  0072                     ?i1_lcd_goto:	; 0 bytes @ 0x2
  2718                           	global	?___lbdiv
  2719  0072                     ?___lbdiv:	; 1 bytes @ 0x2
  2720                           	global	?_eeprom_ler_word
  2721  0072                     ?_eeprom_ler_word:	; 2 bytes @ 0x2
  2722                           	global	___bmul@product
  2723  0072                     ___bmul@product:	; 1 bytes @ 0x2
  2724                           	global	___lbdiv@divisor
  2725  0072                     ___lbdiv@divisor:	; 1 bytes @ 0x2
  2726                           	global	i1lcd_goto@x
  2727  0072                     i1lcd_goto@x:	; 1 bytes @ 0x2
  2728                           	global	i1eeprom_write@addr
  2729  0072                     i1eeprom_write@addr:	; 1 bytes @ 0x2
  2730                           	global	___awdiv@dividend
  2731  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
  2732                           	global	___awmod@dividend
  2733  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
  2734                           	global	___lwdiv@dividend
  2735  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
  2736  0072                     	ds	1
  2737  0073                     ??___lbdiv:	; 0 bytes @ 0x3
  2738  0073                     ??i1_lcd_goto:	; 0 bytes @ 0x3
  2739                           	global	?i1_eeprom_gravar_word
  2740  0073                     ?i1_eeprom_gravar_word:	; 0 bytes @ 0x3
  2741                           	global	___bmul@multiplier
  2742  0073                     ___bmul@multiplier:	; 1 bytes @ 0x3
  2743                           	global	i1eeprom_gravar_word@dado
  2744  0073                     i1eeprom_gravar_word@dado:	; 2 bytes @ 0x3
  2745  0073                     	ds	1
  2746  0074                     ??_rs232_transmite:	; 0 bytes @ 0x4
  2747  0074                     ??_eeprom_ler_word:	; 0 bytes @ 0x4
  2748  0074                     ??___awdiv:	; 0 bytes @ 0x4
  2749  0074                     ??___awmod:	; 0 bytes @ 0x4
  2750  0074                     ??___lwdiv:	; 0 bytes @ 0x4
  2751                           	global	?i1_lcd_puts
  2752  0074                     ?i1_lcd_puts:	; 0 bytes @ 0x4
  2753                           	global	___lbdiv@dividend
  2754  0074                     ___lbdiv@dividend:	; 1 bytes @ 0x4
  2755                           	global	i1lcd_goto@y
  2756  0074                     i1lcd_goto@y:	; 1 bytes @ 0x4
  2757                           	global	i1lcd_puts@str
  2758  0074                     i1lcd_puts@str:	; 2 bytes @ 0x4
  2759  0074                     	ds	1
  2760  0075                     ??i1_eeprom_gravar_word:	; 0 bytes @ 0x5
  2761                           	global	___awdiv@counter
  2762  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
  2763                           	global	___awmod@counter
  2764  0075                     ___awmod@counter:	; 1 bytes @ 0x5
  2765                           	global	___lbdiv@counter
  2766  0075                     ___lbdiv@counter:	; 1 bytes @ 0x5
  2767                           	global	___lwdiv@quotient
  2768  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
  2769  0075                     	ds	1
  2770  0076                     ??i1_lcd_puts:	; 0 bytes @ 0x6
  2771                           	global	adcon_ler_canal@cnl
  2772  0076                     adcon_ler_canal@cnl:	; 1 bytes @ 0x6
  2773                           	global	eeprom_ler_word@end
  2774  0076                     eeprom_ler_word@end:	; 1 bytes @ 0x6
  2775                           	global	rs232_transmite@qtd_val
  2776  0076                     rs232_transmite@qtd_val:	; 1 bytes @ 0x6
  2777                           	global	___awdiv@sign
  2778  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
  2779                           	global	___awmod@sign
  2780  0076                     ___awmod@sign:	; 1 bytes @ 0x6
  2781                           	global	___lbdiv@quotient
  2782  0076                     ___lbdiv@quotient:	; 1 bytes @ 0x6
  2783                           	global	i1eeprom_gravar_word@end
  2784  0076                     i1eeprom_gravar_word@end:	; 1 bytes @ 0x6
  2785  0076                     	ds	1
  2786                           	global	rs232_transmite@qtd_sens
  2787  0077                     rs232_transmite@qtd_sens:	; 1 bytes @ 0x7
  2788                           	global	___lwdiv@counter
  2789  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
  2790                           	global	eeprom_ler_word@temp_int
  2791  0077                     eeprom_ler_word@temp_int:	; 2 bytes @ 0x7
  2792                           	global	___awdiv@quotient
  2793  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
  2794                           	global	adcon_ler_canal@acc
  2795  0077                     adcon_ler_canal@acc:	; 4 bytes @ 0x7
  2796  0077                     	ds	1
  2797                           	global	?___lwmod
  2798  0078                     ?___lwmod:	; 2 bytes @ 0x8
  2799                           	global	rs232_transmite@qtd_bytes
  2800  0078                     rs232_transmite@qtd_bytes:	; 1 bytes @ 0x8
  2801                           	global	i1lcd_puts@cmd
  2802  0078                     i1lcd_puts@cmd:	; 1 bytes @ 0x8
  2803                           	global	___lwmod@divisor
  2804  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
  2805  0078                     	ds	1
  2806                           	global	?_div
  2807  0079                     ?_div:	; 4 bytes @ 0x9
  2808                           	global	rs232_transmite@x
  2809  0079                     rs232_transmite@x:	; 1 bytes @ 0x9
  2810                           	global	div@number
  2811  0079                     div@number:	; 2 bytes @ 0x9
  2812  0079                     	ds	1
  2813                           	global	rs232_transmite@i
  2814  007A                     rs232_transmite@i:	; 1 bytes @ 0xA
  2815                           	global	___lwmod@dividend
  2816  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
  2817  007A                     	ds	1
  2818                           	global	adcon_ler_canal@i
  2819  007B                     adcon_ler_canal@i:	; 2 bytes @ 0xB
  2820                           	global	div@denom
  2821  007B                     div@denom:	; 2 bytes @ 0xB
  2822  007B                     	ds	1
  2823  007C                     ??___lwmod:	; 0 bytes @ 0xC
  2824  007C                     	ds	1
  2825  007D                     ??_div:	; 0 bytes @ 0xD
  2826                           	global	___lwmod@counter
  2827  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
  2828  007D                     	ds	1
  2829  007E                     ??_estado_maquina:	; 0 bytes @ 0xE
  2830  007E                     ??_estado_inicial:	; 0 bytes @ 0xE
  2831  007E                     ??_estado_captura_mostra:	; 0 bytes @ 0xE
  2832  007E                     ??_estado_max_min:	; 0 bytes @ 0xE
  2833  007E                     ??_estado_menu_limpar:	; 0 bytes @ 0xE
  2834  007E                     ??_estado_menu_conf_tempo_amostra:	; 0 bytes @ 0xE
  2835                           psect	cstackBANK0,class=BANK0,space=1,noexec
  2836                           global __pcstackBANK0
  2837  0020                     __pcstackBANK0:
  2838                           	global	?_sprintf
  2839  0020                     ?_sprintf:	; 2 bytes @ 0x0
  2840                           	global	sprintf@f
  2841  0020                     sprintf@f:	; 2 bytes @ 0x0
  2842                           	global	div@rv
  2843  0020                     div@rv:	; 4 bytes @ 0x0
  2844  0020                     	ds	8
  2845  0028                     ??_sprintf:	; 0 bytes @ 0x8
  2846  0028                     	ds	3
  2847                           	global	sprintf@prec
  2848  002B                     sprintf@prec:	; 1 bytes @ 0xB
  2849  002B                     	ds	1
  2850                           	global	sprintf@ap
  2851  002C                     sprintf@ap:	; 1 bytes @ 0xC
  2852  002C                     	ds	1
  2853                           	global	sprintf@flag
  2854  002D                     sprintf@flag:	; 1 bytes @ 0xD
  2855  002D                     	ds	1
  2856                           	global	sprintf@_val
  2857  002E                     sprintf@_val:	; 4 bytes @ 0xE
  2858  002E                     	ds	4
  2859                           	global	sprintf@sp
  2860  0032                     sprintf@sp:	; 1 bytes @ 0x12
  2861  0032                     	ds	1
  2862                           	global	sprintf@c
  2863  0033                     sprintf@c:	; 1 bytes @ 0x13
  2864  0033                     	ds	1
  2865                           	global	?_adcon_mostra
  2866  0034                     ?_adcon_mostra:	; 0 bytes @ 0x14
  2867  0034                     ??_estado_executa_muda:	; 0 bytes @ 0x14
  2868                           	global	adcon_mostra@t_int
  2869  0034                     adcon_mostra@t_int:	; 2 bytes @ 0x14
  2870  0034                     	ds	2
  2871                           	global	adcon_mostra@i
  2872  0036                     adcon_mostra@i:	; 1 bytes @ 0x16
  2873  0036                     	ds	1
  2874  0037                     ??_adcon_mostra:	; 0 bytes @ 0x17
  2875  0037                     	ds	1
  2876                           	global	estado_executa_muda@tmp
  2877  0038                     estado_executa_muda@tmp:	; 17 bytes @ 0x18
  2878  0038                     	ds	3
  2879                           	global	adcon_mostra@temp_str
  2880  003B                     adcon_mostra@temp_str:	; 9 bytes @ 0x1B
  2881  003B                     	ds	9
  2882                           	global	adcon_mostra@temp_div
  2883  0044                     adcon_mostra@temp_div:	; 4 bytes @ 0x24
  2884  0044                     	ds	4
  2885  0048                     ??_adcon_captura_grava:	; 0 bytes @ 0x28
  2886  0048                     	ds	1
  2887                           	global	estado_executa_muda@qtd_val
  2888  0049                     estado_executa_muda@qtd_val:	; 1 bytes @ 0x29
  2889  0049                     	ds	1
  2890                           	global	estado_executa_muda@posicao
  2891  004A                     estado_executa_muda@posicao:	; 1 bytes @ 0x2A
  2892                           	global	adcon_captura_grava@maior
  2893  004A                     adcon_captura_grava@maior:	; 2 bytes @ 0x2A
  2894  004A                     	ds	1
  2895                           	global	estado_executa_muda@temp_int
  2896  004B                     estado_executa_muda@temp_int:	; 2 bytes @ 0x2B
  2897  004B                     	ds	1
  2898                           	global	adcon_captura_grava@menor
  2899  004C                     adcon_captura_grava@menor:	; 2 bytes @ 0x2C
  2900  004C                     	ds	1
  2901                           	global	estado_executa_muda@novo_estado
  2902  004D                     estado_executa_muda@novo_estado:	; 1 bytes @ 0x2D
  2903  004D                     	ds	1
  2904                           	global	estado_executa_muda@qtd_sens
  2905  004E                     estado_executa_muda@qtd_sens:	; 1 bytes @ 0x2E
  2906                           	global	adcon_captura_grava@x
  2907  004E                     adcon_captura_grava@x:	; 2 bytes @ 0x2E
  2908  004E                     	ds	1
  2909                           	global	estado_executa_muda@endereco
  2910  004F                     estado_executa_muda@endereco:	; 1 bytes @ 0x2F
  2911  004F                     	ds	1
  2912                           	global	adcon_captura_grava@posicao
  2913  0050                     adcon_captura_grava@posicao:	; 1 bytes @ 0x30
  2914                           	global	estado_executa_muda@maior
  2915  0050                     estado_executa_muda@maior:	; 2 bytes @ 0x30
  2916  0050                     	ds	1
  2917                           	global	adcon_captura_grava@qtd_sens
  2918  0051                     adcon_captura_grava@qtd_sens:	; 1 bytes @ 0x31
  2919  0051                     	ds	1
  2920                           	global	adcon_captura_grava@qtd_val
  2921  0052                     adcon_captura_grava@qtd_val:	; 1 bytes @ 0x32
  2922                           	global	estado_executa_muda@menor
  2923  0052                     estado_executa_muda@menor:	; 2 bytes @ 0x32
  2924  0052                     	ds	1
  2925                           	global	adcon_captura_grava@i
  2926  0053                     adcon_captura_grava@i:	; 1 bytes @ 0x33
  2927  0053                     	ds	1
  2928                           	global	adcon_captura_grava@i_536
  2929  0054                     adcon_captura_grava@i_536:	; 1 bytes @ 0x34
  2930                           	global	_estado_executa_muda$1447
  2931  0054                     _estado_executa_muda$1447:	; 2 bytes @ 0x34
  2932  0054                     	ds	1
  2933                           	global	adcon_captura_grava@t_int
  2934  0055                     adcon_captura_grava@t_int:	; 2 bytes @ 0x35
  2935  0055                     	ds	1
  2936                           	global	_estado_executa_muda$1448
  2937  0056                     _estado_executa_muda$1448:	; 2 bytes @ 0x36
  2938  0056                     	ds	2
  2939                           	global	estado_executa_muda@i_835
  2940  0058                     estado_executa_muda@i_835:	; 1 bytes @ 0x38
  2941  0058                     	ds	1
  2942                           	global	estado_executa_muda@i
  2943  0059                     estado_executa_muda@i:	; 1 bytes @ 0x39
  2944  0059                     	ds	1
  2945  005A                     ??_estado_menu_principal:	; 0 bytes @ 0x3A
  2946  005A                     ??_estado_ver_todos:	; 0 bytes @ 0x3A
  2947  005A                     ??_estado_menu_conf_quant_sensores:	; 0 bytes @ 0x3A
  2948                           	global	estado_menu_limpar@opt
  2949  005A                     estado_menu_limpar@opt:	; 1 bytes @ 0x3A
  2950                           	global	estado_captura_mostra@opt
  2951  005A                     estado_captura_mostra@opt:	; 1 bytes @ 0x3A
  2952                           	global	estado_max_min@opt
  2953  005A                     estado_max_min@opt:	; 1 bytes @ 0x3A
  2954                           	global	estado_menu_conf_tempo_amostra@opt
  2955  005A                     estado_menu_conf_tempo_amostra@opt:	; 1 bytes @ 0x3A
  2956  005A                     	ds	1
  2957                           	global	estado_ver_todos@opt
  2958  005B                     estado_ver_todos@opt:	; 1 bytes @ 0x3B
  2959                           	global	estado_menu_conf_quant_sensores@opt
  2960  005B                     estado_menu_conf_quant_sensores@opt:	; 1 bytes @ 0x3B
  2961  005B                     	ds	1
  2962                           	global	estado_menu_principal@maior
  2963  005C                     estado_menu_principal@maior:	; 2 bytes @ 0x3C
  2964  005C                     	ds	2
  2965                           	global	estado_menu_principal@menor
  2966  005E                     estado_menu_principal@menor:	; 2 bytes @ 0x3E
  2967  005E                     	ds	2
  2968                           	global	estado_menu_principal@opt
  2969  0060                     estado_menu_principal@opt:	; 1 bytes @ 0x40
  2970  0060                     	ds	1
  2971                           	global	estado_menu_principal@posicao
  2972  0061                     estado_menu_principal@posicao:	; 1 bytes @ 0x41
  2973  0061                     	ds	1
  2974                           	global	estado_menu_principal@qtd_sens
  2975  0062                     estado_menu_principal@qtd_sens:	; 1 bytes @ 0x42
  2976  0062                     	ds	1
  2977                           	global	estado_menu_principal@qtd_val
  2978  0063                     estado_menu_principal@qtd_val:	; 1 bytes @ 0x43
  2979  0063                     	ds	1
  2980                           	global	estado_menu_principal@i
  2981  0064                     estado_menu_principal@i:	; 1 bytes @ 0x44
  2982  0064                     	ds	1
  2983                           	global	estado_menu_principal@i_806
  2984  0065                     estado_menu_principal@i_806:	; 1 bytes @ 0x45
  2985  0065                     	ds	1
  2986                           	global	estado_menu_principal@t_int
  2987  0066                     estado_menu_principal@t_int:	; 2 bytes @ 0x46
  2988  0066                     	ds	2
  2989                           	global	estado_maquina@op
  2990  0068                     estado_maquina@op:	; 1 bytes @ 0x48
  2991  0068                     	ds	1
  2992  0069                     ??_handler:	; 0 bytes @ 0x49
  2993  0069                     	ds	5
  2994                           ;!
  2995                           ;!Data Sizes:
  2996                           ;!    Strings     267
  2997                           ;!    Constant    121
  2998                           ;!    Data        14
  2999                           ;!    BSS         68
  3000                           ;!    Persistent  0
  3001                           ;!    Stack       0
  3002                           ;!
  3003                           ;!Auto Spaces:
  3004                           ;!    Space          Size  Autos    Used
  3005                           ;!    COMMON           14     14      14
  3006                           ;!    BANK0            80     78      80
  3007                           ;!    BANK1            80     12      75
  3008                           ;!    BANK3            96      2      19
  3009                           ;!    BANK2            96      0       0
  3010                           
  3011                           ;!
  3012                           ;!Pointer List with Targets:
  3013                           ;!
  3014                           ;!    ?___awmod	int  size(1) Largest target is 0
  3015                           ;!
  3016                           ;!    ?___awdiv	int  size(1) Largest target is 0
  3017                           ;!
  3018                           ;!    ?___lwdiv	unsigned int  size(1) Largest target is 0
  3019                           ;!
  3020                           ;!    ?___lwmod	unsigned int  size(1) Largest target is 0
  3021                           ;!
  3022                           ;!    ?_eeprom_ler_word	unsigned int  size(1) Largest target is 0
  3023                           ;!
  3024                           ;!    ?_div	struct . size(1) Largest target is 0
  3025                           ;!
  3026                           ;!    ?_adcon_ler_canal	unsigned int  size(1) Largest target is 0
  3027                           ;!
  3028                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
  3029                           ;!		 -> STR_45(CODE[10]), STR_44(CODE[10]), STR_42(CODE[9]), STR_21(CODE[7]), 
  3030                           ;!		 -> STR_16(CODE[9]), 
  3031                           ;!
  3032                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
  3033                           ;!		 -> estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@
                                 temp_str(BANK0[9]), 
  3034                           ;!
  3035                           ;!    ?_sprintf	int  size(1) Largest target is 0
  3036                           ;!
  3037                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  3038                           ;!		 -> ?_sprintf(BANK0[2]), 
  3039                           ;!
  3040                           ;!    S854$_cp	PTR const unsigned char  size(1) Largest target is 0
  3041                           ;!
  3042                           ;!    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  3043                           ;!
  3044                           ;!    menu_inicial	PTR const unsigned char [7] size(2) Largest target is 15
  3045                           ;!		 -> STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[7]), STR_25(CODE[8]), 
  3046                           ;!		 -> STR_24(CODE[10]), STR_23(CODE[15]), STR_22(CODE[9]), 
  3047                           ;!
  3048                           ;!    S397$str_quant_sensores	PTR const unsigned char  size(2) Largest target is 11
  3049                           ;!		 -> STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[11]), STR_29(CODE[9]), 
  3050                           ;!		 -> STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[9]), 
  3051                           ;!		 -> STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[9]), 
  3052                           ;!
  3053                           ;!    menu_quant_sensores.str_quant_sensores	PTR const unsigned char  size(2) Largest ta
                                 rget is 11
  3054                           ;!		 -> STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[11]), STR_29(CODE[9]), 
  3055                           ;!		 -> STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[9]), 
  3056                           ;!		 -> STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[9]), 
  3057                           ;!
  3058                           ;!    S235$str_tempo_amostra	PTR const unsigned char  size(2) Largest target is 7
  3059                           ;!		 -> STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[7]), STR_36(CODE[6]), 
  3060                           ;!		 -> STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[6]), STR_10(CODE[7]), 
  3061                           ;!		 -> STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[7]), 
  3062                           ;!		 -> STR_5(CODE[7]), STR_4(CODE[6]), 
  3063                           ;!
  3064                           ;!    menu_tempo_amostra.str_tempo_amostra	PTR const unsigned char  size(2) Largest targ
                                 et is 7
  3065                           ;!		 -> STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[7]), STR_36(CODE[6]), 
  3066                           ;!		 -> STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[6]), STR_10(CODE[7]), 
  3067                           ;!		 -> STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[7]), 
  3068                           ;!		 -> STR_5(CODE[7]), STR_4(CODE[6]), 
  3069                           ;!
  3070                           ;!    lcd_puts@str	PTR const unsigned char  size(2) Largest target is 17
  3071                           ;!		 -> STR_46(CODE[11]), STR_43(CODE[12]), STR_41(CODE[12]), estado_executa_muda@tmp(BA
                                 NK0[17]), 
  3072                           ;!		 -> STR_40(CODE[14]), STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[7]), 
  3073                           ;!		 -> STR_36(CODE[6]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[6]), 
  3074                           ;!		 -> STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[11]), STR_29(CODE[9]), 
  3075                           ;!		 -> STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[7]), STR_25(CODE[8]), 
  3076                           ;!		 -> STR_24(CODE[10]), STR_23(CODE[15]), STR_22(CODE[9]), mq_mostra@temp_str(BANK0[16
                                 ]), 
  3077                           ;!		 -> STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[9]), 
  3078                           ;!		 -> adcon_mostra@temp_str(BANK0[9]), STR_15(CODE[14]), STR_14(CODE[11]), STR_13(CODE
                                 [11]), 
  3079                           ;!		 -> STR_12(CODE[11]), STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[7]), 
  3080                           ;!		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[7]), STR_5(CODE[7]), 
  3081                           ;!		 -> STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[2]), STR_1(CODE[14]), 
  3082                           ;!
  3083                           
  3084                           
  3085                           ;!
  3086                           ;!Critical Paths under _main in COMMON
  3087                           ;!
  3088                           ;!    None.
  3089                           ;!
  3090                           ;!Critical Paths under _handler in COMMON
  3091                           ;!
  3092                           ;!    ___lbdiv->i1_eeprom_read
  3093                           ;!    _estado_executa_muda->___lwmod
  3094                           ;!    i1_eeprom_gravar_word->i1_eeprom_write
  3095                           ;!    i1_lcd_puts->___bmul
  3096                           ;!    i1_lcd_goto->i1_lcd_write
  3097                           ;!    _sprintf->___lwmod
  3098                           ;!    ___lwmod->___lwdiv
  3099                           ;!    _div->___awdiv
  3100                           ;!    _eeprom_ler_word->i1_eeprom_read
  3101                           ;!    _lcd_clear->i1_lcd_write
  3102                           ;!    _rs232_transmite->___bmul
  3103                           ;!
  3104                           ;!Critical Paths under _main in BANK0
  3105                           ;!
  3106                           ;!    None.
  3107                           ;!
  3108                           ;!Critical Paths under _handler in BANK0
  3109                           ;!
  3110                           ;!    _handler->_estado_maquina
  3111                           ;!    _estado_maquina->_estado_menu_principal
  3112                           ;!    _estado_menu_conf_quant_sensores->_estado_executa_muda
  3113                           ;!    _estado_menu_conf_tempo_amostra->_estado_executa_muda
  3114                           ;!    _estado_menu_limpar->_estado_executa_muda
  3115                           ;!    _estado_max_min->_estado_executa_muda
  3116                           ;!    _estado_ver_todos->_estado_executa_muda
  3117                           ;!    _estado_captura_mostra->_estado_executa_muda
  3118                           ;!    _estado_menu_principal->_estado_executa_muda
  3119                           ;!    _estado_inicial->_estado_executa_muda
  3120                           ;!    _estado_executa_muda->_sprintf
  3121                           ;!    _adcon_captura_grava->_adcon_mostra
  3122                           ;!    _adcon_mostra->_sprintf
  3123                           ;!
  3124                           ;!Critical Paths under _main in BANK1
  3125                           ;!
  3126                           ;!    _main->_lcd_puts
  3127                           ;!    _main->_eeprom_gravar_word
  3128                           ;!    _eeprom_gravar_word->_eeprom_write
  3129                           ;!    _lcd_goto->_lcd_write
  3130                           ;!    _lcd_puts->_lcd_write
  3131                           ;!    _lcd_init->_lcd_write
  3132                           ;!
  3133                           ;!Critical Paths under _handler in BANK1
  3134                           ;!
  3135                           ;!    None.
  3136                           ;!
  3137                           ;!Critical Paths under _main in BANK3
  3138                           ;!
  3139                           ;!    None.
  3140                           ;!
  3141                           ;!Critical Paths under _handler in BANK3
  3142                           ;!
  3143                           ;!    None.
  3144                           ;!
  3145                           ;!Critical Paths under _main in BANK2
  3146                           ;!
  3147                           ;!    None.
  3148                           ;!
  3149                           ;!Critical Paths under _handler in BANK2
  3150                           ;!
  3151                           ;!    None.
  3152                           
  3153 ;;
  3154 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3155 ;;
  3156                           
  3157                           ;!
  3158                           ;!Call Graph Tables:
  3159                           ;!
  3160                           ;! ---------------------------------------------------------------------------------
  3161                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3162                           ;! ---------------------------------------------------------------------------------
  3163                           ;! (0) _main                                                 2     2      0     942
  3164                           ;!                                              0 BANK3      2     2      0
  3165                           ;!                          _btns_init
  3166                           ;!                         _rs232_init
  3167                           ;!                           _lcd_init
  3168                           ;!                           _lcd_puts
  3169                           ;!                           _lcd_goto
  3170                           ;!                        _eeprom_read
  3171                           ;!                       _eeprom_write
  3172                           ;!                 _eeprom_gravar_word
  3173                           ;!                         _adcon_init
  3174                           ;!                        _timer0_init
  3175                           ;! ---------------------------------------------------------------------------------
  3176                           ;! (1) _timer0_init                                          0     0      0       0
  3177                           ;! ---------------------------------------------------------------------------------
  3178                           ;! (1) _adcon_init                                           0     0      0       0
  3179                           ;! ---------------------------------------------------------------------------------
  3180                           ;! (1) _eeprom_gravar_word                                   4     2      2     186
  3181                           ;!                                              8 BANK1      4     2      2
  3182                           ;!                       _eeprom_write
  3183                           ;! ---------------------------------------------------------------------------------
  3184                           ;! (2) _eeprom_write                                         3     2      1      62
  3185                           ;!                                              5 BANK1      3     2      1
  3186                           ;! ---------------------------------------------------------------------------------
  3187                           ;! (1) _eeprom_read                                          2     2      0      31
  3188                           ;!                                              5 BANK1      2     2      0
  3189                           ;! ---------------------------------------------------------------------------------
  3190                           ;! (1) _lcd_goto                                             3     2      1     186
  3191                           ;!                                              7 BANK1      3     2      1
  3192                           ;!                          _lcd_write
  3193                           ;! ---------------------------------------------------------------------------------
  3194                           ;! (1) _lcd_puts                                             5     3      2     254
  3195                           ;!                                              7 BANK1      5     3      2
  3196                           ;!                          _lcd_write
  3197                           ;! ---------------------------------------------------------------------------------
  3198                           ;! (1) _lcd_init                                             0     0      0     124
  3199                           ;!                          _lcd_write
  3200                           ;! ---------------------------------------------------------------------------------
  3201                           ;! (2) _lcd_write                                            2     2      0     124
  3202                           ;!                                              5 BANK1      2     2      0
  3203                           ;! ---------------------------------------------------------------------------------
  3204                           ;! (1) _rs232_init                                           0     0      0       0
  3205                           ;! ---------------------------------------------------------------------------------
  3206                           ;! (1) _btns_init                                            0     0      0       0
  3207                           ;! ---------------------------------------------------------------------------------
  3208                           ;! Estimated maximum stack depth 2
  3209                           ;! ---------------------------------------------------------------------------------
  3210                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3211                           ;! ---------------------------------------------------------------------------------
  3212                           ;! (3) _handler                                             10    10      0   48154
  3213                           ;!                                             73 BANK0      5     5      0
  3214                           ;!                                              0 BANK1      5     5      0
  3215                           ;!                         _btns_testa
  3216                           ;!                    _rs232_transmite
  3217                           ;!                    _eeprom_ler_word
  3218                           ;!                _adcon_captura_grava
  3219                           ;!                     _estado_maquina
  3220                           ;! ---------------------------------------------------------------------------------
  3221                           ;! (4) _estado_maquina                                       1     1      0   42274
  3222                           ;!                                             72 BANK0      1     1      0
  3223                           ;!                     _estado_inicial
  3224                           ;!              _estado_menu_principal
  3225                           ;!              _estado_captura_mostra
  3226                           ;!                   _estado_ver_todos
  3227                           ;!                     _estado_max_min
  3228                           ;!                 _estado_menu_limpar
  3229                           ;!     _estado_menu_conf_tempo_amostra
  3230                           ;!    _estado_menu_conf_quant_sensores
  3231                           ;! ---------------------------------------------------------------------------------
  3232                           ;! (5) _estado_menu_conf_quant_sensores                      2     2      0    4647
  3233                           ;!                                             58 BANK0      2     2      0
  3234                           ;!                _estado_executa_muda
  3235                           ;!                     i1_eeprom_write
  3236                           ;! ---------------------------------------------------------------------------------
  3237                           ;! (5) _estado_menu_conf_tempo_amostra                       1     1      0    4939
  3238                           ;!                                             58 BANK0      1     1      0
  3239                           ;!                _estado_executa_muda
  3240                           ;!               i1_eeprom_gravar_word
  3241                           ;! ---------------------------------------------------------------------------------
  3242                           ;! (5) _estado_menu_limpar                                   1     1      0    4501
  3243                           ;!                                             58 BANK0      1     1      0
  3244                           ;!                _estado_executa_muda
  3245                           ;! ---------------------------------------------------------------------------------
  3246                           ;! (5) _estado_max_min                                       1     1      0    4501
  3247                           ;!                                             58 BANK0      1     1      0
  3248                           ;!                _estado_executa_muda
  3249                           ;! ---------------------------------------------------------------------------------
  3250                           ;! (5) _estado_ver_todos                                     2     2      0    4736
  3251                           ;!                                             58 BANK0      2     2      0
  3252                           ;!                _estado_executa_muda
  3253                           ;!                            ___lbdiv
  3254                           ;!                      i1_eeprom_read
  3255                           ;! ---------------------------------------------------------------------------------
  3256                           ;! (6) ___lbdiv                                              5     4      1     162
  3257                           ;!                                              2 COMMON     5     4      1
  3258                           ;!                      i1_eeprom_read (ARG)
  3259                           ;! ---------------------------------------------------------------------------------
  3260                           ;! (5) _estado_captura_mostra                                1     1      0    4501
  3261                           ;!                                             58 BANK0      1     1      0
  3262                           ;!                _estado_executa_muda
  3263                           ;! ---------------------------------------------------------------------------------
  3264                           ;! (5) _estado_menu_principal                               14    14      0    9772
  3265                           ;!                                             58 BANK0     14    14      0
  3266                           ;!                          _lcd_clear
  3267                           ;!                    _eeprom_ler_word
  3268                           ;!                    _adcon_ler_canal
  3269                           ;!                       _adcon_mostra
  3270                           ;!                _estado_executa_muda
  3271                           ;!                             ___bmul
  3272                           ;!                         i1_lcd_puts
  3273                           ;!               i1_eeprom_gravar_word
  3274                           ;!                      i1_eeprom_read
  3275                           ;!                     i1_eeprom_write
  3276                           ;! ---------------------------------------------------------------------------------
  3277                           ;! (5) _estado_inicial                                       1     1      0    4479
  3278                           ;!                _estado_executa_muda
  3279                           ;! ---------------------------------------------------------------------------------
  3280                           ;! (6) _estado_executa_muda                                 46    46      0    4479
  3281                           ;!                                             20 BANK0     38    38      0
  3282                           ;!                          _lcd_clear
  3283                           ;!                    _eeprom_ler_word
  3284                           ;!                            _sprintf
  3285                           ;!                             ___bmul
  3286                           ;!                            ___lwdiv
  3287                           ;!                            ___lwmod
  3288                           ;!                         i1_lcd_goto
  3289                           ;!                         i1_lcd_puts
  3290                           ;!               i1_eeprom_gravar_word
  3291                           ;!                      i1_eeprom_read
  3292                           ;!                     i1_eeprom_write
  3293                           ;! ---------------------------------------------------------------------------------
  3294                           ;! (4) _adcon_captura_grava                                 15    15      0    5249
  3295                           ;!                                             40 BANK0     15    15      0
  3296                           ;!                          _lcd_clear
  3297                           ;!                    _eeprom_ler_word
  3298                           ;!                    _adcon_ler_canal
  3299                           ;!                       _adcon_mostra
  3300                           ;!                             ___bmul
  3301                           ;!                         i1_lcd_puts
  3302                           ;!               i1_eeprom_gravar_word
  3303                           ;!                      i1_eeprom_read
  3304                           ;!                     i1_eeprom_write
  3305                           ;! ---------------------------------------------------------------------------------
  3306                           ;! (7) i1_eeprom_gravar_word                                 4     2      2     438
  3307                           ;!                                              3 COMMON     4     2      2
  3308                           ;!                     i1_eeprom_write
  3309                           ;! ---------------------------------------------------------------------------------
  3310                           ;! (6) i1_eeprom_write                                       3     2      1     146
  3311                           ;!                                              0 COMMON     3     2      1
  3312                           ;! ---------------------------------------------------------------------------------
  3313                           ;! (6) _adcon_mostra                                        20    17      3    2890
  3314                           ;!                                             20 BANK0     20    17      3
  3315                           ;!                                _div
  3316                           ;!                            _sprintf
  3317                           ;!                             ___bmul
  3318                           ;!                         i1_lcd_goto
  3319                           ;!                         i1_lcd_puts
  3320                           ;! ---------------------------------------------------------------------------------
  3321                           ;! (7) i1_lcd_puts                                           5     3      2     588
  3322                           ;!                                              4 COMMON     5     3      2
  3323                           ;!                             ___bmul (ARG)
  3324                           ;!                        i1_lcd_write
  3325                           ;! ---------------------------------------------------------------------------------
  3326                           ;! (7) i1_lcd_goto                                           3     2      1     438
  3327                           ;!                                              2 COMMON     3     2      1
  3328                           ;!                        i1_lcd_write
  3329                           ;! ---------------------------------------------------------------------------------
  3330                           ;! (7) _sprintf                                             20    12      8     845
  3331                           ;!                                              0 BANK0     20    12      8
  3332                           ;!                             ___bmul (ARG)
  3333                           ;!                            ___lwdiv
  3334                           ;!                            ___lwmod
  3335                           ;! ---------------------------------------------------------------------------------
  3336                           ;! (7) ___lwmod                                              6     2      4     159
  3337                           ;!                                              8 COMMON     6     2      4
  3338                           ;!                            ___lwdiv (ARG)
  3339                           ;! ---------------------------------------------------------------------------------
  3340                           ;! (7) ___lwdiv                                              8     4      4     162
  3341                           ;!                                              0 COMMON     8     4      4
  3342                           ;! ---------------------------------------------------------------------------------
  3343                           ;! (7) _div                                                  8     4      4     731
  3344                           ;!                                              9 COMMON     4     0      4
  3345                           ;!                                              0 BANK0      4     4      0
  3346                           ;!                            ___awdiv
  3347                           ;!                            ___awmod
  3348                           ;! ---------------------------------------------------------------------------------
  3349                           ;! (8) ___awmod                                              7     3      4     296
  3350                           ;!                                              0 COMMON     7     3      4
  3351                           ;! ---------------------------------------------------------------------------------
  3352                           ;! (8) ___awdiv                                              9     5      4     300
  3353                           ;!                                              0 COMMON     9     5      4
  3354                           ;! ---------------------------------------------------------------------------------
  3355                           ;! (7) _adcon_ler_canal                                     13    11      2      92
  3356                           ;!                                              0 COMMON    13    11      2
  3357                           ;! ---------------------------------------------------------------------------------
  3358                           ;! (7) _eeprom_ler_word                                      7     5      2     164
  3359                           ;!                                              2 COMMON     7     5      2
  3360                           ;!                      i1_eeprom_read
  3361                           ;! ---------------------------------------------------------------------------------
  3362                           ;! (7) i1_eeprom_read                                        2     2      0      73
  3363                           ;!                                              0 COMMON     2     2      0
  3364                           ;! ---------------------------------------------------------------------------------
  3365                           ;! (7) _lcd_clear                                            2     2      0     292
  3366                           ;!                                              2 COMMON     2     2      0
  3367                           ;!                        i1_lcd_write
  3368                           ;! ---------------------------------------------------------------------------------
  3369                           ;! (8) i1_lcd_write                                          2     2      0     292
  3370                           ;!                                              0 COMMON     2     2      0
  3371                           ;! ---------------------------------------------------------------------------------
  3372                           ;! (4) _rs232_transmite                                      7     7      0     376
  3373                           ;!                                              4 COMMON     7     7      0
  3374                           ;!                             ___bmul
  3375                           ;!                      i1_eeprom_read
  3376                           ;! ---------------------------------------------------------------------------------
  3377                           ;! (4) _btns_testa                                           3     3      0       0
  3378                           ;!                                              0 COMMON     3     3      0
  3379                           ;! ---------------------------------------------------------------------------------
  3380                           ;! (7) ___bmul                                               4     3      1      92
  3381                           ;!                                              0 COMMON     4     3      1
  3382                           ;! ---------------------------------------------------------------------------------
  3383                           ;! Estimated maximum stack depth 8
  3384                           ;! ---------------------------------------------------------------------------------
  3385                           ;!
  3386                           ;! Call Graph Graphs:
  3387                           ;!
  3388                           ;! _main (ROOT)
  3389                           ;!   _btns_init
  3390                           ;!   _rs232_init
  3391                           ;!   _lcd_init
  3392                           ;!     _lcd_write
  3393                           ;!   _lcd_puts
  3394                           ;!     _lcd_write
  3395                           ;!   _lcd_goto
  3396                           ;!     _lcd_write
  3397                           ;!   _eeprom_read
  3398                           ;!   _eeprom_write
  3399                           ;!   _eeprom_gravar_word
  3400                           ;!     _eeprom_write
  3401                           ;!   _adcon_init
  3402                           ;!   _timer0_init
  3403                           ;!
  3404                           ;! _handler (ROOT)
  3405                           ;!   _btns_testa
  3406                           ;!   _rs232_transmite
  3407                           ;!     ___bmul
  3408                           ;!     i1_eeprom_read
  3409                           ;!   _eeprom_ler_word
  3410                           ;!     i1_eeprom_read
  3411                           ;!   _adcon_captura_grava
  3412                           ;!     _lcd_clear
  3413                           ;!       i1_lcd_write
  3414                           ;!     _eeprom_ler_word
  3415                           ;!       i1_eeprom_read
  3416                           ;!     _adcon_ler_canal
  3417                           ;!     _adcon_mostra
  3418                           ;!       _div
  3419                           ;!         ___awdiv
  3420                           ;!         ___awmod
  3421                           ;!       _sprintf
  3422                           ;!         ___bmul (ARG)
  3423                           ;!         ___lwdiv (ARG)
  3424                           ;!         ___lwmod (ARG)
  3425                           ;!           ___lwdiv (ARG)
  3426                           ;!       ___bmul
  3427                           ;!       i1_lcd_goto
  3428                           ;!         i1_lcd_write
  3429                           ;!       i1_lcd_puts
  3430                           ;!         ___bmul (ARG)
  3431                           ;!         i1_lcd_write (ARG)
  3432                           ;!     ___bmul
  3433                           ;!     i1_lcd_puts
  3434                           ;!       ___bmul (ARG)
  3435                           ;!       i1_lcd_write (ARG)
  3436                           ;!     i1_eeprom_gravar_word
  3437                           ;!       i1_eeprom_write
  3438                           ;!     i1_eeprom_read
  3439                           ;!     i1_eeprom_write
  3440                           ;!   _estado_maquina
  3441                           ;!     _estado_inicial
  3442                           ;!       _estado_executa_muda
  3443                           ;!         _lcd_clear
  3444                           ;!           i1_lcd_write
  3445                           ;!         _eeprom_ler_word
  3446                           ;!           i1_eeprom_read
  3447                           ;!         _sprintf
  3448                           ;!           ___bmul (ARG)
  3449                           ;!           ___lwdiv (ARG)
  3450                           ;!           ___lwmod (ARG)
  3451                           ;!             ___lwdiv (ARG)
  3452                           ;!         ___bmul
  3453                           ;!         ___lwdiv
  3454                           ;!         ___lwmod
  3455                           ;!           ___lwdiv (ARG)
  3456                           ;!         i1_lcd_goto
  3457                           ;!           i1_lcd_write
  3458                           ;!         i1_lcd_puts
  3459                           ;!           ___bmul (ARG)
  3460                           ;!           i1_lcd_write (ARG)
  3461                           ;!         i1_eeprom_gravar_word
  3462                           ;!           i1_eeprom_write
  3463                           ;!         i1_eeprom_read
  3464                           ;!         i1_eeprom_write
  3465                           ;!     _estado_menu_principal
  3466                           ;!       _lcd_clear
  3467                           ;!         i1_lcd_write
  3468                           ;!       _eeprom_ler_word
  3469                           ;!         i1_eeprom_read
  3470                           ;!       _adcon_ler_canal
  3471                           ;!       _adcon_mostra
  3472                           ;!         _div
  3473                           ;!           ___awdiv
  3474                           ;!           ___awmod
  3475                           ;!         _sprintf
  3476                           ;!           ___bmul (ARG)
  3477                           ;!           ___lwdiv (ARG)
  3478                           ;!           ___lwmod (ARG)
  3479                           ;!             ___lwdiv (ARG)
  3480                           ;!         ___bmul
  3481                           ;!         i1_lcd_goto
  3482                           ;!           i1_lcd_write
  3483                           ;!         i1_lcd_puts
  3484                           ;!           ___bmul (ARG)
  3485                           ;!           i1_lcd_write (ARG)
  3486                           ;!       _estado_executa_muda
  3487                           ;!         _lcd_clear
  3488                           ;!           i1_lcd_write
  3489                           ;!         _eeprom_ler_word
  3490                           ;!           i1_eeprom_read
  3491                           ;!         _sprintf
  3492                           ;!           ___bmul (ARG)
  3493                           ;!           ___lwdiv (ARG)
  3494                           ;!           ___lwmod (ARG)
  3495                           ;!             ___lwdiv (ARG)
  3496                           ;!         ___bmul
  3497                           ;!         ___lwdiv
  3498                           ;!         ___lwmod
  3499                           ;!           ___lwdiv (ARG)
  3500                           ;!         i1_lcd_goto
  3501                           ;!           i1_lcd_write
  3502                           ;!         i1_lcd_puts
  3503                           ;!           ___bmul (ARG)
  3504                           ;!           i1_lcd_write (ARG)
  3505                           ;!         i1_eeprom_gravar_word
  3506                           ;!           i1_eeprom_write
  3507                           ;!         i1_eeprom_read
  3508                           ;!         i1_eeprom_write
  3509                           ;!       ___bmul
  3510                           ;!       i1_lcd_puts
  3511                           ;!         ___bmul (ARG)
  3512                           ;!         i1_lcd_write (ARG)
  3513                           ;!       i1_eeprom_gravar_word
  3514                           ;!         i1_eeprom_write
  3515                           ;!       i1_eeprom_read
  3516                           ;!       i1_eeprom_write
  3517                           ;!     _estado_captura_mostra
  3518                           ;!       _estado_executa_muda
  3519                           ;!         _lcd_clear
  3520                           ;!           i1_lcd_write
  3521                           ;!         _eeprom_ler_word
  3522                           ;!           i1_eeprom_read
  3523                           ;!         _sprintf
  3524                           ;!           ___bmul (ARG)
  3525                           ;!           ___lwdiv (ARG)
  3526                           ;!           ___lwmod (ARG)
  3527                           ;!             ___lwdiv (ARG)
  3528                           ;!         ___bmul
  3529                           ;!         ___lwdiv
  3530                           ;!         ___lwmod
  3531                           ;!           ___lwdiv (ARG)
  3532                           ;!         i1_lcd_goto
  3533                           ;!           i1_lcd_write
  3534                           ;!         i1_lcd_puts
  3535                           ;!           ___bmul (ARG)
  3536                           ;!           i1_lcd_write (ARG)
  3537                           ;!         i1_eeprom_gravar_word
  3538                           ;!           i1_eeprom_write
  3539                           ;!         i1_eeprom_read
  3540                           ;!         i1_eeprom_write
  3541                           ;!     _estado_ver_todos
  3542                           ;!       _estado_executa_muda
  3543                           ;!         _lcd_clear
  3544                           ;!           i1_lcd_write
  3545                           ;!         _eeprom_ler_word
  3546                           ;!           i1_eeprom_read
  3547                           ;!         _sprintf
  3548                           ;!           ___bmul (ARG)
  3549                           ;!           ___lwdiv (ARG)
  3550                           ;!           ___lwmod (ARG)
  3551                           ;!             ___lwdiv (ARG)
  3552                           ;!         ___bmul
  3553                           ;!         ___lwdiv
  3554                           ;!         ___lwmod
  3555                           ;!           ___lwdiv (ARG)
  3556                           ;!         i1_lcd_goto
  3557                           ;!           i1_lcd_write
  3558                           ;!         i1_lcd_puts
  3559                           ;!           ___bmul (ARG)
  3560                           ;!           i1_lcd_write (ARG)
  3561                           ;!         i1_eeprom_gravar_word
  3562                           ;!           i1_eeprom_write
  3563                           ;!         i1_eeprom_read
  3564                           ;!         i1_eeprom_write
  3565                           ;!       ___lbdiv
  3566                           ;!         i1_eeprom_read (ARG)
  3567                           ;!       i1_eeprom_read
  3568                           ;!     _estado_max_min
  3569                           ;!       _estado_executa_muda
  3570                           ;!         _lcd_clear
  3571                           ;!           i1_lcd_write
  3572                           ;!         _eeprom_ler_word
  3573                           ;!           i1_eeprom_read
  3574                           ;!         _sprintf
  3575                           ;!           ___bmul (ARG)
  3576                           ;!           ___lwdiv (ARG)
  3577                           ;!           ___lwmod (ARG)
  3578                           ;!             ___lwdiv (ARG)
  3579                           ;!         ___bmul
  3580                           ;!         ___lwdiv
  3581                           ;!         ___lwmod
  3582                           ;!           ___lwdiv (ARG)
  3583                           ;!         i1_lcd_goto
  3584                           ;!           i1_lcd_write
  3585                           ;!         i1_lcd_puts
  3586                           ;!           ___bmul (ARG)
  3587                           ;!           i1_lcd_write (ARG)
  3588                           ;!         i1_eeprom_gravar_word
  3589                           ;!           i1_eeprom_write
  3590                           ;!         i1_eeprom_read
  3591                           ;!         i1_eeprom_write
  3592                           ;!     _estado_menu_limpar
  3593                           ;!       _estado_executa_muda
  3594                           ;!         _lcd_clear
  3595                           ;!           i1_lcd_write
  3596                           ;!         _eeprom_ler_word
  3597                           ;!           i1_eeprom_read
  3598                           ;!         _sprintf
  3599                           ;!           ___bmul (ARG)
  3600                           ;!           ___lwdiv (ARG)
  3601                           ;!           ___lwmod (ARG)
  3602                           ;!             ___lwdiv (ARG)
  3603                           ;!         ___bmul
  3604                           ;!         ___lwdiv
  3605                           ;!         ___lwmod
  3606                           ;!           ___lwdiv (ARG)
  3607                           ;!         i1_lcd_goto
  3608                           ;!           i1_lcd_write
  3609                           ;!         i1_lcd_puts
  3610                           ;!           ___bmul (ARG)
  3611                           ;!           i1_lcd_write (ARG)
  3612                           ;!         i1_eeprom_gravar_word
  3613                           ;!           i1_eeprom_write
  3614                           ;!         i1_eeprom_read
  3615                           ;!         i1_eeprom_write
  3616                           ;!     _estado_menu_conf_tempo_amostra
  3617                           ;!       _estado_executa_muda
  3618                           ;!         _lcd_clear
  3619                           ;!           i1_lcd_write
  3620                           ;!         _eeprom_ler_word
  3621                           ;!           i1_eeprom_read
  3622                           ;!         _sprintf
  3623                           ;!           ___bmul (ARG)
  3624                           ;!           ___lwdiv (ARG)
  3625                           ;!           ___lwmod (ARG)
  3626                           ;!             ___lwdiv (ARG)
  3627                           ;!         ___bmul
  3628                           ;!         ___lwdiv
  3629                           ;!         ___lwmod
  3630                           ;!           ___lwdiv (ARG)
  3631                           ;!         i1_lcd_goto
  3632                           ;!           i1_lcd_write
  3633                           ;!         i1_lcd_puts
  3634                           ;!           ___bmul (ARG)
  3635                           ;!           i1_lcd_write (ARG)
  3636                           ;!         i1_eeprom_gravar_word
  3637                           ;!           i1_eeprom_write
  3638                           ;!         i1_eeprom_read
  3639                           ;!         i1_eeprom_write
  3640                           ;!       i1_eeprom_gravar_word
  3641                           ;!         i1_eeprom_write
  3642                           ;!     _estado_menu_conf_quant_sensores
  3643                           ;!       _estado_executa_muda
  3644                           ;!         _lcd_clear
  3645                           ;!           i1_lcd_write
  3646                           ;!         _eeprom_ler_word
  3647                           ;!           i1_eeprom_read
  3648                           ;!         _sprintf
  3649                           ;!           ___bmul (ARG)
  3650                           ;!           ___lwdiv (ARG)
  3651                           ;!           ___lwmod (ARG)
  3652                           ;!             ___lwdiv (ARG)
  3653                           ;!         ___bmul
  3654                           ;!         ___lwdiv
  3655                           ;!         ___lwmod
  3656                           ;!           ___lwdiv (ARG)
  3657                           ;!         i1_lcd_goto
  3658                           ;!           i1_lcd_write
  3659                           ;!         i1_lcd_puts
  3660                           ;!           ___bmul (ARG)
  3661                           ;!           i1_lcd_write (ARG)
  3662                           ;!         i1_eeprom_gravar_word
  3663                           ;!           i1_eeprom_write
  3664                           ;!         i1_eeprom_read
  3665                           ;!         i1_eeprom_write
  3666                           ;!       i1_eeprom_write
  3667                           ;!
  3668                           
  3669                           ;! Address spaces:
  3670                           
  3671                           ;!Name               Size   Autos  Total    Cost      Usage
  3672                           ;!BANK3               60      2      13       9       19.8%
  3673                           ;!BITBANK3            60      0       0       8        0.0%
  3674                           ;!SFR3                 0      0       0       4        0.0%
  3675                           ;!BITSFR3              0      0       0       4        0.0%
  3676                           ;!BANK2               60      0       0      11        0.0%
  3677                           ;!BITBANK2            60      0       0      10        0.0%
  3678                           ;!SFR2                 0      0       0       5        0.0%
  3679                           ;!BITSFR2              0      0       0       5        0.0%
  3680                           ;!BANK1               50      C      4B       7       93.8%
  3681                           ;!BITBANK1            50      0       0       6        0.0%
  3682                           ;!SFR1                 0      0       0       2        0.0%
  3683                           ;!BITSFR1              0      0       0       2        0.0%
  3684                           ;!BANK0               50     4E      50       5      100.0%
  3685                           ;!BITBANK0            50      0       0       4        0.0%
  3686                           ;!SFR0                 0      0       0       1        0.0%
  3687                           ;!BITSFR0              0      0       0       1        0.0%
  3688                           ;!COMMON               E      E       E       1      100.0%
  3689                           ;!BITCOMMON            E      0       0       0        0.0%
  3690                           ;!CODE                 0      0       0       0        0.0%
  3691                           ;!DATA                 0      0      CA      12        0.0%
  3692                           ;!ABS                  0      0      BC       3        0.0%
  3693                           ;!NULL                 0      0       0       0        0.0%
  3694                           ;!STACK                0      0       E       2        0.0%
  3695                           ;!EEDATA             100      0       0       0        0.0%
  3696                           
  3697                           	global	_main
  3698                           
  3699 ;; *************** function _main *****************
  3700 ;; Defined at:
  3701 ;;		line 33 in file "main.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  i               1    1[BANK3 ] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  2   30[COMMON] int 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 17F/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3715 ;;      Params:         0       0       0       0       0
  3716 ;;      Locals:         0       0       0       1       0
  3717 ;;      Temps:          0       0       0       1       0
  3718 ;;      Totals:         0       0       0       2       0
  3719 ;;Total ram usage:        2 bytes
  3720 ;; Hardware stack levels required when called:    8
  3721 ;; This function calls:
  3722 ;;		_btns_init
  3723 ;;		_rs232_init
  3724 ;;		_lcd_init
  3725 ;;		_lcd_puts
  3726 ;;		_lcd_goto
  3727 ;;		_eeprom_read
  3728 ;;		_eeprom_write
  3729 ;;		_eeprom_gravar_word
  3730 ;;		_adcon_init
  3731 ;;		_timer0_init
  3732 ;; This function is called by:
  3733 ;;		Startup code after reset
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           psect	maintext,global,class=CODE,delta=2,split=1
  3737                           global __pmaintext
  3738  0E1B                     __pmaintext:	;psect for function _main
  3739                           psect	maintext
  3740                           	file	"main.c"
  3741                           	line	33
  3742                           	global	__size_of_main
  3743  00BB                     	__size_of_main	equ	__end_of_main-_main
  3744                           	
  3745  0E1B                     _main:	
  3746                           ;incstack = 0
  3747                           	opt	stack 0
  3748                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3749                           	line	37
  3750                           	
  3751  0E1B                     l4671:	
  3752                           ;main.c: 37: btns_init();
  3753  0E1B  120A  118A  27C6   	fcall	_btns_init
              120A  158A         
  3754                           	line	38
  3755                           ;main.c: 38: rs232_init();
  3756  0E20  160A  118A  259B   	fcall	_rs232_init
              120A  158A         
  3757                           	line	39
  3758                           ;main.c: 39: lcd_init();
  3759  0E25  160A  118A  278A   	fcall	_lcd_init
              120A  158A         
  3760                           	line	41
  3761                           	
  3762  0E2A                     l4673:	
  3763                           ;main.c: 41: lcd_puts("Inicio v1.50-");
  3764  0E2A  30C5               	movlw	low(STR_1|8000h)
  3765  0E2B  1683               	bsf	status, 5	;RP0=1, select bank1
  3766  0E2C  1303               	bcf	status, 6	;RP1=0, select bank1
  3767  0E2D  00E6               	movwf	(?_lcd_puts)^080h
  3768  0E2E  3085               	movlw	high(STR_1|8000h)
  3769  0E2F  00E7               	movwf	((?_lcd_puts)^080h)+1
  3770  0E30  120A  158A  228D   	fcall	_lcd_puts
              120A  158A         
  3771                           	line	43
  3772                           	
  3773  0E35                     l4675:	
  3774                           ;main.c: 43: lcd_puts("N");
  3775  0E35  3094               	movlw	low(STR_2|8000h)
  3776  0E36  1683               	bsf	status, 5	;RP0=1, select bank1
  3777  0E37  1303               	bcf	status, 6	;RP1=0, select bank1
  3778  0E38  00E6               	movwf	(?_lcd_puts)^080h
  3779  0E39  3086               	movlw	high(STR_2|8000h)
  3780  0E3A  00E7               	movwf	((?_lcd_puts)^080h)+1
  3781  0E3B  120A  158A  228D   	fcall	_lcd_puts
              120A  158A         
  3782                           	line	51
  3783                           	
  3784  0E40                     l4677:	
  3785                           ;main.c: 51: lcd_goto(2, 0);
  3786  0E40  1683               	bsf	status, 5	;RP0=1, select bank1
  3787  0E41  1303               	bcf	status, 6	;RP1=0, select bank1
  3788  0E42  01E6               	clrf	(?_lcd_goto)^080h
  3789  0E43  3002               	movlw	(02h)
  3790  0E44  160A  118A  272A   	fcall	_lcd_goto
              120A  158A         
  3791                           	line	52
  3792                           	
  3793  0E49                     l4679:	
  3794                           ;main.c: 52: lcd_puts("12/02/2016");
  3795  0E49  300B               	movlw	low(STR_3|8000h)
  3796  0E4A  1683               	bsf	status, 5	;RP0=1, select bank1
  3797  0E4B  1303               	bcf	status, 6	;RP1=0, select bank1
  3798  0E4C  00E6               	movwf	(?_lcd_puts)^080h
  3799  0E4D  3086               	movlw	high(STR_3|8000h)
  3800  0E4E  00E7               	movwf	((?_lcd_puts)^080h)+1
  3801  0E4F  120A  158A  228D   	fcall	_lcd_puts
              120A  158A         
  3802                           	line	58
  3803                           	
  3804  0E54                     l4681:	
  3805                           ;main.c: 58: if (eeprom_read(0x0c) != 93) {
  3806  0E54  300C               	movlw	(0Ch)
  3807  0E55  160A  118A  2606   	fcall	_eeprom_read
              120A  158A         
  3808  0E5A  3A5D               	xorlw	05Dh
  3809  0E5B  1903               	skipnz
  3810  0E5C  2E5E               	goto	u3761
  3811  0E5D  2E5F               	goto	u3760
  3812  0E5E                     u3761:
  3813  0E5E  2EC7               	goto	l4699
  3814  0E5F                     u3760:
  3815                           	line	59
  3816                           	
  3817  0E5F                     l4683:	
  3818                           ;main.c: 59: eeprom_write(0x08, 0);
  3819  0E5F  1683               	bsf	status, 5	;RP0=1, select bank1
  3820  0E60  1303               	bcf	status, 6	;RP1=0, select bank1
  3821  0E61  01E4               	clrf	(?_eeprom_write)^080h
  3822  0E62  3008               	movlw	(08h)
  3823  0E63  160A  118A  27C5   	fcall	_eeprom_write
              120A  158A         
  3824                           	line	60
  3825                           ;main.c: 60: eeprom_write(0x00, 0);
  3826  0E68  1683               	bsf	status, 5	;RP0=1, select bank1
  3827  0E69  1303               	bcf	status, 6	;RP1=0, select bank1
  3828  0E6A  01E4               	clrf	(?_eeprom_write)^080h
  3829  0E6B  3000               	movlw	(0)
  3830  0E6C  160A  118A  27C5   	fcall	_eeprom_write
              120A  158A         
  3831                           	line	61
  3832                           ;main.c: 61: eeprom_gravar_word(0x02, 0);
  3833  0E71  3000               	movlw	low(0)
  3834  0E72  1683               	bsf	status, 5	;RP0=1, select bank1
  3835  0E73  1303               	bcf	status, 6	;RP1=0, select bank1
  3836  0E74  00E7               	movwf	(?_eeprom_gravar_word)^080h
  3837  0E75  3000               	movlw	high(0)
  3838  0E76  00E8               	movwf	((?_eeprom_gravar_word)^080h)+1
  3839  0E77  3002               	movlw	(02h)
  3840  0E78  160A  118A  25CD   	fcall	_eeprom_gravar_word
              120A  158A         
  3841                           	line	62
  3842                           ;main.c: 62: eeprom_gravar_word(0x04, 0xffff);
  3843  0E7D  30FF               	movlw	low(0FFFFh)
  3844  0E7E  1683               	bsf	status, 5	;RP0=1, select bank1
  3845  0E7F  1303               	bcf	status, 6	;RP1=0, select bank1
  3846  0E80  00E7               	movwf	(?_eeprom_gravar_word)^080h
  3847  0E81  30FF               	movlw	high(0FFFFh)
  3848  0E82  00E8               	movwf	((?_eeprom_gravar_word)^080h)+1
  3849  0E83  3004               	movlw	(04h)
  3850  0E84  160A  118A  25CD   	fcall	_eeprom_gravar_word
              120A  158A         
  3851                           	line	63
  3852                           ;main.c: 63: eeprom_gravar_word(0x06, 0);
  3853  0E89  3000               	movlw	low(0)
  3854  0E8A  1683               	bsf	status, 5	;RP0=1, select bank1
  3855  0E8B  1303               	bcf	status, 6	;RP1=0, select bank1
  3856  0E8C  00E7               	movwf	(?_eeprom_gravar_word)^080h
  3857  0E8D  3000               	movlw	high(0)
  3858  0E8E  00E8               	movwf	((?_eeprom_gravar_word)^080h)+1
  3859  0E8F  3006               	movlw	(06h)
  3860  0E90  160A  118A  25CD   	fcall	_eeprom_gravar_word
              120A  158A         
  3861                           	line	65
  3862                           	
  3863  0E95                     l4685:	
  3864                           ;main.c: 65: for (uint8_t i = 0; i < 100 * 2; i++) {
  3865  0E95  1683               	bsf	status, 5	;RP0=1, select bank3
  3866  0E96  1703               	bsf	status, 6	;RP1=1, select bank3
  3867  0E97  01A2               	clrf	(main@i)^0180h
  3868                           	
  3869  0E98                     l4687:	
  3870  0E98  30C8               	movlw	(0C8h)
  3871  0E99  0222               	subwf	(main@i)^0180h,w
  3872  0E9A  1C03               	skipc
  3873  0E9B  2E9D               	goto	u3771
  3874  0E9C  2E9E               	goto	u3770
  3875  0E9D                     u3771:
  3876  0E9D  2EA0               	goto	l4691
  3877  0E9E                     u3770:
  3878  0E9E  2EB9               	goto	l4697
  3879                           	
  3880  0E9F                     l4689:	
  3881  0E9F  2EB9               	goto	l4697
  3882                           	
  3883  0EA0                     l32:	
  3884                           	line	66
  3885                           	
  3886  0EA0                     l4691:	
  3887                           ;main.c: 66: eeprom_write(i + 0x0e, 0);
  3888  0EA0  1683               	bsf	status, 5	;RP0=1, select bank1
  3889  0EA1  1303               	bcf	status, 6	;RP1=0, select bank1
  3890  0EA2  01E4               	clrf	(?_eeprom_write)^080h
  3891  0EA3  1683               	bsf	status, 5	;RP0=1, select bank3
  3892  0EA4  1703               	bsf	status, 6	;RP1=1, select bank3
  3893  0EA5  0822               	movf	(main@i)^0180h,w
  3894  0EA6  3E0E               	addlw	0Eh
  3895  0EA7  160A  118A  27C5   	fcall	_eeprom_write
              120A  158A         
  3896                           	line	65
  3897                           	
  3898  0EAC                     l4693:	
  3899  0EAC  3001               	movlw	(01h)
  3900  0EAD  1683               	bsf	status, 5	;RP0=1, select bank3
  3901  0EAE  1703               	bsf	status, 6	;RP1=1, select bank3
  3902  0EAF  00A1               	movwf	(??_main+0)^0180h+0
  3903  0EB0  0821               	movf	(??_main+0)^0180h+0,w
  3904  0EB1  07A2               	addwf	(main@i)^0180h,f
  3905                           	
  3906  0EB2                     l4695:	
  3907  0EB2  30C8               	movlw	(0C8h)
  3908  0EB3  0222               	subwf	(main@i)^0180h,w
  3909  0EB4  1C03               	skipc
  3910  0EB5  2EB7               	goto	u3781
  3911  0EB6  2EB8               	goto	u3780
  3912  0EB7                     u3781:
  3913  0EB7  2EA0               	goto	l4691
  3914  0EB8                     u3780:
  3915  0EB8  2EB9               	goto	l4697
  3916                           	
  3917  0EB9                     l33:	
  3918                           	line	73
  3919                           	
  3920  0EB9                     l4697:	
  3921                           ;main.c: 67: }
  3922                           ;main.c: 73: eeprom_write(0x0c, 93);
  3923  0EB9  305D               	movlw	(05Dh)
  3924  0EBA  00A1               	movwf	(??_main+0)^0180h+0
  3925  0EBB  0821               	movf	(??_main+0)^0180h+0,w
  3926  0EBC  1683               	bsf	status, 5	;RP0=1, select bank1
  3927  0EBD  1303               	bcf	status, 6	;RP1=0, select bank1
  3928  0EBE  00E4               	movwf	(?_eeprom_write)^080h
  3929  0EBF  300C               	movlw	(0Ch)
  3930  0EC0  160A  118A  27C5   	fcall	_eeprom_write
              120A  158A         
  3931                           	line	74
  3932                           ;main.c: 74: } else {
  3933  0EC5  2EC7               	goto	l4699
  3934                           	
  3935  0EC6                     l31:	
  3936  0EC6  2EC7               	goto	l4699
  3937                           	line	77
  3938                           	
  3939  0EC7                     l34:	
  3940                           	line	79
  3941                           	
  3942  0EC7                     l4699:	
  3943                           ;main.c: 77: }
  3944                           ;main.c: 79: adcon_init();
  3945  0EC7  160A  118A  25B4   	fcall	_adcon_init
              120A  158A         
  3946                           	line	81
  3947                           ;main.c: 81: timer0_init();
  3948  0ECC  160A  118A  24F1   	fcall	_timer0_init
              120A  158A         
  3949                           	line	85
  3950                           	
  3951  0ED1                     l4701:	
  3952                           ;main.c: 85: INTCONbits.GIE = 1;
  3953  0ED1  178B               	bsf	(11),7	;volatile
  3954                           	line	87
  3955                           ;main.c: 87: while (1) {
  3956                           	
  3957  0ED2                     l35:	
  3958                           	line	98
  3959                           	
  3960  0ED2                     l36:	
  3961                           	line	87
  3962  0ED2  2ED2               	goto	l35
  3963                           	
  3964  0ED3                     l37:	
  3965                           	line	100
  3966                           ;main.c: 98: }
  3967                           ;main.c: 99: return (0);
  3968                           ;	Return value of _main is never used
  3969                           	
  3970  0ED3                     l38:	
  3971                           	global	start
  3972  0ED3  120A  118A  2812   	ljmp	start
  3973                           	opt stack 0
  3974                           GLOBAL	__end_of_main
  3975  0ED6                     	__end_of_main:
  3976                           	signat	_main,90
  3977                           	global	_timer0_init
  3978                           
  3979 ;; *************** function _timer0_init *****************
  3980 ;; Defined at:
  3981 ;;		line 4 in file "timer.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;		None               void
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3995 ;;      Params:         0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0
  3998 ;;      Totals:         0       0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    6
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_main
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           psect	text1,local,class=CODE,delta=2,merge=1
  4009                           global __ptext1
  4010  14F1                     __ptext1:	;psect for function _timer0_init
  4011                           psect	text1
  4012                           	file	"timer.c"
  4013                           	line	4
  4014                           	global	__size_of_timer0_init
  4015  000D                     	__size_of_timer0_init	equ	__end_of_timer0_init-_timer0_init
  4016                           	
  4017  14F1                     _timer0_init:	
  4018                           ;incstack = 0
  4019                           	opt	stack 1
  4020                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
  4021                           	line	18
  4022                           	
  4023  14F1                     l4789:	
  4024                           ;timer.c: 18: TMR0 = 39;
  4025  14F1  3027               	movlw	(027h)
  4026  14F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4027  14F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4028  14F4  0081               	movwf	(1)	;volatile
  4029                           	line	20
  4030                           	
  4031  14F5                     l4791:	
  4032                           ;timer.c: 20: OPTION_REGbits.T0CS = 0;
  4033  14F5  1683               	bsf	status, 5	;RP0=1, select bank1
  4034  14F6  1303               	bcf	status, 6	;RP1=0, select bank1
  4035  14F7  1281               	bcf	(129)^080h,5	;volatile
  4036                           	line	21
  4037                           	
  4038  14F8                     l4793:	
  4039                           ;timer.c: 21: OPTION_REGbits.PSA = 0;
  4040  14F8  1181               	bcf	(129)^080h,3	;volatile
  4041                           	line	22
  4042                           	
  4043  14F9                     l4795:	
  4044                           ;timer.c: 22: OPTION_REGbits.PS = 0b111;
  4045  14F9  3007               	movlw	(07h & ((1<<3)-1))<<0
  4046  14FA  0481               	iorwf	(129)^080h,f	;volatile
  4047                           	line	24
  4048                           	
  4049  14FB                     l4797:	
  4050                           ;timer.c: 24: INTCONbits.T0IF = 0;
  4051  14FB  110B               	bcf	(11),2	;volatile
  4052                           	line	26
  4053                           	
  4054  14FC                     l4799:	
  4055                           ;timer.c: 26: INTCONbits.T0IE = 0;
  4056  14FC  128B               	bcf	(11),5	;volatile
  4057                           	line	27
  4058                           	
  4059  14FD                     l188:	
  4060  14FD  0008               	return
  4061                           	opt stack 0
  4062                           GLOBAL	__end_of_timer0_init
  4063  14FE                     	__end_of_timer0_init:
  4064                           	signat	_timer0_init,88
  4065                           	global	_adcon_init
  4066                           
  4067 ;; *************** function _adcon_init *****************
  4068 ;; Defined at:
  4069 ;;		line 137 in file "adcon.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;		None               void
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4083 ;;      Params:         0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0
  4086 ;;      Totals:         0       0       0       0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    6
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_main
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           psect	text2,local,class=CODE,delta=2,merge=1
  4097                           global __ptext2
  4098  15B4                     __ptext2:	;psect for function _adcon_init
  4099                           psect	text2
  4100                           	file	"adcon.c"
  4101                           	line	137
  4102                           	global	__size_of_adcon_init
  4103  0019                     	__size_of_adcon_init	equ	__end_of_adcon_init-_adcon_init
  4104                           	
  4105  15B4                     _adcon_init:	
  4106                           ;incstack = 0
  4107                           	opt	stack 1
  4108                           ; Regs used in _adcon_init: [wreg+status,2+status,0]
  4109                           	line	138
  4110                           	
  4111  15B4                     l4777:	
  4112                           ;adcon.c: 138: TRISA = 0xff;
  4113  15B4  30FF               	movlw	(0FFh)
  4114  15B5  1683               	bsf	status, 5	;RP0=1, select bank1
  4115  15B6  1303               	bcf	status, 6	;RP1=0, select bank1
  4116  15B7  0085               	movwf	(133)^080h	;volatile
  4117                           	line	140
  4118                           ;adcon.c: 140: ANSEL = 0b00011111;
  4119  15B8  301F               	movlw	(01Fh)
  4120  15B9  1683               	bsf	status, 5	;RP0=1, select bank3
  4121  15BA  1703               	bsf	status, 6	;RP1=1, select bank3
  4122  15BB  0088               	movwf	(392)^0180h	;volatile
  4123                           	line	142
  4124                           	
  4125  15BC                     l4779:	
  4126                           ;adcon.c: 142: ADCON1bits.VCFG1 = 0;
  4127  15BC  1683               	bsf	status, 5	;RP0=1, select bank1
  4128  15BD  1303               	bcf	status, 6	;RP1=0, select bank1
  4129  15BE  129F               	bcf	(159)^080h,5	;volatile
  4130                           	line	144
  4131                           	
  4132  15BF                     l4781:	
  4133                           ;adcon.c: 144: ADCON1bits.VCFG0 = 1;
  4134  15BF  161F               	bsf	(159)^080h,4	;volatile
  4135                           	line	150
  4136                           	
  4137  15C0                     l4783:	
  4138                           ;adcon.c: 150: ADCON0bits.ADCS = 1;
  4139  15C0  1283               	bcf	status, 5	;RP0=0, select bank0
  4140  15C1  1303               	bcf	status, 6	;RP1=0, select bank0
  4141  15C2  081F               	movf	(31),w	;volatile
  4142  15C3  393F               	andlw	not (((1<<2)-1)<<6)
  4143  15C4  3840               	iorlw	(01h & ((1<<2)-1))<<6
  4144  15C5  009F               	movwf	(31)	;volatile
  4145                           	line	151
  4146                           	
  4147  15C6                     l4785:	
  4148                           ;adcon.c: 151: ADCON1bits.ADFM = 1;
  4149  15C6  1683               	bsf	status, 5	;RP0=1, select bank1
  4150  15C7  1303               	bcf	status, 6	;RP1=0, select bank1
  4151  15C8  179F               	bsf	(159)^080h,7	;volatile
  4152                           	line	152
  4153                           	
  4154  15C9                     l4787:	
  4155                           ;adcon.c: 152: ADCON0bits.ADON = 1;
  4156  15C9  1283               	bcf	status, 5	;RP0=0, select bank0
  4157  15CA  1303               	bcf	status, 6	;RP1=0, select bank0
  4158  15CB  141F               	bsf	(31),0	;volatile
  4159                           	line	153
  4160                           	
  4161  15CC                     l266:	
  4162  15CC  0008               	return
  4163                           	opt stack 0
  4164                           GLOBAL	__end_of_adcon_init
  4165  15CD                     	__end_of_adcon_init:
  4166                           	signat	_adcon_init,88
  4167                           	global	_eeprom_gravar_word
  4168                           
  4169 ;; *************** function _eeprom_gravar_word *****************
  4170 ;; Defined at:
  4171 ;;		line 23 in file "eeprom.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  end             1    wreg     unsigned char 
  4174 ;;  dado            2    8[BANK1 ] unsigned int 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  end             1   11[BANK1 ] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       2       0       0
  4187 ;;      Locals:         0       0       1       0       0
  4188 ;;      Temps:          0       0       1       0       0
  4189 ;;      Totals:         0       0       4       0       0
  4190 ;;Total ram usage:        4 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    7
  4193 ;; This function calls:
  4194 ;;		_eeprom_write
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           psect	text3,local,class=CODE,delta=2,merge=1
  4200                           global __ptext3
  4201  15CD                     __ptext3:	;psect for function _eeprom_gravar_word
  4202                           psect	text3
  4203                           	file	"eeprom.c"
  4204                           	line	23
  4205                           	global	__size_of_eeprom_gravar_word
  4206  001A                     	__size_of_eeprom_gravar_word	equ	__end_of_eeprom_gravar_word-_eeprom_gravar_word
  4207                           	
  4208  15CD                     _eeprom_gravar_word:	
  4209                           ;incstack = 0
  4210                           	opt	stack 0
  4211                           ; Regs used in _eeprom_gravar_word: [wreg+status,2+status,0+pclath+cstack]
  4212                           ;eeprom_gravar_word@end stored from wreg
  4213                           	line	30
  4214  15CD  1683               	bsf	status, 5	;RP0=1, select bank1
  4215  15CE  1303               	bcf	status, 6	;RP1=0, select bank1
  4216  15CF  00EA               	movwf	(eeprom_gravar_word@end)^080h
  4217                           	
  4218  15D0                     l4775:	
  4219                           ;eeprom.c: 30: eeprom_write(end, dado >> 8);
  4220  15D0  0868               	movf	(eeprom_gravar_word@dado+1)^080h,w
  4221  15D1  00E9               	movwf	(??_eeprom_gravar_word+0)^080h+0
  4222  15D2  0869               	movf	(??_eeprom_gravar_word+0)^080h+0,w
  4223  15D3  00E4               	movwf	(?_eeprom_write)^080h
  4224  15D4  086A               	movf	(eeprom_gravar_word@end)^080h,w
  4225  15D5  160A  118A  27C5   	fcall	_eeprom_write
              160A  118A         
  4226                           	line	32
  4227                           ;eeprom.c: 32: eeprom_write(end + 1, dado);
  4228  15DA  1683               	bsf	status, 5	;RP0=1, select bank1
  4229  15DB  1303               	bcf	status, 6	;RP1=0, select bank1
  4230  15DC  0867               	movf	(eeprom_gravar_word@dado)^080h,w
  4231  15DD  00E9               	movwf	(??_eeprom_gravar_word+0)^080h+0
  4232  15DE  0869               	movf	(??_eeprom_gravar_word+0)^080h+0,w
  4233  15DF  00E4               	movwf	(?_eeprom_write)^080h
  4234  15E0  0A6A               	incf	(eeprom_gravar_word@end)^080h,w
  4235  15E1  160A  118A  27C5   	fcall	_eeprom_write
              160A  118A         
  4236                           	line	34
  4237                           	
  4238  15E6                     l276:	
  4239  15E6  0008               	return
  4240                           	opt stack 0
  4241                           GLOBAL	__end_of_eeprom_gravar_word
  4242  15E7                     	__end_of_eeprom_gravar_word:
  4243                           	signat	_eeprom_gravar_word,8312
  4244                           	global	_eeprom_write
  4245                           
  4246 ;; *************** function _eeprom_write *****************
  4247 ;; Defined at:
  4248 ;;		line 7 in file "/opt/microchip/xc8/v1.20/sources/pic/eewrite.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  addr            1    wreg     unsigned char 
  4251 ;;  value           1    5[BANK1 ] unsigned char 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  addr            1    7[BANK1 ] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;		None               void
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4263 ;;      Params:         0       0       1       0       0
  4264 ;;      Locals:         0       0       1       0       0
  4265 ;;      Temps:          0       0       1       0       0
  4266 ;;      Totals:         0       0       3       0       0
  4267 ;;Total ram usage:        3 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    6
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_main
  4274 ;;		_eeprom_gravar_word
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           psect	text4,local,class=CODE,delta=2,merge=1
  4278                           global __ptext4
  4279  17C5                     __ptext4:	;psect for function _eeprom_write
  4280                           psect	text4
  4281                           	file	"/opt/microchip/xc8/v1.20/sources/pic/eewrite.c"
  4282                           	line	7
  4283                           	global	__size_of_eeprom_write
  4284  003B                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  4285                           	
  4286  17C5                     _eeprom_write:	
  4287                           ;incstack = 0
  4288                           	opt	stack 0
  4289                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4290                           ;eeprom_write@addr stored from wreg
  4291  17C5  1683               	bsf	status, 5	;RP0=1, select bank1
  4292  17C6  1303               	bcf	status, 6	;RP1=0, select bank1
  4293  17C7  00E6               	movwf	(eeprom_write@addr)^080h
  4294                           	line	8
  4295                           	
  4296  17C8                     l595:	
  4297  17C8  2FC9               	goto	l596
  4298                           	
  4299  17C9                     l597:	
  4300                           	
  4301  17C9                     l596:	
  4302  17C9  1683               	bsf	status, 5	;RP0=1, select bank3
  4303  17CA  1703               	bsf	status, 6	;RP1=1, select bank3
  4304  17CB  188C               	btfsc	(3169/8)^0180h,(3169)&7	;volatile
  4305  17CC  2FCE               	goto	u3861
  4306  17CD  2FCF               	goto	u3860
  4307  17CE                     u3861:
  4308  17CE  2FC9               	goto	l596
  4309  17CF                     u3860:
  4310  17CF  2FD0               	goto	l4755
  4311                           	
  4312  17D0                     l598:	
  4313                           	
  4314  17D0                     l4755:	
  4315  17D0  1683               	bsf	status, 5	;RP0=1, select bank1
  4316  17D1  1303               	bcf	status, 6	;RP1=0, select bank1
  4317  17D2  0866               	movf	(eeprom_write@addr)^080h,w
  4318  17D3  1283               	bcf	status, 5	;RP0=0, select bank2
  4319  17D4  1703               	bsf	status, 6	;RP1=1, select bank2
  4320  17D5  008D               	movwf	(269)^0100h	;volatile
  4321  17D6  1683               	bsf	status, 5	;RP0=1, select bank1
  4322  17D7  1303               	bcf	status, 6	;RP1=0, select bank1
  4323  17D8  0864               	movf	(eeprom_write@value)^080h,w
  4324  17D9  1283               	bcf	status, 5	;RP0=0, select bank2
  4325  17DA  1703               	bsf	status, 6	;RP1=1, select bank2
  4326  17DB  008C               	movwf	(268)^0100h	;volatile
  4327                           	
  4328  17DC                     l4757:	
  4329  17DC  303F               	movlw	(03Fh)
  4330  17DD  1683               	bsf	status, 5	;RP0=1, select bank1
  4331  17DE  1303               	bcf	status, 6	;RP1=0, select bank1
  4332  17DF  00E5               	movwf	(??_eeprom_write+0)^080h+0
  4333  17E0  0865               	movf	(??_eeprom_write+0)^080h+0,w
  4334  17E1  1683               	bsf	status, 5	;RP0=1, select bank3
  4335  17E2  1703               	bsf	status, 6	;RP1=1, select bank3
  4336  17E3  058C               	andwf	(396)^0180h,f	;volatile
  4337                           	
  4338  17E4                     l4759:	
  4339  17E4  1283               	bcf	status, 5	;RP0=0, select bank0
  4340  17E5  1303               	bcf	status, 6	;RP1=0, select bank0
  4341  17E6  1003               	bcf	(24/8),(24)&7	;volatile
  4342                           	
  4343  17E7                     l4761:	
  4344  17E7  1F8B               	btfss	(95/8),(95)&7	;volatile
  4345  17E8  2FEA               	goto	u3871
  4346  17E9  2FEB               	goto	u3870
  4347  17EA                     u3871:
  4348  17EA  2FEC               	goto	l599
  4349  17EB                     u3870:
  4350                           	
  4351  17EB                     l4763:	
  4352  17EB  1403               	bsf	(24/8),(24)&7	;volatile
  4353                           	
  4354  17EC                     l599:	
  4355  17EC  138B               	bcf	(95/8),(95)&7	;volatile
  4356  17ED  1683               	bsf	status, 5	;RP0=1, select bank3
  4357  17EE  1703               	bsf	status, 6	;RP1=1, select bank3
  4358  17EF  150C               	bsf	(3170/8)^0180h,(3170)&7	;volatile
  4359                           	
  4360  17F0                     l4765:	
  4361  17F0  3055               	movlw	(055h)
  4362  17F1  008D               	movwf	(397)^0180h	;volatile
  4363  17F2  30AA               	movlw	(0AAh)
  4364  17F3  008D               	movwf	(397)^0180h	;volatile
  4365                           	
  4366  17F4                     l4767:	
  4367  17F4  148C               	bsf	(3169/8)^0180h,(3169)&7	;volatile
  4368                           	
  4369  17F5                     l4769:	
  4370  17F5  110C               	bcf	(3170/8)^0180h,(3170)&7	;volatile
  4371                           	
  4372  17F6                     l4771:	
  4373  17F6  1283               	bcf	status, 5	;RP0=0, select bank0
  4374  17F7  1303               	bcf	status, 6	;RP1=0, select bank0
  4375  17F8  1C03               	btfss	(24/8),(24)&7	;volatile
  4376  17F9  2FFB               	goto	u3881
  4377  17FA  2FFC               	goto	u3880
  4378  17FB                     u3881:
  4379  17FB  2FFF               	goto	l602
  4380  17FC                     u3880:
  4381                           	
  4382  17FC                     l4773:	
  4383  17FC  178B               	bsf	(95/8),(95)&7	;volatile
  4384  17FD  2FFF               	goto	l602
  4385                           	
  4386  17FE                     l600:	
  4387  17FE  2FFF               	goto	l602
  4388                           	
  4389  17FF                     l601:	
  4390                           	line	9
  4391                           	
  4392  17FF                     l602:	
  4393  17FF  0008               	return
  4394                           	opt stack 0
  4395                           GLOBAL	__end_of_eeprom_write
  4396  1800                     	__end_of_eeprom_write:
  4397                           	signat	_eeprom_write,8312
  4398                           	global	_eeprom_read
  4399                           
  4400 ;; *************** function _eeprom_read *****************
  4401 ;; Defined at:
  4402 ;;		line 7 in file "/opt/microchip/xc8/v1.20/sources/pic/eeread.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  addr            1    wreg     unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  addr            1    6[BANK1 ] unsigned char 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      unsigned char 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4416 ;;      Params:         0       0       0       0       0
  4417 ;;      Locals:         0       0       1       0       0
  4418 ;;      Temps:          0       0       1       0       0
  4419 ;;      Totals:         0       0       2       0       0
  4420 ;;Total ram usage:        2 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    6
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_main
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           psect	text5,local,class=CODE,delta=2,merge=1
  4430                           global __ptext5
  4431  1606                     __ptext5:	;psect for function _eeprom_read
  4432                           psect	text5
  4433                           	file	"/opt/microchip/xc8/v1.20/sources/pic/eeread.c"
  4434                           	line	7
  4435                           	global	__size_of_eeprom_read
  4436  0025                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
  4437                           	
  4438  1606                     _eeprom_read:	
  4439                           ;incstack = 0
  4440                           	opt	stack 1
  4441                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4442                           ;eeprom_read@addr stored from wreg
  4443                           	line	9
  4444  1606  1683               	bsf	status, 5	;RP0=1, select bank1
  4445  1607  1303               	bcf	status, 6	;RP1=0, select bank1
  4446  1608  00E5               	movwf	(eeprom_read@addr)^080h
  4447                           	line	8
  4448                           	
  4449  1609                     l574:	
  4450                           	line	9
  4451                           # 9 "/opt/microchip/xc8/v1.20/sources/pic/eeread.c"
  4452  1609  0064               clrwdt ;# 
  4453                           psect	text5
  4454                           	line	10
  4455  160A  1683               	bsf	status, 5	;RP0=1, select bank3
  4456  160B  1703               	bsf	status, 6	;RP1=1, select bank3
  4457  160C  188C               	btfsc	(3169/8)^0180h,(3169)&7	;volatile
  4458  160D  2E0F               	goto	u3851
  4459  160E  2E10               	goto	u3850
  4460  160F                     u3851:
  4461  160F  2E09               	goto	l574
  4462  1610                     u3850:
  4463  1610  2E11               	goto	l4751
  4464                           	
  4465  1611                     l575:	
  4466                           	line	11
  4467                           	
  4468  1611                     l4751:	
  4469  1611  1683               	bsf	status, 5	;RP0=1, select bank1
  4470  1612  1303               	bcf	status, 6	;RP1=0, select bank1
  4471  1613  0865               	movf	(eeprom_read@addr)^080h,w
  4472  1614  1283               	bcf	status, 5	;RP0=0, select bank2
  4473  1615  1703               	bsf	status, 6	;RP1=1, select bank2
  4474  1616  008D               	movwf	(269)^0100h	;volatile
  4475  1617  303F               	movlw	(03Fh)
  4476  1618  1683               	bsf	status, 5	;RP0=1, select bank1
  4477  1619  1303               	bcf	status, 6	;RP1=0, select bank1
  4478  161A  00E4               	movwf	(??_eeprom_read+0)^080h+0
  4479  161B  0864               	movf	(??_eeprom_read+0)^080h+0,w
  4480  161C  1683               	bsf	status, 5	;RP0=1, select bank3
  4481  161D  1703               	bsf	status, 6	;RP1=1, select bank3
  4482  161E  058C               	andwf	(396)^0180h,f	;volatile
  4483  161F  140C               	bsf	(3168/8)^0180h,(3168)&7	;volatile
  4484  1620  1003               	clrc
  4485  1621  180C               	btfsc	(3168/8)^0180h,(3168)&7	;volatile
  4486  1622  1403               	setc
  4487  1623  3000               	movlw	0
  4488  1624  1803               	skipnc
  4489  1625  3001               	movlw	1
  4490                           
  4491  1626  1283               	bcf	status, 5	;RP0=0, select bank2
  4492  1627  1703               	bsf	status, 6	;RP1=1, select bank2
  4493  1628  080C               	movf	(268)^0100h,w	;volatile
  4494  1629  2E2A               	goto	l576
  4495                           	
  4496  162A                     l4753:	
  4497                           	line	12
  4498                           	
  4499  162A                     l576:	
  4500  162A  0008               	return
  4501                           	opt stack 0
  4502                           GLOBAL	__end_of_eeprom_read
  4503  162B                     	__end_of_eeprom_read:
  4504                           	signat	_eeprom_read,4217
  4505                           	global	_lcd_goto
  4506                           
  4507 ;; *************** function _lcd_goto *****************
  4508 ;; Defined at:
  4509 ;;		line 46 in file "lcd.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  y               1    wreg     unsigned char 
  4512 ;;  x               1    7[BANK1 ] unsigned char 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  y               1    9[BANK1 ] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;		None               void
  4517 ;; Registers used:
  4518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4524 ;;      Params:         0       0       1       0       0
  4525 ;;      Locals:         0       0       1       0       0
  4526 ;;      Temps:          0       0       1       0       0
  4527 ;;      Totals:         0       0       3       0       0
  4528 ;;Total ram usage:        3 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    7
  4531 ;; This function calls:
  4532 ;;		_lcd_write
  4533 ;; This function is called by:
  4534 ;;		_main
  4535 ;;		_mq_mostra
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           psect	text6,local,class=CODE,delta=2,merge=1
  4539                           global __ptext6
  4540  172A                     __ptext6:	;psect for function _lcd_goto
  4541                           psect	text6
  4542                           	file	"lcd.c"
  4543                           	line	46
  4544                           	global	__size_of_lcd_goto
  4545  002F                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  4546                           	
  4547  172A                     _lcd_goto:	
  4548                           ;incstack = 0
  4549                           	opt	stack 0
  4550                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4551                           ;lcd_goto@y stored from wreg
  4552  172A  1683               	bsf	status, 5	;RP0=1, select bank1
  4553  172B  1303               	bcf	status, 6	;RP1=0, select bank1
  4554  172C  00E8               	movwf	(lcd_goto@y)^080h
  4555                           	line	47
  4556                           	
  4557  172D                     l4737:	
  4558                           ;lcd.c: 47: RC0 = 0;
  4559  172D  1283               	bcf	status, 5	;RP0=0, select bank0
  4560  172E  1303               	bcf	status, 6	;RP1=0, select bank0
  4561  172F  1007               	bcf	(56/8),(56)&7	;volatile
  4562                           	line	48
  4563                           ;lcd.c: 48: switch (y) {
  4564  1730  2F40               	goto	l4745
  4565                           	line	49
  4566                           ;lcd.c: 49: case 1:
  4567                           	
  4568  1731                     l84:	
  4569                           	line	50
  4570                           	
  4571  1731                     l4739:	
  4572                           ;lcd.c: 50: lcd_write(8);
  4573  1731  3008               	movlw	(08h)
  4574  1732  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4575                           	line	51
  4576                           ;lcd.c: 51: break;
  4577  1737  2F4A               	goto	l4747
  4578                           	line	52
  4579                           ;lcd.c: 52: case 2:
  4580                           	
  4581  1738                     l86:	
  4582                           	line	53
  4583                           	
  4584  1738                     l4741:	
  4585                           ;lcd.c: 53: lcd_write(0xc);
  4586  1738  300C               	movlw	(0Ch)
  4587  1739  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4588                           	line	54
  4589                           ;lcd.c: 54: break;
  4590  173E  2F4A               	goto	l4747
  4591                           	line	55
  4592                           	
  4593  173F                     l4743:	
  4594                           ;lcd.c: 55: }
  4595  173F  2F4A               	goto	l4747
  4596                           	line	48
  4597                           	
  4598  1740                     l83:	
  4599                           	
  4600  1740                     l4745:	
  4601  1740  1683               	bsf	status, 5	;RP0=1, select bank1
  4602  1741  1303               	bcf	status, 6	;RP1=0, select bank1
  4603  1742  0868               	movf	(lcd_goto@y)^080h,w
  4604                           	; Switch size 1, requested type "space"
  4605                           ; Number of cases is 2, Range of values is 1 to 2
  4606                           ; switch strategies available:
  4607                           ; Name         Instructions Cycles
  4608                           ; simple_byte            7     4 (average)
  4609                           ; direct_byte           17    11 (fixed)
  4610                           ; jumptable            263     9 (fixed)
  4611                           ;	Chosen strategy is simple_byte
  4612                           
  4613                           	opt asmopt_off
  4614  1743  3A01               	xorlw	1^0	; case 1
  4615  1744  1903               	skipnz
  4616  1745  2F31               	goto	l4739
  4617  1746  3A03               	xorlw	2^1	; case 2
  4618  1747  1903               	skipnz
  4619  1748  2F38               	goto	l4741
  4620  1749  2F4A               	goto	l4747
  4621                           	opt asmopt_on
  4622                           
  4623                           	line	55
  4624                           	
  4625  174A                     l85:	
  4626                           	line	56
  4627                           	
  4628  174A                     l4747:	
  4629                           ;lcd.c: 56: lcd_write(x);
  4630  174A  1683               	bsf	status, 5	;RP0=1, select bank1
  4631  174B  1303               	bcf	status, 6	;RP1=0, select bank1
  4632  174C  0866               	movf	(lcd_goto@x)^080h,w
  4633  174D  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4634                           	line	57
  4635                           	
  4636  1752                     l4749:	
  4637                           ;lcd.c: 57: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4638                           	opt asmopt_off
  4639  1752  300D               movlw	13
  4640  1753  1683               	bsf	status, 5	;RP0=1, select bank1
  4641  1754  1303               	bcf	status, 6	;RP1=0, select bank1
  4642  1755  00E7               movwf	(??_lcd_goto+0)^080h+0,f
  4643  1756                     u3957:
  4644  1756  0BE7               decfsz	(??_lcd_goto+0)^080h+0,f
  4645  1757  2F56               	goto	u3957
  4646                           opt asmopt_on
  4647                           
  4648                           	line	58
  4649                           	
  4650  1758                     l87:	
  4651  1758  0008               	return
  4652                           	opt stack 0
  4653                           GLOBAL	__end_of_lcd_goto
  4654  1759                     	__end_of_lcd_goto:
  4655                           	signat	_lcd_goto,8312
  4656                           	global	_lcd_puts
  4657                           
  4658 ;; *************** function _lcd_puts *****************
  4659 ;; Defined at:
  4660 ;;		line 60 in file "lcd.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  str             2    7[BANK1 ] PTR const unsigned char 
  4663 ;;		 -> STR_46(11), STR_43(12), STR_41(12), estado_executa_muda@tmp(17), 
  4664 ;;		 -> STR_40(14), STR_39(7), STR_38(7), STR_37(7), 
  4665 ;;		 -> STR_36(6), STR_35(7), STR_34(7), STR_33(6), 
  4666 ;;		 -> STR_32(11), STR_31(11), STR_30(11), STR_29(9), 
  4667 ;;		 -> STR_28(15), STR_27(14), STR_26(7), STR_25(8), 
  4668 ;;		 -> STR_24(10), STR_23(15), STR_22(9), mq_mostra@temp_str(16), 
  4669 ;;		 -> STR_20(11), STR_19(11), STR_18(11), STR_17(9), 
  4670 ;;		 -> adcon_mostra@temp_str(9), STR_15(14), STR_14(11), STR_13(11), 
  4671 ;;		 -> STR_12(11), STR_11(9), STR_10(7), STR_9(7), 
  4672 ;;		 -> STR_8(7), STR_7(6), STR_6(7), STR_5(7), 
  4673 ;;		 -> STR_4(6), STR_3(11), STR_2(2), STR_1(14), 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  cmd             1   11[BANK1 ] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;		None               void
  4678 ;; Registers used:
  4679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4685 ;;      Params:         0       0       2       0       0
  4686 ;;      Locals:         0       0       1       0       0
  4687 ;;      Temps:          0       0       2       0       0
  4688 ;;      Totals:         0       0       5       0       0
  4689 ;;Total ram usage:        5 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    7
  4692 ;; This function calls:
  4693 ;;		_lcd_write
  4694 ;; This function is called by:
  4695 ;;		_main
  4696 ;;		_mq_mostra
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           psect	text7,local,class=CODE,delta=2,merge=1
  4700                           global __ptext7
  4701  0A8D                     __ptext7:	;psect for function _lcd_puts
  4702                           psect	text7
  4703                           	file	"lcd.c"
  4704                           	line	60
  4705                           	global	__size_of_lcd_puts
  4706  0069                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  4707                           	
  4708  0A8D                     _lcd_puts:	
  4709                           ;incstack = 0
  4710 ;; using string table level
  4711                           	opt	stack 1
  4712                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4713                           	line	62
  4714                           	
  4715  0A8D                     l4721:	
  4716                           ;lcd.c: 61: uint8_t cmd;
  4717                           ;lcd.c: 62: RC0 = 1;
  4718  0A8D  1283               	bcf	status, 5	;RP0=0, select bank0
  4719  0A8E  1303               	bcf	status, 6	;RP1=0, select bank0
  4720  0A8F  1407               	bsf	(56/8),(56)&7	;volatile
  4721                           	line	64
  4722                           ;lcd.c: 64: while (*str) {
  4723  0A90  2ADE               	goto	l4735
  4724                           	
  4725  0A91                     l91:	
  4726                           	line	65
  4727                           	
  4728  0A91                     l4723:	
  4729                           ;lcd.c: 65: cmd = *str >> 4;
  4730  0A91  1683               	bsf	status, 5	;RP0=1, select bank1
  4731  0A92  1303               	bcf	status, 6	;RP1=0, select bank1
  4732  0A93  0867               	movf	(lcd_puts@str+1)^080h,w
  4733  0A94  1283               	bcf	status, 5	;RP0=0, select bank0
  4734  0A95  1303               	bcf	status, 6	;RP1=0, select bank0
  4735  0A96  00FF               	movwf	btemp+1
  4736  0A97  1683               	bsf	status, 5	;RP0=1, select bank1
  4737  0A98  1303               	bcf	status, 6	;RP1=0, select bank1
  4738  0A99  0866               	movf	(lcd_puts@str)^080h,w
  4739  0A9A  0084               	movwf	fsr0
  4740  0A9B  1283               	bcf	status, 5	;RP0=0, select bank0
  4741  0A9C  1303               	bcf	status, 6	;RP1=0, select bank0
  4742  0A9D  120A  118A  2500   	fcall	stringtab
              120A  158A         
  4743  0AA2  1683               	bsf	status, 5	;RP0=1, select bank1
  4744  0AA3  1303               	bcf	status, 6	;RP1=0, select bank1
  4745  0AA4  00E8               	movwf	(??_lcd_puts+0)^080h+0
  4746  0AA5  3004               	movlw	04h
  4747  0AA6                     u3835:
  4748  0AA6  1003               	clrc
  4749  0AA7  0CE8               	rrf	(??_lcd_puts+0)^080h+0,f
  4750  0AA8  3EFF               	addlw	-1
  4751  0AA9  1D03               	skipz
  4752  0AAA  2AA6               	goto	u3835
  4753  0AAB  0868               	movf	0+(??_lcd_puts+0)^080h+0,w
  4754  0AAC  00E9               	movwf	(??_lcd_puts+1)^080h+0
  4755  0AAD  0869               	movf	(??_lcd_puts+1)^080h+0,w
  4756  0AAE  00EA               	movwf	(lcd_puts@cmd)^080h
  4757                           	line	72
  4758                           	
  4759  0AAF                     l4725:	
  4760                           ;lcd.c: 72: lcd_write(cmd);
  4761  0AAF  086A               	movf	(lcd_puts@cmd)^080h,w
  4762  0AB0  120A  118A  24BE   	fcall	_lcd_write
              120A  158A         
  4763                           	line	73
  4764                           	
  4765  0AB5                     l4727:	
  4766                           ;lcd.c: 73: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4767                           	opt asmopt_off
  4768  0AB5  300D               movlw	13
  4769  0AB6  1683               	bsf	status, 5	;RP0=1, select bank1
  4770  0AB7  1303               	bcf	status, 6	;RP1=0, select bank1
  4771  0AB8  00E8               movwf	(??_lcd_puts+0)^080h+0,f
  4772  0AB9                     u3967:
  4773  0AB9  0BE8               decfsz	(??_lcd_puts+0)^080h+0,f
  4774  0ABA  2AB9               	goto	u3967
  4775                           opt asmopt_on
  4776                           
  4777                           	line	81
  4778                           	
  4779  0ABB                     l4729:	
  4780                           ;lcd.c: 81: lcd_write(*str);
  4781  0ABB  1683               	bsf	status, 5	;RP0=1, select bank1
  4782  0ABC  1303               	bcf	status, 6	;RP1=0, select bank1
  4783  0ABD  0867               	movf	(lcd_puts@str+1)^080h,w
  4784  0ABE  1283               	bcf	status, 5	;RP0=0, select bank0
  4785  0ABF  1303               	bcf	status, 6	;RP1=0, select bank0
  4786  0AC0  00FF               	movwf	btemp+1
  4787  0AC1  1683               	bsf	status, 5	;RP0=1, select bank1
  4788  0AC2  1303               	bcf	status, 6	;RP1=0, select bank1
  4789  0AC3  0866               	movf	(lcd_puts@str)^080h,w
  4790  0AC4  0084               	movwf	fsr0
  4791  0AC5  1283               	bcf	status, 5	;RP0=0, select bank0
  4792  0AC6  1303               	bcf	status, 6	;RP1=0, select bank0
  4793  0AC7  120A  118A  2500   	fcall	stringtab
              120A  158A         
  4794  0ACC  120A  118A  24BE   	fcall	_lcd_write
              120A  158A         
  4795                           	line	82
  4796                           	
  4797  0AD1                     l4731:	
  4798                           ;lcd.c: 82: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4799                           	opt asmopt_off
  4800  0AD1  300D               movlw	13
  4801  0AD2  1683               	bsf	status, 5	;RP0=1, select bank1
  4802  0AD3  1303               	bcf	status, 6	;RP1=0, select bank1
  4803  0AD4  00E8               movwf	(??_lcd_puts+0)^080h+0,f
  4804  0AD5                     u3977:
  4805  0AD5  0BE8               decfsz	(??_lcd_puts+0)^080h+0,f
  4806  0AD6  2AD5               	goto	u3977
  4807                           opt asmopt_on
  4808                           
  4809                           	line	84
  4810                           	
  4811  0AD7                     l4733:	
  4812                           ;lcd.c: 84: str++;
  4813  0AD7  3001               	movlw	01h
  4814  0AD8  1683               	bsf	status, 5	;RP0=1, select bank1
  4815  0AD9  1303               	bcf	status, 6	;RP1=0, select bank1
  4816  0ADA  07E6               	addwf	(lcd_puts@str)^080h,f
  4817  0ADB  1803               	skipnc
  4818  0ADC  0AE7               	incf	(lcd_puts@str+1)^080h,f
  4819  0ADD  2ADE               	goto	l4735
  4820                           	line	85
  4821                           	
  4822  0ADE                     l90:	
  4823                           	line	64
  4824                           	
  4825  0ADE                     l4735:	
  4826  0ADE  1683               	bsf	status, 5	;RP0=1, select bank1
  4827  0ADF  1303               	bcf	status, 6	;RP1=0, select bank1
  4828  0AE0  0867               	movf	(lcd_puts@str+1)^080h,w
  4829  0AE1  1283               	bcf	status, 5	;RP0=0, select bank0
  4830  0AE2  1303               	bcf	status, 6	;RP1=0, select bank0
  4831  0AE3  00FF               	movwf	btemp+1
  4832  0AE4  1683               	bsf	status, 5	;RP0=1, select bank1
  4833  0AE5  1303               	bcf	status, 6	;RP1=0, select bank1
  4834  0AE6  0866               	movf	(lcd_puts@str)^080h,w
  4835  0AE7  0084               	movwf	fsr0
  4836  0AE8  1283               	bcf	status, 5	;RP0=0, select bank0
  4837  0AE9  1303               	bcf	status, 6	;RP1=0, select bank0
  4838  0AEA  120A  118A  2500   	fcall	stringtab
              120A  158A         
  4839  0AEF  3800               	iorlw	0
  4840  0AF0  1D03               	skipz
  4841  0AF1  2AF3               	goto	u3841
  4842  0AF2  2AF4               	goto	u3840
  4843  0AF3                     u3841:
  4844  0AF3  2A91               	goto	l4723
  4845  0AF4                     u3840:
  4846  0AF4  2AF5               	goto	l93
  4847                           	
  4848  0AF5                     l92:	
  4849                           	line	92
  4850                           	
  4851  0AF5                     l93:	
  4852  0AF5  0008               	return
  4853                           	opt stack 0
  4854                           GLOBAL	__end_of_lcd_puts
  4855  0AF6                     	__end_of_lcd_puts:
  4856                           	signat	_lcd_puts,4216
  4857                           	global	_lcd_init
  4858                           
  4859 ;; *************** function _lcd_init *****************
  4860 ;; Defined at:
  4861 ;;		line 94 in file "lcd.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;		None
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;		None               void
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0, pclath, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4875 ;;      Params:         0       0       0       0       0
  4876 ;;      Locals:         0       0       0       0       0
  4877 ;;      Temps:          0       0       0       0       0
  4878 ;;      Totals:         0       0       0       0       0
  4879 ;;Total ram usage:        0 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    7
  4882 ;; This function calls:
  4883 ;;		_lcd_write
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           psect	text8,local,class=CODE,delta=2,merge=1
  4889                           global __ptext8
  4890  178A                     __ptext8:	;psect for function _lcd_init
  4891                           psect	text8
  4892                           	file	"lcd.c"
  4893                           	line	94
  4894                           	global	__size_of_lcd_init
  4895  003B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4896                           	
  4897  178A                     _lcd_init:	
  4898                           ;incstack = 0
  4899                           	opt	stack 0
  4900                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4901                           	line	95
  4902                           	
  4903  178A                     l4717:	
  4904                           ;lcd.c: 95: TRISC0 = TRISC1 = TRISC2 = TRISB2 = TRISB1 = TRISB0 = 0;
  4905  178A  1683               	bsf	status, 5	;RP0=1, select bank1
  4906  178B  1303               	bcf	status, 6	;RP1=0, select bank1
  4907  178C  1006               	bcf	(1072/8)^080h,(1072)&7	;volatile
  4908  178D  1086               	bcf	(1073/8)^080h,(1073)&7	;volatile
  4909  178E  1106               	bcf	(1074/8)^080h,(1074)&7	;volatile
  4910  178F  1107               	bcf	(1082/8)^080h,(1082)&7	;volatile
  4911  1790  1087               	bcf	(1081/8)^080h,(1081)&7	;volatile
  4912  1791  1007               	bcf	(1080/8)^080h,(1080)&7	;volatile
  4913                           	line	96
  4914                           ;lcd.c: 96: RC0 = RC1 = RC2 = RB2 = RB1 = RB0 = 0;
  4915  1792  1283               	bcf	status, 5	;RP0=0, select bank0
  4916  1793  1303               	bcf	status, 6	;RP1=0, select bank0
  4917  1794  1006               	bcf	(48/8),(48)&7	;volatile
  4918  1795  1086               	bcf	(49/8),(49)&7	;volatile
  4919  1796  1106               	bcf	(50/8),(50)&7	;volatile
  4920  1797  1107               	bcf	(58/8),(58)&7	;volatile
  4921  1798  1087               	bcf	(57/8),(57)&7	;volatile
  4922  1799  1007               	bcf	(56/8),(56)&7	;volatile
  4923                           	line	97
  4924                           	
  4925  179A                     l4719:	
  4926                           ;lcd.c: 97: lcd_write(2);
  4927  179A  3002               	movlw	(02h)
  4928  179B  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4929                           	line	98
  4930                           ;lcd.c: 98: lcd_write(8);
  4931  17A0  3008               	movlw	(08h)
  4932  17A1  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4933                           	line	99
  4934                           ;lcd.c: 99: lcd_write(0);
  4935  17A6  3000               	movlw	(0)
  4936  17A7  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4937                           	line	100
  4938                           ;lcd.c: 100: lcd_write(0);
  4939  17AC  3000               	movlw	(0)
  4940  17AD  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4941                           	line	101
  4942                           ;lcd.c: 101: lcd_write(0xc);
  4943  17B2  300C               	movlw	(0Ch)
  4944  17B3  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4945                           	line	102
  4946                           ;lcd.c: 102: lcd_write(0);
  4947  17B8  3000               	movlw	(0)
  4948  17B9  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4949                           	line	103
  4950                           ;lcd.c: 103: lcd_write(6);
  4951  17BE  3006               	movlw	(06h)
  4952  17BF  120A  118A  24BE   	fcall	_lcd_write
              160A  118A         
  4953                           	line	104
  4954                           	
  4955  17C4                     l96:	
  4956  17C4  0008               	return
  4957                           	opt stack 0
  4958                           GLOBAL	__end_of_lcd_init
  4959  17C5                     	__end_of_lcd_init:
  4960                           	signat	_lcd_init,88
  4961                           	global	_lcd_write
  4962                           
  4963 ;; *************** function _lcd_write *****************
  4964 ;; Defined at:
  4965 ;;		line 13 in file "lcd.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  c               1    wreg     unsigned char 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  c               1    6[BANK1 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;		None               void
  4972 ;; Registers used:
  4973 ;;		wreg
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4979 ;;      Params:         0       0       0       0       0
  4980 ;;      Locals:         0       0       1       0       0
  4981 ;;      Temps:          0       0       1       0       0
  4982 ;;      Totals:         0       0       2       0       0
  4983 ;;Total ram usage:        2 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    6
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_lcd_goto
  4990 ;;		_lcd_puts
  4991 ;;		_lcd_init
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           psect	text9,local,class=CODE,delta=2,merge=1
  4995                           global __ptext9
  4996  04BE                     __ptext9:	;psect for function _lcd_write
  4997                           psect	text9
  4998                           	file	"lcd.c"
  4999                           	line	13
  5000                           	global	__size_of_lcd_write
  5001  0041                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  5002                           	
  5003  04BE                     _lcd_write:	
  5004                           ;incstack = 0
  5005                           	opt	stack 0
  5006                           ; Regs used in _lcd_write: [wreg]
  5007                           ;lcd_write@c stored from wreg
  5008  04BE  1683               	bsf	status, 5	;RP0=1, select bank1
  5009  04BF  1303               	bcf	status, 6	;RP1=0, select bank1
  5010  04C0  00E5               	movwf	(lcd_write@c)^080h
  5011                           	line	14
  5012                           	
  5013  04C1                     l4801:	
  5014                           ;lcd.c: 14: if (c & 0b00000001) {
  5015  04C1  1C65               	btfss	(lcd_write@c)^080h,(0)&7
  5016  04C2  2CC4               	goto	u3891
  5017  04C3  2CC5               	goto	u3890
  5018  04C4                     u3891:
  5019  04C4  2CC9               	goto	l69
  5020  04C5                     u3890:
  5021                           	line	15
  5022                           	
  5023  04C5                     l4803:	
  5024                           ;lcd.c: 15: RC2 = 1;
  5025  04C5  1283               	bcf	status, 5	;RP0=0, select bank0
  5026  04C6  1303               	bcf	status, 6	;RP1=0, select bank0
  5027  04C7  1507               	bsf	(58/8),(58)&7	;volatile
  5028                           	line	16
  5029                           ;lcd.c: 16: } else {
  5030  04C8  2CCC               	goto	l70
  5031                           	
  5032  04C9                     l69:	
  5033                           	line	17
  5034                           ;lcd.c: 17: RC2 = 0;
  5035  04C9  1283               	bcf	status, 5	;RP0=0, select bank0
  5036  04CA  1303               	bcf	status, 6	;RP1=0, select bank0
  5037  04CB  1107               	bcf	(58/8),(58)&7	;volatile
  5038                           	line	18
  5039                           	
  5040  04CC                     l70:	
  5041                           	line	19
  5042                           ;lcd.c: 18: }
  5043                           ;lcd.c: 19: if (c & 0b00000010) {
  5044  04CC  1683               	bsf	status, 5	;RP0=1, select bank1
  5045  04CD  1303               	bcf	status, 6	;RP1=0, select bank1
  5046  04CE  1CE5               	btfss	(lcd_write@c)^080h,(1)&7
  5047  04CF  2CD1               	goto	u3901
  5048  04D0  2CD2               	goto	u3900
  5049  04D1                     u3901:
  5050  04D1  2CD6               	goto	l71
  5051  04D2                     u3900:
  5052                           	line	20
  5053                           	
  5054  04D2                     l4805:	
  5055                           ;lcd.c: 20: RB2 = 1;
  5056  04D2  1283               	bcf	status, 5	;RP0=0, select bank0
  5057  04D3  1303               	bcf	status, 6	;RP1=0, select bank0
  5058  04D4  1506               	bsf	(50/8),(50)&7	;volatile
  5059                           	line	21
  5060                           ;lcd.c: 21: } else {
  5061  04D5  2CD9               	goto	l72
  5062                           	
  5063  04D6                     l71:	
  5064                           	line	22
  5065                           ;lcd.c: 22: RB2 = 0;
  5066  04D6  1283               	bcf	status, 5	;RP0=0, select bank0
  5067  04D7  1303               	bcf	status, 6	;RP1=0, select bank0
  5068  04D8  1106               	bcf	(50/8),(50)&7	;volatile
  5069                           	line	23
  5070                           	
  5071  04D9                     l72:	
  5072                           	line	24
  5073                           ;lcd.c: 23: }
  5074                           ;lcd.c: 24: if (c & 0b00000100) {
  5075  04D9  1683               	bsf	status, 5	;RP0=1, select bank1
  5076  04DA  1303               	bcf	status, 6	;RP1=0, select bank1
  5077  04DB  1D65               	btfss	(lcd_write@c)^080h,(2)&7
  5078  04DC  2CDE               	goto	u3911
  5079  04DD  2CDF               	goto	u3910
  5080  04DE                     u3911:
  5081  04DE  2CE3               	goto	l73
  5082  04DF                     u3910:
  5083                           	line	25
  5084                           	
  5085  04DF                     l4807:	
  5086                           ;lcd.c: 25: RB1 = 1;
  5087  04DF  1283               	bcf	status, 5	;RP0=0, select bank0
  5088  04E0  1303               	bcf	status, 6	;RP1=0, select bank0
  5089  04E1  1486               	bsf	(49/8),(49)&7	;volatile
  5090                           	line	26
  5091                           ;lcd.c: 26: } else {
  5092  04E2  2CE6               	goto	l74
  5093                           	
  5094  04E3                     l73:	
  5095                           	line	27
  5096                           ;lcd.c: 27: RB1 = 0;
  5097  04E3  1283               	bcf	status, 5	;RP0=0, select bank0
  5098  04E4  1303               	bcf	status, 6	;RP1=0, select bank0
  5099  04E5  1086               	bcf	(49/8),(49)&7	;volatile
  5100                           	line	28
  5101                           	
  5102  04E6                     l74:	
  5103                           	line	29
  5104                           ;lcd.c: 28: }
  5105                           ;lcd.c: 29: if (c & 0b00001000) {
  5106  04E6  1683               	bsf	status, 5	;RP0=1, select bank1
  5107  04E7  1303               	bcf	status, 6	;RP1=0, select bank1
  5108  04E8  1DE5               	btfss	(lcd_write@c)^080h,(3)&7
  5109  04E9  2CEB               	goto	u3921
  5110  04EA  2CEC               	goto	u3920
  5111  04EB                     u3921:
  5112  04EB  2CF0               	goto	l75
  5113  04EC                     u3920:
  5114                           	line	30
  5115                           	
  5116  04EC                     l4809:	
  5117                           ;lcd.c: 30: RB0 = 1;
  5118  04EC  1283               	bcf	status, 5	;RP0=0, select bank0
  5119  04ED  1303               	bcf	status, 6	;RP1=0, select bank0
  5120  04EE  1406               	bsf	(48/8),(48)&7	;volatile
  5121                           	line	31
  5122                           ;lcd.c: 31: } else {
  5123  04EF  2CF4               	goto	l4811
  5124                           	
  5125  04F0                     l75:	
  5126                           	line	32
  5127                           ;lcd.c: 32: RB0 = 0;
  5128  04F0  1283               	bcf	status, 5	;RP0=0, select bank0
  5129  04F1  1303               	bcf	status, 6	;RP1=0, select bank0
  5130  04F2  1006               	bcf	(48/8),(48)&7	;volatile
  5131  04F3  2CF4               	goto	l4811
  5132                           	line	33
  5133                           	
  5134  04F4                     l76:	
  5135                           	line	34
  5136                           	
  5137  04F4                     l4811:	
  5138                           ;lcd.c: 33: }
  5139                           ;lcd.c: 34: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5140                           	opt asmopt_off
  5141  04F4  300D               movlw	13
  5142  04F5  1683               	bsf	status, 5	;RP0=1, select bank1
  5143  04F6  1303               	bcf	status, 6	;RP1=0, select bank1
  5144  04F7  00E4               movwf	(??_lcd_write+0)^080h+0,f
  5145  04F8                     u3987:
  5146  04F8  0BE4               decfsz	(??_lcd_write+0)^080h+0,f
  5147  04F9  2CF8               	goto	u3987
  5148                           opt asmopt_on
  5149                           
  5150                           	line	35
  5151                           	
  5152  04FA                     l4813:	
  5153                           ;lcd.c: 35: RC1 = 1;
  5154  04FA  1283               	bcf	status, 5	;RP0=0, select bank0
  5155  04FB  1303               	bcf	status, 6	;RP1=0, select bank0
  5156  04FC  1487               	bsf	(57/8),(57)&7	;volatile
  5157                           	line	36
  5158                           	
  5159  04FD                     l4815:	
  5160                           ;lcd.c: 36: RC1 = 0;
  5161  04FD  1087               	bcf	(57/8),(57)&7	;volatile
  5162                           	line	37
  5163                           	
  5164  04FE                     l77:	
  5165  04FE  0008               	return
  5166                           	opt stack 0
  5167                           GLOBAL	__end_of_lcd_write
  5168  04FF                     	__end_of_lcd_write:
  5169                           	signat	_lcd_write,4216
  5170                           	global	_rs232_init
  5171                           
  5172 ;; *************** function _rs232_init *****************
  5173 ;; Defined at:
  5174 ;;		line 8 in file "rs232.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;		None
  5179 ;; Return value:  Size  Location     Type
  5180 ;;		None               void
  5181 ;; Registers used:
  5182 ;;		wreg
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5188 ;;      Params:         0       0       0       0       0
  5189 ;;      Locals:         0       0       0       0       0
  5190 ;;      Temps:          0       0       0       0       0
  5191 ;;      Totals:         0       0       0       0       0
  5192 ;;Total ram usage:        0 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    6
  5195 ;; This function calls:
  5196 ;;		Nothing
  5197 ;; This function is called by:
  5198 ;;		_main
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           psect	text10,local,class=CODE,delta=2,merge=1
  5202                           global __ptext10
  5203  159B                     __ptext10:	;psect for function _rs232_init
  5204                           psect	text10
  5205                           	file	"rs232.c"
  5206                           	line	8
  5207                           	global	__size_of_rs232_init
  5208  0019                     	__size_of_rs232_init	equ	__end_of_rs232_init-_rs232_init
  5209                           	
  5210  159B                     _rs232_init:	
  5211                           ;incstack = 0
  5212                           	opt	stack 1
  5213                           ; Regs used in _rs232_init: [wreg]
  5214                           	line	10
  5215                           	
  5216  159B                     l4709:	
  5217                           ;rs232.c: 10: BRG16 = 0;
  5218  159B  1683               	bsf	status, 5	;RP0=1, select bank3
  5219  159C  1703               	bsf	status, 6	;RP1=1, select bank3
  5220  159D  1187               	bcf	(3131/8)^0180h,(3131)&7	;volatile
  5221                           	line	12
  5222                           ;rs232.c: 12: TRISC6 = 0;
  5223  159E  1683               	bsf	status, 5	;RP0=1, select bank1
  5224  159F  1303               	bcf	status, 6	;RP1=0, select bank1
  5225  15A0  1307               	bcf	(1086/8)^080h,(1086)&7	;volatile
  5226                           	line	13
  5227                           ;rs232.c: 13: TRISC7 = 1;
  5228  15A1  1787               	bsf	(1087/8)^080h,(1087)&7	;volatile
  5229                           	line	14
  5230                           ;rs232.c: 14: TXEN = 1;
  5231  15A2  1698               	bsf	(1221/8)^080h,(1221)&7	;volatile
  5232                           	line	15
  5233                           ;rs232.c: 15: SYNC = 0;
  5234  15A3  1218               	bcf	(1220/8)^080h,(1220)&7	;volatile
  5235                           	line	16
  5236                           ;rs232.c: 16: SPEN = 1;
  5237  15A4  1283               	bcf	status, 5	;RP0=0, select bank0
  5238  15A5  1303               	bcf	status, 6	;RP1=0, select bank0
  5239  15A6  1798               	bsf	(199/8),(199)&7	;volatile
  5240                           	line	17
  5241                           ;rs232.c: 17: CREN = 1;
  5242  15A7  1618               	bsf	(196/8),(196)&7	;volatile
  5243                           	line	18
  5244                           ;rs232.c: 18: PIE1bits.RCIE = 1;
  5245  15A8  1683               	bsf	status, 5	;RP0=1, select bank1
  5246  15A9  1303               	bcf	status, 6	;RP1=0, select bank1
  5247  15AA  168C               	bsf	(140)^080h,5	;volatile
  5248                           	line	19
  5249                           ;rs232.c: 19: INTCONbits.PEIE = 1;
  5250  15AB  170B               	bsf	(11),6	;volatile
  5251                           	line	20
  5252                           ;rs232.c: 20: BRGH = 0;
  5253  15AC  1118               	bcf	(1218/8)^080h,(1218)&7	;volatile
  5254                           	line	21
  5255                           	
  5256  15AD                     l4711:	
  5257                           ;rs232.c: 21: SPBRG = 25;
  5258  15AD  3019               	movlw	(019h)
  5259  15AE  0099               	movwf	(153)^080h	;volatile
  5260                           	line	22
  5261                           	
  5262  15AF                     l4713:	
  5263                           ;rs232.c: 22: TX9 = 0;
  5264  15AF  1318               	bcf	(1222/8)^080h,(1222)&7	;volatile
  5265                           	line	23
  5266                           	
  5267  15B0                     l4715:	
  5268                           ;rs232.c: 23: PIR1bits.RCIF = 0;
  5269  15B0  1283               	bcf	status, 5	;RP0=0, select bank0
  5270  15B1  1303               	bcf	status, 6	;RP1=0, select bank0
  5271  15B2  128C               	bcf	(12),5	;volatile
  5272                           	line	24
  5273                           	
  5274  15B3                     l313:	
  5275  15B3  0008               	return
  5276                           	opt stack 0
  5277                           GLOBAL	__end_of_rs232_init
  5278  15B4                     	__end_of_rs232_init:
  5279                           	signat	_rs232_init,88
  5280                           	global	_btns_init
  5281                           
  5282 ;; *************** function _btns_init *****************
  5283 ;; Defined at:
  5284 ;;		line 25 in file "botoes.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;		None               void
  5291 ;; Registers used:
  5292 ;;		wreg
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5298 ;;      Params:         0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0
  5301 ;;      Totals:         0       0       0       0       0
  5302 ;;Total ram usage:        0 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    6
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_main
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           psect	text11,local,class=CODE,delta=2,merge=1
  5312                           global __ptext11
  5313  07C6                     __ptext11:	;psect for function _btns_init
  5314                           psect	text11
  5315                           	file	"botoes.c"
  5316                           	line	25
  5317                           	global	__size_of_btns_init
  5318  0034                     	__size_of_btns_init	equ	__end_of_btns_init-_btns_init
  5319                           	
  5320  07C6                     _btns_init:	
  5321                           ;incstack = 0
  5322                           	opt	stack 1
  5323                           ; Regs used in _btns_init: [wreg]
  5324                           	line	31
  5325                           	
  5326  07C6                     l4703:	
  5327                           ;botoes.c: 31: RB4 = RB5 = RB6 = RB7 = 0;
  5328  07C6  1283               	bcf	status, 5	;RP0=0, select bank0
  5329  07C7  1303               	bcf	status, 6	;RP1=0, select bank0
  5330  07C8  1386               	bcf	(55/8),(55)&7	;volatile
  5331  07C9  1306               	bcf	(54/8),(54)&7	;volatile
  5332  07CA  1286               	bcf	(53/8),(53)&7	;volatile
  5333  07CB  1206               	bcf	(52/8),(52)&7	;volatile
  5334                           	line	32
  5335                           ;botoes.c: 32: TRISB4 = TRISB5 = TRISB6 = TRISB7 = 1;
  5336  07CC  1683               	bsf	status, 5	;RP0=1, select bank1
  5337  07CD  1303               	bcf	status, 6	;RP1=0, select bank1
  5338  07CE  1786               	bsf	(1079/8)^080h,(1079)&7	;volatile
  5339  07CF  1B86               	btfsc	(1079/8)^080h,(1079)&7	;volatile
  5340  07D0  2FD2               	goto	u3791
  5341  07D1  2FD6               	goto	u3790
  5342                           	
  5343  07D2                     u3791:
  5344  07D2  1683               	bsf	status, 5	;RP0=1, select bank1
  5345  07D3  1303               	bcf	status, 6	;RP1=0, select bank1
  5346  07D4  1706               	bsf	(1078/8)^080h,(1078)&7	;volatile
  5347  07D5  2FD9               	goto	u3804
  5348  07D6                     u3790:
  5349  07D6  1683               	bsf	status, 5	;RP0=1, select bank1
  5350  07D7  1303               	bcf	status, 6	;RP1=0, select bank1
  5351  07D8  1306               	bcf	(1078/8)^080h,(1078)&7	;volatile
  5352  07D9                     u3804:
  5353  07D9  1B06               	btfsc	(1078/8)^080h,(1078)&7	;volatile
  5354  07DA  2FDC               	goto	u3801
  5355  07DB  2FE0               	goto	u3800
  5356                           	
  5357  07DC                     u3801:
  5358  07DC  1683               	bsf	status, 5	;RP0=1, select bank1
  5359  07DD  1303               	bcf	status, 6	;RP1=0, select bank1
  5360  07DE  1686               	bsf	(1077/8)^080h,(1077)&7	;volatile
  5361  07DF  2FE3               	goto	u3814
  5362  07E0                     u3800:
  5363  07E0  1683               	bsf	status, 5	;RP0=1, select bank1
  5364  07E1  1303               	bcf	status, 6	;RP1=0, select bank1
  5365  07E2  1286               	bcf	(1077/8)^080h,(1077)&7	;volatile
  5366  07E3                     u3814:
  5367  07E3  1A86               	btfsc	(1077/8)^080h,(1077)&7	;volatile
  5368  07E4  2FE6               	goto	u3811
  5369  07E5  2FEA               	goto	u3810
  5370                           	
  5371  07E6                     u3811:
  5372  07E6  1683               	bsf	status, 5	;RP0=1, select bank1
  5373  07E7  1303               	bcf	status, 6	;RP1=0, select bank1
  5374  07E8  1606               	bsf	(1076/8)^080h,(1076)&7	;volatile
  5375  07E9  2FED               	goto	u3824
  5376  07EA                     u3810:
  5377  07EA  1683               	bsf	status, 5	;RP0=1, select bank1
  5378  07EB  1303               	bcf	status, 6	;RP1=0, select bank1
  5379  07EC  1206               	bcf	(1076/8)^080h,(1076)&7	;volatile
  5380  07ED                     u3824:
  5381                           	line	34
  5382                           ;botoes.c: 34: OPTION_REGbits.nRBPU = 0;
  5383  07ED  1381               	bcf	(129)^080h,7	;volatile
  5384                           	line	35
  5385                           	
  5386  07EE                     l4705:	
  5387                           ;botoes.c: 35: WPUB = 0xf0;
  5388  07EE  30F0               	movlw	(0F0h)
  5389  07EF  0095               	movwf	(149)^080h	;volatile
  5390                           	line	40
  5391                           ;botoes.c: 40: ANSELH = 0b00010010;
  5392  07F0  3012               	movlw	(012h)
  5393  07F1  1683               	bsf	status, 5	;RP0=1, select bank3
  5394  07F2  1703               	bsf	status, 6	;RP1=1, select bank3
  5395  07F3  0089               	movwf	(393)^0180h	;volatile
  5396                           	line	41
  5397                           ;botoes.c: 41: IOCB = 0xf0;
  5398  07F4  30F0               	movlw	(0F0h)
  5399  07F5  1683               	bsf	status, 5	;RP0=1, select bank1
  5400  07F6  1303               	bcf	status, 6	;RP1=0, select bank1
  5401  07F7  0096               	movwf	(150)^080h	;volatile
  5402                           	line	44
  5403                           	
  5404  07F8                     l4707:	
  5405                           ;botoes.c: 44: INTCONbits.RBIE = 1;
  5406  07F8  158B               	bsf	(11),3	;volatile
  5407                           	line	46
  5408                           	
  5409  07F9                     l134:	
  5410  07F9  0008               	return
  5411                           	opt stack 0
  5412                           GLOBAL	__end_of_btns_init
  5413  07FA                     	__end_of_btns_init:
  5414                           	signat	_btns_init,88
  5415                           	global	_handler
  5416                           
  5417 ;; *************** function _handler *****************
  5418 ;; Defined at:
  5419 ;;		line 14 in file "handler.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;		None
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  pos_taxa        2    2[BANK1 ] unsigned int 
  5424 ;;  tempo_amostr    2    0[BANK1 ] unsigned int 
  5425 ;;  option          1    4[BANK1 ] unsigned char 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;		None               void
  5428 ;; Registers used:
  5429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5435 ;;      Params:         0       0       0       0       0
  5436 ;;      Locals:         0       0       5       0       0
  5437 ;;      Temps:          0       5       0       0       0
  5438 ;;      Totals:         0       5       5       0       0
  5439 ;;Total ram usage:       10 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    5
  5442 ;; This function calls:
  5443 ;;		_btns_testa
  5444 ;;		_rs232_transmite
  5445 ;;		_eeprom_ler_word
  5446 ;;		_adcon_captura_grava
  5447 ;;		_estado_maquina
  5448 ;; This function is called by:
  5449 ;;		Interrupt level 1
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           psect	text12,local,class=CODE,delta=2,merge=1
  5453                           global __ptext12
  5454  0D75                     __ptext12:	;psect for function _handler
  5455                           psect	text12
  5456                           	file	"handler.c"
  5457                           	line	14
  5458                           	global	__size_of_handler
  5459  00A6                     	__size_of_handler	equ	__end_of_handler-_handler
  5460                           	
  5461  0D75                     _handler:	
  5462                           ;incstack = 0
  5463 ;; using string table level
  5464                           	opt	stack 1
  5465                           ; Regs used in _handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5466                           psect	intentry,class=CODE,delta=2
  5467                           global __pintentry
  5468  0004                     __pintentry:
  5469                           global interrupt_function
  5470  0004                     interrupt_function:
  5471                           	global saved_w
  5472  007E                     	saved_w	set	btemp+0
  5473  0004  00FE               	movwf	saved_w
  5474  0005  0E03               	swapf	status,w
  5475  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  5476  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  5477  0008  00EA               	movwf	(??_handler+1)
  5478  0009  0804               	movf	fsr0,w
  5479  000A  00EB               	movwf	(??_handler+2)
  5480  000B  080A               	movf	pclath,w
  5481  000C  00EC               	movwf	(??_handler+3)
  5482  000D  087F               	movf	btemp+1,w
  5483  000E  00ED               	movwf	(??_handler+4)
  5484  000F  120A  158A  2D75   	ljmp	_handler
  5485                           psect	text12
  5486                           	line	29
  5487                           	
  5488  0D75                     i1l4621:	
  5489                           ;handler.c: 16: uint8_t option;
  5490                           ;handler.c: 18: static uint16_t count_t0 = 0;
  5491                           ;handler.c: 22: uint16_t tempo_amostra, pos_taxa;
  5492                           ;handler.c: 29: if (PIE1bits.RCIE) {
  5493  0D75  1683               	bsf	status, 5	;RP0=1, select bank1
  5494  0D76  1303               	bcf	status, 6	;RP1=0, select bank1
  5495  0D77  1E8C               	btfss	(140)^080h,5	;volatile
  5496  0D78  2D7A               	goto	u366_21
  5497  0D79  2D7B               	goto	u366_20
  5498  0D7A                     u366_21:
  5499  0D7A  2D8F               	goto	i1l4629
  5500  0D7B                     u366_20:
  5501                           	line	30
  5502                           	
  5503  0D7B                     i1l4623:	
  5504                           ;handler.c: 30: if (PIR1bits.RCIF) {
  5505  0D7B  1283               	bcf	status, 5	;RP0=0, select bank0
  5506  0D7C  1303               	bcf	status, 6	;RP1=0, select bank0
  5507  0D7D  1E8C               	btfss	(12),5	;volatile
  5508  0D7E  2D80               	goto	u367_21
  5509  0D7F  2D81               	goto	u367_20
  5510  0D80                     u367_21:
  5511  0D80  2D8F               	goto	i1l4629
  5512  0D81                     u367_20:
  5513                           	line	31
  5514                           	
  5515  0D81                     i1l4625:	
  5516                           ;handler.c: 31: if (RCREG == 0x41) {
  5517  0D81  081A               	movf	(26),w	;volatile
  5518  0D82  3A41               	xorlw	041h
  5519  0D83  1D03               	skipz
  5520  0D84  2D86               	goto	u368_21
  5521  0D85  2D87               	goto	u368_20
  5522  0D86                     u368_21:
  5523  0D86  2D8F               	goto	i1l4629
  5524  0D87                     u368_20:
  5525                           	line	43
  5526                           	
  5527  0D87                     i1l4627:	
  5528                           ;handler.c: 43: rs232_transmite();
  5529  0D87  120A  158A  23DD   	fcall	_rs232_transmite
              120A  158A         
  5530  0D8C  2D8F               	goto	i1l4629
  5531                           	line	47
  5532                           	
  5533  0D8D                     i1l171:	
  5534  0D8D  2D8F               	goto	i1l4629
  5535                           	line	48
  5536                           	
  5537  0D8E                     i1l170:	
  5538  0D8E  2D8F               	goto	i1l4629
  5539                           	line	49
  5540                           	
  5541  0D8F                     i1l169:	
  5542                           	line	51
  5543                           	
  5544  0D8F                     i1l4629:	
  5545                           ;handler.c: 47: }
  5546                           ;handler.c: 48: }
  5547                           ;handler.c: 49: }
  5548                           ;handler.c: 51: if (INTCONbits.T0IE) {
  5549  0D8F  1E8B               	btfss	(11),5	;volatile
  5550  0D90  2D92               	goto	u369_21
  5551  0D91  2D93               	goto	u369_20
  5552  0D92                     u369_21:
  5553  0D92  2DEC               	goto	i1l4649
  5554  0D93                     u369_20:
  5555                           	line	52
  5556                           	
  5557  0D93                     i1l4631:	
  5558                           ;handler.c: 52: if (INTCONbits.T0IF) {
  5559  0D93  1D0B               	btfss	(11),2	;volatile
  5560  0D94  2D96               	goto	u370_21
  5561  0D95  2D97               	goto	u370_20
  5562  0D96                     u370_21:
  5563  0D96  2DEC               	goto	i1l4649
  5564  0D97                     u370_20:
  5565                           	line	55
  5566                           	
  5567  0D97                     i1l4633:	
  5568                           ;handler.c: 55: pos_taxa = eeprom_ler_word(0x02);
  5569  0D97  3002               	movlw	(02h)
  5570  0D98  160A  118A  2678   	fcall	_eeprom_ler_word
              120A  158A         
  5571  0D9D  0873               	movf	(1+(?_eeprom_ler_word)),w
  5572  0D9E  1683               	bsf	status, 5	;RP0=1, select bank1
  5573  0D9F  1303               	bcf	status, 6	;RP1=0, select bank1
  5574  0DA0  01E2               	clrf	(handler@pos_taxa+1)^080h
  5575  0DA1  07E2               	addwf	(handler@pos_taxa+1)^080h
  5576  0DA2  0872               	movf	(0+(?_eeprom_ler_word)),w
  5577  0DA3  01E1               	clrf	(handler@pos_taxa)^080h
  5578  0DA4  07E1               	addwf	(handler@pos_taxa)^080h
  5579                           
  5580                           	line	57
  5581                           	
  5582  0DA5                     i1l4635:	
  5583                           ;handler.c: 57: tempo_amostra = menu_tempo_amostra[pos_taxa].ul_tempo_amostra;
  5584  0DA5  0861               	movf	(handler@pos_taxa)^080h,w
  5585  0DA6  1283               	bcf	status, 5	;RP0=0, select bank0
  5586  0DA7  1303               	bcf	status, 6	;RP1=0, select bank0
  5587  0DA8  00E9               	movwf	(??_handler+0)+0
  5588  0DA9  3001               	movlw	(02h)-1
  5589  0DAA                     u371_25:
  5590  0DAA  1003               	clrc
  5591  0DAB  0DE9               	rlf	(??_handler+0)+0,f
  5592  0DAC  3EFF               	addlw	-1
  5593  0DAD  1D03               	skipz
  5594  0DAE  2DAA               	goto	u371_25
  5595  0DAF  1003               	clrc
  5596  0DB0  0D69               	rlf	(??_handler+0)+0,w
  5597  0DB1  3E02               	addlw	02h
  5598  0DB2  3E12               	addlw	low(_menu_tempo_amostra|8000h)
  5599  0DB3  0084               	movwf	fsr0
  5600  0DB4  3085               	movlw	high(_menu_tempo_amostra|8000h)
  5601  0DB5  1803               	skipnc
  5602  0DB6  3E01               	addlw	1
  5603  0DB7  00FF               	movwf	btemp+1
  5604  0DB8  120A  118A  2500   	fcall	stringtab
              120A  158A         
  5605  0DBD  1683               	bsf	status, 5	;RP0=1, select bank1
  5606  0DBE  1303               	bcf	status, 6	;RP1=0, select bank1
  5607  0DBF  00DF               	movwf	(handler@tempo_amostra)^080h
  5608  0DC0  1283               	bcf	status, 5	;RP0=0, select bank0
  5609  0DC1  1303               	bcf	status, 6	;RP1=0, select bank0
  5610  0DC2  120A  118A  2500   	fcall	stringtab
              120A  158A         
  5611  0DC7  1683               	bsf	status, 5	;RP0=1, select bank1
  5612  0DC8  1303               	bcf	status, 6	;RP1=0, select bank1
  5613  0DC9  00E0               	movwf	(handler@tempo_amostra+1)^080h
  5614                           	line	66
  5615                           	
  5616  0DCA                     i1l4637:	
  5617                           ;handler.c: 66: if (count_t0 != tempo_amostra) {
  5618  0DCA  0860               	movf	(handler@tempo_amostra+1)^080h,w
  5619  0DCB  064E               	xorwf	(handler@count_t0+1)^080h,w
  5620  0DCC  1D03               	skipz
  5621  0DCD  2DD0               	goto	u372_25
  5622  0DCE  085F               	movf	(handler@tempo_amostra)^080h,w
  5623  0DCF  064D               	xorwf	(handler@count_t0)^080h,w
  5624  0DD0                     u372_25:
  5625                           
  5626  0DD0  1903               	skipnz
  5627  0DD1  2DD3               	goto	u372_21
  5628  0DD2  2DD4               	goto	u372_20
  5629  0DD3                     u372_21:
  5630  0DD3  2DDB               	goto	i1l4641
  5631  0DD4                     u372_20:
  5632                           	line	67
  5633                           	
  5634  0DD4                     i1l4639:	
  5635                           ;handler.c: 67: count_t0++;
  5636  0DD4  3001               	movlw	low(01h)
  5637  0DD5  07CD               	addwf	(handler@count_t0)^080h,f
  5638  0DD6  1803               	skipnc
  5639  0DD7  0ACE               	incf	(handler@count_t0+1)^080h,f
  5640  0DD8  3000               	movlw	high(01h)
  5641  0DD9  07CE               	addwf	(handler@count_t0+1)^080h,f
  5642                           	line	76
  5643                           ;handler.c: 76: } else {
  5644  0DDA  2DE5               	goto	i1l4645
  5645                           	
  5646  0DDB                     i1l174:	
  5647                           	line	77
  5648                           	
  5649  0DDB                     i1l4641:	
  5650                           ;handler.c: 77: adcon_captura_grava();
  5651  0DDB  120A  118A  2696   	fcall	_adcon_captura_grava
              120A  158A         
  5652                           	line	92
  5653                           	
  5654  0DE0                     i1l4643:	
  5655                           ;handler.c: 92: count_t0 = 0;
  5656  0DE0  1683               	bsf	status, 5	;RP0=1, select bank1
  5657  0DE1  1303               	bcf	status, 6	;RP1=0, select bank1
  5658  0DE2  01CD               	clrf	(handler@count_t0)^080h
  5659  0DE3  01CE               	clrf	(handler@count_t0+1)^080h
  5660  0DE4  2DE5               	goto	i1l4645
  5661                           	line	93
  5662                           	
  5663  0DE5                     i1l175:	
  5664                           	line	94
  5665                           	
  5666  0DE5                     i1l4645:	
  5667                           ;handler.c: 93: }
  5668                           ;handler.c: 94: TMR0 = 39;
  5669  0DE5  3027               	movlw	(027h)
  5670  0DE6  1283               	bcf	status, 5	;RP0=0, select bank0
  5671  0DE7  1303               	bcf	status, 6	;RP1=0, select bank0
  5672  0DE8  0081               	movwf	(1)	;volatile
  5673                           	line	95
  5674                           	
  5675  0DE9                     i1l4647:	
  5676                           ;handler.c: 95: INTCONbits.T0IF = 0;
  5677  0DE9  110B               	bcf	(11),2	;volatile
  5678  0DEA  2DEC               	goto	i1l4649
  5679                           	line	96
  5680                           	
  5681  0DEB                     i1l173:	
  5682  0DEB  2DEC               	goto	i1l4649
  5683                           	line	97
  5684                           	
  5685  0DEC                     i1l172:	
  5686                           	line	100
  5687                           	
  5688  0DEC                     i1l4649:	
  5689                           ;handler.c: 96: }
  5690                           ;handler.c: 97: }
  5691                           ;handler.c: 100: if (RBIE) {
  5692  0DEC  1D8B               	btfss	(91/8),(91)&7	;volatile
  5693  0DED  2DEF               	goto	u373_21
  5694  0DEE  2DF0               	goto	u373_20
  5695  0DEF                     u373_21:
  5696  0DEF  2E0E               	goto	i1l179
  5697  0DF0                     u373_20:
  5698                           	line	102
  5699                           	
  5700  0DF0                     i1l4651:	
  5701                           ;handler.c: 102: if (RBIF) {
  5702  0DF0  1C0B               	btfss	(88/8),(88)&7	;volatile
  5703  0DF1  2DF3               	goto	u374_21
  5704  0DF2  2DF4               	goto	u374_20
  5705  0DF3                     u374_21:
  5706  0DF3  2E0E               	goto	i1l179
  5707  0DF4                     u374_20:
  5708                           	line	106
  5709                           	
  5710  0DF4                     i1l4653:	
  5711                           ;handler.c: 106: option = btns_testa();
  5712  0DF4  160A  118A  26CD   	fcall	_btns_testa
              120A  158A         
  5713  0DF9  1283               	bcf	status, 5	;RP0=0, select bank0
  5714  0DFA  1303               	bcf	status, 6	;RP1=0, select bank0
  5715  0DFB  00E9               	movwf	(??_handler+0)+0
  5716  0DFC  0869               	movf	(??_handler+0)+0,w
  5717  0DFD  1683               	bsf	status, 5	;RP0=1, select bank1
  5718  0DFE  1303               	bcf	status, 6	;RP1=0, select bank1
  5719  0DFF  00E3               	movwf	(handler@option)^080h
  5720                           	line	108
  5721                           	
  5722  0E00                     i1l4655:	
  5723                           ;handler.c: 108: if (option != 0) {
  5724  0E00  0863               	movf	(handler@option)^080h,w
  5725  0E01  1D03               	skipz
  5726  0E02  2E04               	goto	u375_20
  5727  0E03  2E0B               	goto	i1l4659
  5728  0E04                     u375_20:
  5729                           	line	109
  5730                           	
  5731  0E04                     i1l4657:	
  5732                           ;handler.c: 109: estado_maquina(option);
  5733  0E04  0863               	movf	(handler@option)^080h,w
  5734  0E05  120A  158A  2368   	fcall	_estado_maquina
              120A  158A         
  5735  0E0A  2E0B               	goto	i1l4659
  5736                           	line	110
  5737                           	
  5738  0E0B                     i1l178:	
  5739                           	line	113
  5740                           	
  5741  0E0B                     i1l4659:	
  5742                           ;handler.c: 110: }
  5743                           ;handler.c: 113: RBIF = 0;
  5744  0E0B  100B               	bcf	(88/8),(88)&7	;volatile
  5745  0E0C  2E0E               	goto	i1l179
  5746                           	line	117
  5747                           	
  5748  0E0D                     i1l177:	
  5749  0E0D  2E0E               	goto	i1l179
  5750                           	line	118
  5751                           	
  5752  0E0E                     i1l176:	
  5753                           	line	130
  5754                           	
  5755  0E0E                     i1l179:	
  5756  0E0E  1283               	bcf	status, 5	;RP0=0, select bank0
  5757  0E0F  1303               	bcf	status, 6	;RP1=0, select bank0
  5758  0E10  086D               	movf	(??_handler+4),w
  5759  0E11  00FF               	movwf	btemp+1
  5760  0E12  086C               	movf	(??_handler+3),w
  5761  0E13  008A               	movwf	pclath
  5762  0E14  086B               	movf	(??_handler+2),w
  5763  0E15  0084               	movwf	fsr0
  5764  0E16  0E6A               	swapf	(??_handler+1)^00h,w
  5765  0E17  0083               	movwf	status
  5766  0E18  0EFE               	swapf	saved_w,f
  5767  0E19  0E7E               	swapf	saved_w,w
  5768  0E1A  0009               	retfie
  5769                           	opt stack 0
  5770                           GLOBAL	__end_of_handler
  5771  0E1B                     	__end_of_handler:
  5772                           	signat	_handler,88
  5773                           	global	_estado_maquina
  5774                           
  5775 ;; *************** function _estado_maquina *****************
  5776 ;; Defined at:
  5777 ;;		line 38 in file "estados.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  op              1    wreg     unsigned char 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  op              1   72[BANK0 ] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;		None               void
  5784 ;; Registers used:
  5785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5791 ;;      Params:         0       0       0       0       0
  5792 ;;      Locals:         0       1       0       0       0
  5793 ;;      Temps:          0       0       0       0       0
  5794 ;;      Totals:         0       1       0       0       0
  5795 ;;Total ram usage:        1 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    4
  5798 ;; This function calls:
  5799 ;;		_estado_inicial
  5800 ;;		_estado_menu_principal
  5801 ;;		_estado_captura_mostra
  5802 ;;		_estado_ver_todos
  5803 ;;		_estado_max_min
  5804 ;;		_estado_menu_limpar
  5805 ;;		_estado_menu_conf_tempo_amostra
  5806 ;;		_estado_menu_conf_quant_sensores
  5807 ;; This function is called by:
  5808 ;;		_handler
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           psect	text13,local,class=CODE,delta=2,merge=1
  5812                           global __ptext13
  5813  0B68                     __ptext13:	;psect for function _estado_maquina
  5814                           psect	text13
  5815                           	file	"estados.c"
  5816                           	line	38
  5817                           	global	__size_of_estado_maquina
  5818  0075                     	__size_of_estado_maquina	equ	__end_of_estado_maquina-_estado_maquina
  5819                           	
  5820  0B68                     _estado_maquina:	
  5821                           ;incstack = 0
  5822                           	opt	stack 0
  5823                           ; Regs used in _estado_maquina: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5824                           ;estado_maquina@op stored from wreg
  5825  0B68  1283               	bcf	status, 5	;RP0=0, select bank0
  5826  0B69  1303               	bcf	status, 6	;RP1=0, select bank0
  5827  0B6A  00E8               	movwf	(estado_maquina@op)
  5828                           	line	40
  5829                           	
  5830  0B6B                     i1l4597:	
  5831                           ;estados.c: 40: switch (gl_estado) {
  5832  0B6B  2BBD               	goto	i1l4619
  5833                           	line	41
  5834                           ;estados.c: 41: case EST_INICIO:
  5835                           	
  5836  0B6C                     i1l415:	
  5837                           	line	43
  5838                           	
  5839  0B6C                     i1l4599:	
  5840                           ;estados.c: 43: estado_inicial(op);
  5841  0B6C  1283               	bcf	status, 5	;RP0=0, select bank0
  5842  0B6D  0868               	movf	(estado_maquina@op),w
  5843  0B6E  160A  118A  24E2   	fcall	_estado_inicial
              120A  158A         
  5844                           	line	44
  5845                           ;estados.c: 44: break;
  5846  0B73  2BDC               	goto	i1l425
  5847                           	line	46
  5848                           ;estados.c: 46: case EST_MENU_PRINCIPAL:
  5849                           	
  5850  0B74                     i1l417:	
  5851                           	line	47
  5852                           	
  5853  0B74                     i1l4601:	
  5854                           ;estados.c: 47: estado_menu_principal(op);
  5855  0B74  1283               	bcf	status, 5	;RP0=0, select bank0
  5856  0B75  1303               	bcf	status, 6	;RP1=0, select bank0
  5857  0B76  0868               	movf	(estado_maquina@op),w
  5858  0B77  120A  118A  22FC   	fcall	_estado_menu_principal
              120A  158A         
  5859                           	line	48
  5860                           ;estados.c: 48: break;
  5861  0B7C  2BDC               	goto	i1l425
  5862                           	line	50
  5863                           ;estados.c: 50: case EST_CAPTURA_E_MOSTRA:
  5864                           	
  5865  0B7D                     i1l418:	
  5866                           	line	51
  5867                           	
  5868  0B7D                     i1l4603:	
  5869                           ;estados.c: 51: estado_captura_mostra(op);
  5870  0B7D  1283               	bcf	status, 5	;RP0=0, select bank0
  5871  0B7E  1303               	bcf	status, 6	;RP1=0, select bank0
  5872  0B7F  0868               	movf	(estado_maquina@op),w
  5873  0B80  160A  118A  252E   	fcall	_estado_captura_mostra
              120A  158A         
  5874                           	line	52
  5875                           ;estados.c: 52: break;
  5876  0B85  2BDC               	goto	i1l425
  5877                           	line	54
  5878                           ;estados.c: 54: case EST_CAPTURA_E_GRAVA:
  5879                           	
  5880  0B86                     i1l419:	
  5881                           	line	61
  5882                           	
  5883  0B86                     i1l4605:	
  5884                           ;estados.c: 61: estado_captura_mostra(op);
  5885  0B86  1283               	bcf	status, 5	;RP0=0, select bank0
  5886  0B87  1303               	bcf	status, 6	;RP1=0, select bank0
  5887  0B88  0868               	movf	(estado_maquina@op),w
  5888  0B89  160A  118A  252E   	fcall	_estado_captura_mostra
              120A  158A         
  5889                           	line	62
  5890                           ;estados.c: 62: break;
  5891  0B8E  2BDC               	goto	i1l425
  5892                           	line	64
  5893                           ;estados.c: 64: case EST_MOSTRA_TODOS:
  5894                           	
  5895  0B8F                     i1l420:	
  5896                           	line	65
  5897                           	
  5898  0B8F                     i1l4607:	
  5899                           ;estados.c: 65: estado_ver_todos(op);
  5900  0B8F  1283               	bcf	status, 5	;RP0=0, select bank0
  5901  0B90  1303               	bcf	status, 6	;RP1=0, select bank0
  5902  0B91  0868               	movf	(estado_maquina@op),w
  5903  0B92  120A  158A  2171   	fcall	_estado_ver_todos
              120A  158A         
  5904                           	line	66
  5905                           ;estados.c: 66: break;
  5906  0B97  2BDC               	goto	i1l425
  5907                           	line	68
  5908                           ;estados.c: 68: case EST_MOSTRA_MAX_MIN:
  5909                           	
  5910  0B98                     i1l421:	
  5911                           	line	69
  5912                           	
  5913  0B98                     i1l4609:	
  5914                           ;estados.c: 69: estado_max_min(op);
  5915  0B98  1283               	bcf	status, 5	;RP0=0, select bank0
  5916  0B99  1303               	bcf	status, 6	;RP1=0, select bank0
  5917  0B9A  0868               	movf	(estado_maquina@op),w
  5918  0B9B  160A  118A  250C   	fcall	_estado_max_min
              120A  158A         
  5919                           	line	70
  5920                           ;estados.c: 70: break;
  5921  0BA0  2BDC               	goto	i1l425
  5922                           	line	72
  5923                           ;estados.c: 72: case EST_LIMPAR:
  5924                           	
  5925  0BA1                     i1l422:	
  5926                           	line	73
  5927                           	
  5928  0BA1                     i1l4611:	
  5929                           ;estados.c: 73: estado_menu_limpar(op);
  5930  0BA1  1283               	bcf	status, 5	;RP0=0, select bank0
  5931  0BA2  1303               	bcf	status, 6	;RP1=0, select bank0
  5932  0BA3  0868               	movf	(estado_maquina@op),w
  5933  0BA4  160A  118A  251D   	fcall	_estado_menu_limpar
              120A  158A         
  5934                           	line	74
  5935                           ;estados.c: 74: break;
  5936  0BA9  2BDC               	goto	i1l425
  5937                           	line	76
  5938                           ;estados.c: 76: case EST_MENU_CONF_TEMPO_AMOSTRA:
  5939                           	
  5940  0BAA                     i1l423:	
  5941                           	line	77
  5942                           	
  5943  0BAA                     i1l4613:	
  5944                           ;estados.c: 77: estado_menu_conf_tempo_amostra(op);
  5945  0BAA  1283               	bcf	status, 5	;RP0=0, select bank0
  5946  0BAB  1303               	bcf	status, 6	;RP1=0, select bank0
  5947  0BAC  0868               	movf	(estado_maquina@op),w
  5948  0BAD  120A  158A  21C8   	fcall	_estado_menu_conf_tempo_amostra
              120A  158A         
  5949                           	line	78
  5950                           ;estados.c: 78: break;
  5951  0BB2  2BDC               	goto	i1l425
  5952                           	line	85
  5953                           ;estados.c: 85: case EST_MENU_CONF_QUANT_SENSORES:
  5954                           	
  5955  0BB3                     i1l424:	
  5956                           	line	86
  5957                           	
  5958  0BB3                     i1l4615:	
  5959                           ;estados.c: 86: estado_menu_conf_quant_sensores(op);
  5960  0BB3  1283               	bcf	status, 5	;RP0=0, select bank0
  5961  0BB4  1303               	bcf	status, 6	;RP1=0, select bank0
  5962  0BB5  0868               	movf	(estado_maquina@op),w
  5963  0BB6  120A  158A  211F   	fcall	_estado_menu_conf_quant_sensores
              120A  158A         
  5964                           	line	87
  5965                           ;estados.c: 87: break;
  5966  0BBB  2BDC               	goto	i1l425
  5967                           	line	88
  5968                           	
  5969  0BBC                     i1l4617:	
  5970                           ;estados.c: 88: }
  5971  0BBC  2BDC               	goto	i1l425
  5972                           	line	40
  5973                           	
  5974  0BBD                     i1l414:	
  5975                           	
  5976  0BBD                     i1l4619:	
  5977  0BBD  1683               	bsf	status, 5	;RP0=1, select bank1
  5978  0BBE  1303               	bcf	status, 6	;RP1=0, select bank1
  5979  0BBF  084F               	movf	(_gl_estado)^080h,w
  5980                           	; Switch size 1, requested type "space"
  5981                           ; Number of cases is 9, Range of values is 0 to 8
  5982                           ; switch strategies available:
  5983                           ; Name         Instructions Cycles
  5984                           ; simple_byte           28    15 (average)
  5985                           ; direct_byte           35     8 (fixed)
  5986                           ; jumptable            260     6 (fixed)
  5987                           ; rangetable            13     6 (fixed)
  5988                           ; spacedrange           24     9 (fixed)
  5989                           ; locatedrange           9     3 (fixed)
  5990                           ;	Chosen strategy is simple_byte
  5991                           
  5992                           	opt asmopt_off
  5993  0BC0  3A00               	xorlw	0^0	; case 0
  5994  0BC1  1903               	skipnz
  5995  0BC2  2B6C               	goto	i1l4599
  5996  0BC3  3A01               	xorlw	1^0	; case 1
  5997  0BC4  1903               	skipnz
  5998  0BC5  2B74               	goto	i1l4601
  5999  0BC6  3A03               	xorlw	2^1	; case 2
  6000  0BC7  1903               	skipnz
  6001  0BC8  2B7D               	goto	i1l4603
  6002  0BC9  3A01               	xorlw	3^2	; case 3
  6003  0BCA  1903               	skipnz
  6004  0BCB  2B86               	goto	i1l4605
  6005  0BCC  3A07               	xorlw	4^3	; case 4
  6006  0BCD  1903               	skipnz
  6007  0BCE  2B8F               	goto	i1l4607
  6008  0BCF  3A01               	xorlw	5^4	; case 5
  6009  0BD0  1903               	skipnz
  6010  0BD1  2B98               	goto	i1l4609
  6011  0BD2  3A03               	xorlw	6^5	; case 6
  6012  0BD3  1903               	skipnz
  6013  0BD4  2BA1               	goto	i1l4611
  6014  0BD5  3A01               	xorlw	7^6	; case 7
  6015  0BD6  1903               	skipnz
  6016  0BD7  2BAA               	goto	i1l4613
  6017  0BD8  3A0F               	xorlw	8^7	; case 8
  6018  0BD9  1903               	skipnz
  6019  0BDA  2BB3               	goto	i1l4615
  6020  0BDB  2BDC               	goto	i1l425
  6021                           	opt asmopt_on
  6022                           
  6023                           	line	88
  6024                           	
  6025  0BDC                     i1l416:	
  6026                           	line	89
  6027                           	
  6028  0BDC                     i1l425:	
  6029  0BDC  0008               	return
  6030                           	opt stack 0
  6031                           GLOBAL	__end_of_estado_maquina
  6032  0BDD                     	__end_of_estado_maquina:
  6033                           	signat	_estado_maquina,4216
  6034                           	global	_estado_menu_conf_quant_sensores
  6035                           
  6036 ;; *************** function _estado_menu_conf_quant_sensores *****************
  6037 ;; Defined at:
  6038 ;;		line 326 in file "estados.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  opt             1    wreg     unsigned char 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  opt             1   59[BANK0 ] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;		None               void
  6045 ;; Registers used:
  6046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6052 ;;      Params:         0       0       0       0       0
  6053 ;;      Locals:         0       1       0       0       0
  6054 ;;      Temps:          0       1       0       0       0
  6055 ;;      Totals:         0       2       0       0       0
  6056 ;;Total ram usage:        2 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    3
  6059 ;; This function calls:
  6060 ;;		_estado_executa_muda
  6061 ;;		i1_eeprom_write
  6062 ;; This function is called by:
  6063 ;;		_estado_maquina
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           psect	text14,local,class=CODE,delta=2,merge=1
  6067                           global __ptext14
  6068  091F                     __ptext14:	;psect for function _estado_menu_conf_quant_sensores
  6069                           psect	text14
  6070                           	file	"estados.c"
  6071                           	line	326
  6072                           	global	__size_of_estado_menu_conf_quant_sensores
  6073  0052                     	__size_of_estado_menu_conf_quant_sensores	equ	__end_of_estado_menu_conf_quant_sensores-
                                 _estado_menu_conf_quant_sensores
  6074                           	
  6075  091F                     _estado_menu_conf_quant_sensores:	
  6076                           ;incstack = 0
  6077                           	opt	stack 0
  6078                           ; Regs used in _estado_menu_conf_quant_sensores: [wreg-fsr0h+status,2+status,0+btemp+1+p
                                 clath+cstack]
  6079                           ;estado_menu_conf_quant_sensores@opt stored from wreg
  6080  091F  1283               	bcf	status, 5	;RP0=0, select bank0
  6081  0920  1303               	bcf	status, 6	;RP1=0, select bank0
  6082  0921  00DB               	movwf	(estado_menu_conf_quant_sensores@opt)
  6083                           	line	327
  6084                           	
  6085  0922                     i1l4575:	
  6086                           ;estados.c: 327: switch (opt) {
  6087  0922  2960               	goto	i1l4595
  6088                           	line	328
  6089                           ;estados.c: 328: case 3:
  6090                           	
  6091  0923                     i1l498:	
  6092                           	line	330
  6093                           ;estados.c: 330: if (gl_item_menu_config_sensores >= 1) {
  6094  0923  086E               	movf	(_gl_item_menu_config_sensores),w
  6095  0924  1D03               	skipz
  6096  0925  2927               	goto	u364_20
  6097  0926  2970               	goto	i1l505
  6098  0927                     u364_20:
  6099                           	line	331
  6100                           	
  6101  0927                     i1l4577:	
  6102                           ;estados.c: 331: gl_item_menu_config_sensores--;
  6103  0927  3001               	movlw	low(01h)
  6104  0928  02EE               	subwf	(_gl_item_menu_config_sensores),f
  6105                           	line	332
  6106                           	
  6107  0929                     i1l4579:	
  6108                           ;estados.c: 332: estado_executa_muda(EST_MENU_CONF_QUANT_SENSORES);
  6109  0929  3008               	movlw	(08h)
  6110  092A  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6111  092F  2970               	goto	i1l505
  6112                           	line	333
  6113                           	
  6114  0930                     i1l499:	
  6115                           	line	334
  6116                           ;estados.c: 333: }
  6117                           ;estados.c: 334: break;
  6118  0930  2970               	goto	i1l505
  6119                           	line	335
  6120                           ;estados.c: 335: case 4:
  6121                           	
  6122  0931                     i1l501:	
  6123                           	line	337
  6124                           	
  6125  0931                     i1l4581:	
  6126                           ;estados.c: 337: if (gl_item_menu_config_sensores < 4 - 1) {
  6127  0931  3003               	movlw	(03h)
  6128  0932  1283               	bcf	status, 5	;RP0=0, select bank0
  6129  0933  1303               	bcf	status, 6	;RP1=0, select bank0
  6130  0934  026E               	subwf	(_gl_item_menu_config_sensores),w
  6131  0935  1803               	skipnc
  6132  0936  2938               	goto	u365_21
  6133  0937  2939               	goto	u365_20
  6134  0938                     u365_21:
  6135  0938  2970               	goto	i1l505
  6136  0939                     u365_20:
  6137                           	line	338
  6138                           	
  6139  0939                     i1l4583:	
  6140                           ;estados.c: 338: gl_item_menu_config_sensores++;
  6141  0939  3001               	movlw	(01h)
  6142  093A  00DA               	movwf	(??_estado_menu_conf_quant_sensores+0)+0
  6143  093B  085A               	movf	(??_estado_menu_conf_quant_sensores+0)+0,w
  6144  093C  07EE               	addwf	(_gl_item_menu_config_sensores),f
  6145                           	line	339
  6146                           	
  6147  093D                     i1l4585:	
  6148                           ;estados.c: 339: estado_executa_muda(EST_MENU_CONF_QUANT_SENSORES);
  6149  093D  3008               	movlw	(08h)
  6150  093E  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6151  0943  2970               	goto	i1l505
  6152                           	line	340
  6153                           	
  6154  0944                     i1l502:	
  6155                           	line	341
  6156                           ;estados.c: 340: }
  6157                           ;estados.c: 341: break;
  6158  0944  2970               	goto	i1l505
  6159                           	line	342
  6160                           ;estados.c: 342: case 2:
  6161                           	
  6162  0945                     i1l503:	
  6163                           	line	343
  6164                           	
  6165  0945                     i1l4587:	
  6166                           ;estados.c: 343: estado_executa_muda(EST_MENU_PRINCIPAL);
  6167  0945  3001               	movlw	(01h)
  6168  0946  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6169                           	line	344
  6170                           ;estados.c: 344: break;
  6171  094B  2970               	goto	i1l505
  6172                           	line	345
  6173                           ;estados.c: 345: case 1:
  6174                           	
  6175  094C                     i1l504:	
  6176                           	line	346
  6177                           	
  6178  094C                     i1l4589:	
  6179                           ;estados.c: 346: eeprom_write(0x00, gl_item_menu_config_sensores);
  6180  094C  1283               	bcf	status, 5	;RP0=0, select bank0
  6181  094D  1303               	bcf	status, 6	;RP1=0, select bank0
  6182  094E  086E               	movf	(_gl_item_menu_config_sensores),w
  6183  094F  00DA               	movwf	(??_estado_menu_conf_quant_sensores+0)+0
  6184  0950  085A               	movf	(??_estado_menu_conf_quant_sensores+0)+0,w
  6185  0951  00F0               	movwf	(?i1_eeprom_write)
  6186  0952  3000               	movlw	(0)
  6187  0953  160A  118A  2759   	fcall	i1_eeprom_write
              120A  158A         
  6188                           	line	347
  6189                           	
  6190  0958                     i1l4591:	
  6191                           ;estados.c: 347: estado_executa_muda(EST_MENU_PRINCIPAL);
  6192  0958  3001               	movlw	(01h)
  6193  0959  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6194                           	line	348
  6195                           ;estados.c: 348: break;
  6196  095E  2970               	goto	i1l505
  6197                           	line	349
  6198                           	
  6199  095F                     i1l4593:	
  6200                           ;estados.c: 349: }
  6201  095F  2970               	goto	i1l505
  6202                           	line	327
  6203                           	
  6204  0960                     i1l497:	
  6205                           	
  6206  0960                     i1l4595:	
  6207  0960  1283               	bcf	status, 5	;RP0=0, select bank0
  6208  0961  1303               	bcf	status, 6	;RP1=0, select bank0
  6209  0962  085B               	movf	(estado_menu_conf_quant_sensores@opt),w
  6210                           	; Switch size 1, requested type "space"
  6211                           ; Number of cases is 4, Range of values is 1 to 4
  6212                           ; switch strategies available:
  6213                           ; Name         Instructions Cycles
  6214                           ; simple_byte           13     7 (average)
  6215                           ; direct_byte           23    11 (fixed)
  6216                           ; jumptable            263     9 (fixed)
  6217                           ;	Chosen strategy is simple_byte
  6218                           
  6219                           	opt asmopt_off
  6220  0963  3A01               	xorlw	1^0	; case 1
  6221  0964  1903               	skipnz
  6222  0965  294C               	goto	i1l4589
  6223  0966  3A03               	xorlw	2^1	; case 2
  6224  0967  1903               	skipnz
  6225  0968  2945               	goto	i1l4587
  6226  0969  3A01               	xorlw	3^2	; case 3
  6227  096A  1903               	skipnz
  6228  096B  2923               	goto	i1l498
  6229  096C  3A07               	xorlw	4^3	; case 4
  6230  096D  1903               	skipnz
  6231  096E  2931               	goto	i1l4581
  6232  096F  2970               	goto	i1l505
  6233                           	opt asmopt_on
  6234                           
  6235                           	line	349
  6236                           	
  6237  0970                     i1l500:	
  6238                           	line	350
  6239                           	
  6240  0970                     i1l505:	
  6241  0970  0008               	return
  6242                           	opt stack 0
  6243                           GLOBAL	__end_of_estado_menu_conf_quant_sensores
  6244  0971                     	__end_of_estado_menu_conf_quant_sensores:
  6245                           	signat	_estado_menu_conf_quant_sensores,4216
  6246                           	global	_estado_menu_conf_tempo_amostra
  6247                           
  6248 ;; *************** function _estado_menu_conf_tempo_amostra *****************
  6249 ;; Defined at:
  6250 ;;		line 287 in file "estados.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  opt             1    wreg     unsigned char 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  opt             1   58[BANK0 ] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;		None               void
  6257 ;; Registers used:
  6258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6264 ;;      Params:         0       0       0       0       0
  6265 ;;      Locals:         0       1       0       0       0
  6266 ;;      Temps:          0       0       0       0       0
  6267 ;;      Totals:         0       1       0       0       0
  6268 ;;Total ram usage:        1 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    3
  6271 ;; This function calls:
  6272 ;;		_estado_executa_muda
  6273 ;;		i1_eeprom_gravar_word
  6274 ;; This function is called by:
  6275 ;;		_estado_maquina
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           psect	text15,local,class=CODE,delta=2,merge=1
  6279                           global __ptext15
  6280  09C8                     __ptext15:	;psect for function _estado_menu_conf_tempo_amostra
  6281                           psect	text15
  6282                           	file	"estados.c"
  6283                           	line	287
  6284                           	global	__size_of_estado_menu_conf_tempo_amostra
  6285  0061                     	__size_of_estado_menu_conf_tempo_amostra	equ	__end_of_estado_menu_conf_tempo_amostra-_e
                                 stado_menu_conf_tempo_amostra
  6286                           	
  6287  09C8                     _estado_menu_conf_tempo_amostra:	
  6288                           ;incstack = 0
  6289                           	opt	stack 0
  6290                           ; Regs used in _estado_menu_conf_tempo_amostra: [wreg-fsr0h+status,2+status,0+btemp+1+pc
                                 lath+cstack]
  6291                           ;estado_menu_conf_tempo_amostra@opt stored from wreg
  6292  09C8  1283               	bcf	status, 5	;RP0=0, select bank0
  6293  09C9  1303               	bcf	status, 6	;RP1=0, select bank0
  6294  09CA  00DA               	movwf	(estado_menu_conf_tempo_amostra@opt)
  6295                           	line	288
  6296                           	
  6297  09CB                     i1l4551:	
  6298                           ;estados.c: 288: switch (opt) {
  6299  09CB  2A18               	goto	i1l4573
  6300                           	line	289
  6301                           ;estados.c: 289: case 3:
  6302                           	
  6303  09CC                     i1l483:	
  6304                           	line	290
  6305                           	
  6306  09CC                     i1l4553:	
  6307                           ;estados.c: 290: if (gl_item_menu_config_amostra >= 1) {
  6308  09CC  1683               	bsf	status, 5	;RP0=1, select bank1
  6309  09CD  1303               	bcf	status, 6	;RP1=0, select bank1
  6310  09CE  084C               	movf	(_gl_item_menu_config_amostra+1)^080h,w
  6311  09CF  044B               	iorwf	(_gl_item_menu_config_amostra)^080h,w
  6312  09D0  1903               	skipnz
  6313  09D1  29D3               	goto	u362_21
  6314  09D2  29D4               	goto	u362_20
  6315  09D3                     u362_21:
  6316  09D3  2A28               	goto	i1l490
  6317  09D4                     u362_20:
  6318                           	line	291
  6319                           	
  6320  09D4                     i1l4555:	
  6321                           ;estados.c: 291: gl_item_menu_config_amostra--;
  6322  09D4  3001               	movlw	low(01h)
  6323  09D5  02CB               	subwf	(_gl_item_menu_config_amostra)^080h,f
  6324  09D6  3000               	movlw	high(01h)
  6325  09D7  1C03               	skipc
  6326  09D8  03CC               	decf	(_gl_item_menu_config_amostra+1)^080h,f
  6327  09D9  02CC               	subwf	(_gl_item_menu_config_amostra+1)^080h,f
  6328                           	line	292
  6329                           	
  6330  09DA                     i1l4557:	
  6331                           ;estados.c: 292: estado_executa_muda(EST_MENU_CONF_TEMPO_AMOSTRA);
  6332  09DA  3007               	movlw	(07h)
  6333  09DB  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6334  09E0  2A28               	goto	i1l490
  6335                           	line	293
  6336                           	
  6337  09E1                     i1l484:	
  6338                           	line	294
  6339                           ;estados.c: 293: }
  6340                           ;estados.c: 294: break;
  6341  09E1  2A28               	goto	i1l490
  6342                           	line	295
  6343                           ;estados.c: 295: case 4:
  6344                           	
  6345  09E2                     i1l486:	
  6346                           	line	297
  6347                           	
  6348  09E2                     i1l4559:	
  6349                           ;estados.c: 297: if (gl_item_menu_config_amostra < ((sizeof(menu_tempo_amostra) / sizeof
                                 (menu_amostra)) - 1)) {
  6350  09E2  3000               	movlw	high(06h)
  6351  09E3  1683               	bsf	status, 5	;RP0=1, select bank1
  6352  09E4  1303               	bcf	status, 6	;RP1=0, select bank1
  6353  09E5  024C               	subwf	(_gl_item_menu_config_amostra+1)^080h,w
  6354  09E6  3006               	movlw	low(06h)
  6355  09E7  1903               	skipnz
  6356  09E8  024B               	subwf	(_gl_item_menu_config_amostra)^080h,w
  6357  09E9  1803               	skipnc
  6358  09EA  29EC               	goto	u363_21
  6359  09EB  29ED               	goto	u363_20
  6360  09EC                     u363_21:
  6361  09EC  2A28               	goto	i1l490
  6362  09ED                     u363_20:
  6363                           	line	298
  6364                           	
  6365  09ED                     i1l4561:	
  6366                           ;estados.c: 298: gl_item_menu_config_amostra++;
  6367  09ED  3001               	movlw	low(01h)
  6368  09EE  07CB               	addwf	(_gl_item_menu_config_amostra)^080h,f
  6369  09EF  1803               	skipnc
  6370  09F0  0ACC               	incf	(_gl_item_menu_config_amostra+1)^080h,f
  6371  09F1  3000               	movlw	high(01h)
  6372  09F2  07CC               	addwf	(_gl_item_menu_config_amostra+1)^080h,f
  6373                           	line	299
  6374                           	
  6375  09F3                     i1l4563:	
  6376                           ;estados.c: 299: estado_executa_muda(EST_MENU_CONF_TEMPO_AMOSTRA);
  6377  09F3  3007               	movlw	(07h)
  6378  09F4  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6379  09F9  2A28               	goto	i1l490
  6380                           	line	300
  6381                           	
  6382  09FA                     i1l487:	
  6383                           	line	301
  6384                           ;estados.c: 300: }
  6385                           ;estados.c: 301: break;
  6386  09FA  2A28               	goto	i1l490
  6387                           	line	302
  6388                           ;estados.c: 302: case 2:
  6389                           	
  6390  09FB                     i1l488:	
  6391                           	line	303
  6392                           	
  6393  09FB                     i1l4565:	
  6394                           ;estados.c: 303: estado_executa_muda(EST_MENU_PRINCIPAL);
  6395  09FB  3001               	movlw	(01h)
  6396  09FC  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6397                           	line	304
  6398                           ;estados.c: 304: break;
  6399  0A01  2A28               	goto	i1l490
  6400                           	line	305
  6401                           ;estados.c: 305: case 1:
  6402                           	
  6403  0A02                     i1l489:	
  6404                           	line	306
  6405                           	
  6406  0A02                     i1l4567:	
  6407                           ;estados.c: 306: eeprom_gravar_word(0x02, gl_item_menu_config_amostra);
  6408  0A02  1683               	bsf	status, 5	;RP0=1, select bank1
  6409  0A03  1303               	bcf	status, 6	;RP1=0, select bank1
  6410  0A04  084C               	movf	(_gl_item_menu_config_amostra+1)^080h,w
  6411  0A05  01F4               	clrf	(?i1_eeprom_gravar_word+1)
  6412  0A06  07F4               	addwf	(?i1_eeprom_gravar_word+1)
  6413  0A07  084B               	movf	(_gl_item_menu_config_amostra)^080h,w
  6414  0A08  01F3               	clrf	(?i1_eeprom_gravar_word)
  6415  0A09  07F3               	addwf	(?i1_eeprom_gravar_word)
  6416                           
  6417  0A0A  3002               	movlw	(02h)
  6418  0A0B  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  158A         
  6419                           	line	307
  6420                           	
  6421  0A10                     i1l4569:	
  6422                           ;estados.c: 307: estado_executa_muda(EST_MENU_PRINCIPAL);
  6423  0A10  3001               	movlw	(01h)
  6424  0A11  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6425                           	line	308
  6426                           ;estados.c: 308: break;
  6427  0A16  2A28               	goto	i1l490
  6428                           	line	309
  6429                           	
  6430  0A17                     i1l4571:	
  6431                           ;estados.c: 309: }
  6432  0A17  2A28               	goto	i1l490
  6433                           	line	288
  6434                           	
  6435  0A18                     i1l482:	
  6436                           	
  6437  0A18                     i1l4573:	
  6438  0A18  1283               	bcf	status, 5	;RP0=0, select bank0
  6439  0A19  1303               	bcf	status, 6	;RP1=0, select bank0
  6440  0A1A  085A               	movf	(estado_menu_conf_tempo_amostra@opt),w
  6441                           	; Switch size 1, requested type "space"
  6442                           ; Number of cases is 4, Range of values is 1 to 4
  6443                           ; switch strategies available:
  6444                           ; Name         Instructions Cycles
  6445                           ; simple_byte           13     7 (average)
  6446                           ; direct_byte           23    11 (fixed)
  6447                           ; jumptable            263     9 (fixed)
  6448                           ;	Chosen strategy is simple_byte
  6449                           
  6450                           	opt asmopt_off
  6451  0A1B  3A01               	xorlw	1^0	; case 1
  6452  0A1C  1903               	skipnz
  6453  0A1D  2A02               	goto	i1l4567
  6454  0A1E  3A03               	xorlw	2^1	; case 2
  6455  0A1F  1903               	skipnz
  6456  0A20  29FB               	goto	i1l4565
  6457  0A21  3A01               	xorlw	3^2	; case 3
  6458  0A22  1903               	skipnz
  6459  0A23  29CC               	goto	i1l4553
  6460  0A24  3A07               	xorlw	4^3	; case 4
  6461  0A25  1903               	skipnz
  6462  0A26  29E2               	goto	i1l4559
  6463  0A27  2A28               	goto	i1l490
  6464                           	opt asmopt_on
  6465                           
  6466                           	line	309
  6467                           	
  6468  0A28                     i1l485:	
  6469                           	line	310
  6470                           	
  6471  0A28                     i1l490:	
  6472  0A28  0008               	return
  6473                           	opt stack 0
  6474                           GLOBAL	__end_of_estado_menu_conf_tempo_amostra
  6475  0A29                     	__end_of_estado_menu_conf_tempo_amostra:
  6476                           	signat	_estado_menu_conf_tempo_amostra,4216
  6477                           	global	_estado_menu_limpar
  6478                           
  6479 ;; *************** function _estado_menu_limpar *****************
  6480 ;; Defined at:
  6481 ;;		line 103 in file "estados.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  opt             1    wreg     unsigned char 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  opt             1   58[BANK0 ] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;		None               void
  6488 ;; Registers used:
  6489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6495 ;;      Params:         0       0       0       0       0
  6496 ;;      Locals:         0       1       0       0       0
  6497 ;;      Temps:          0       0       0       0       0
  6498 ;;      Totals:         0       1       0       0       0
  6499 ;;Total ram usage:        1 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    3
  6502 ;; This function calls:
  6503 ;;		_estado_executa_muda
  6504 ;; This function is called by:
  6505 ;;		_estado_maquina
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           psect	text16,local,class=CODE,delta=2,merge=1
  6509                           global __ptext16
  6510  151D                     __ptext16:	;psect for function _estado_menu_limpar
  6511                           psect	text16
  6512                           	file	"estados.c"
  6513                           	line	103
  6514                           	global	__size_of_estado_menu_limpar
  6515  0011                     	__size_of_estado_menu_limpar	equ	__end_of_estado_menu_limpar-_estado_menu_limpar
  6516                           	
  6517  151D                     _estado_menu_limpar:	
  6518                           ;incstack = 0
  6519                           	opt	stack 0
  6520                           ; Regs used in _estado_menu_limpar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6521                           ;estado_menu_limpar@opt stored from wreg
  6522  151D  1283               	bcf	status, 5	;RP0=0, select bank0
  6523  151E  1303               	bcf	status, 6	;RP1=0, select bank0
  6524  151F  00DA               	movwf	(estado_menu_limpar@opt)
  6525                           	line	104
  6526                           	
  6527  1520                     i1l4547:	
  6528                           ;estados.c: 104: if (opt == 2) {
  6529  1520  085A               	movf	(estado_menu_limpar@opt),w
  6530  1521  3A02               	xorlw	02h
  6531  1522  1D03               	skipz
  6532  1523  2D25               	goto	u361_21
  6533  1524  2D26               	goto	u361_20
  6534  1525                     u361_21:
  6535  1525  2D2D               	goto	i1l432
  6536  1526                     u361_20:
  6537                           	line	105
  6538                           	
  6539  1526                     i1l4549:	
  6540                           ;estados.c: 105: estado_executa_muda(EST_MENU_PRINCIPAL);
  6541  1526  3001               	movlw	(01h)
  6542  1527  120A  118A  2015   	fcall	_estado_executa_muda
              160A  118A         
  6543  152C  2D2D               	goto	i1l432
  6544                           	line	106
  6545                           	
  6546  152D                     i1l431:	
  6547                           	line	107
  6548                           	
  6549  152D                     i1l432:	
  6550  152D  0008               	return
  6551                           	opt stack 0
  6552                           GLOBAL	__end_of_estado_menu_limpar
  6553  152E                     	__end_of_estado_menu_limpar:
  6554                           	signat	_estado_menu_limpar,4216
  6555                           	global	_estado_max_min
  6556                           
  6557 ;; *************** function _estado_max_min *****************
  6558 ;; Defined at:
  6559 ;;		line 277 in file "estados.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  opt             1    wreg     unsigned char 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  opt             1   58[BANK0 ] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;		None               void
  6566 ;; Registers used:
  6567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6573 ;;      Params:         0       0       0       0       0
  6574 ;;      Locals:         0       1       0       0       0
  6575 ;;      Temps:          0       0       0       0       0
  6576 ;;      Totals:         0       1       0       0       0
  6577 ;;Total ram usage:        1 bytes
  6578 ;; Hardware stack levels used:    1
  6579 ;; Hardware stack levels required when called:    3
  6580 ;; This function calls:
  6581 ;;		_estado_executa_muda
  6582 ;; This function is called by:
  6583 ;;		_estado_maquina
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           psect	text17,local,class=CODE,delta=2,merge=1
  6587                           global __ptext17
  6588  150C                     __ptext17:	;psect for function _estado_max_min
  6589                           psect	text17
  6590                           	file	"estados.c"
  6591                           	line	277
  6592                           	global	__size_of_estado_max_min
  6593  0011                     	__size_of_estado_max_min	equ	__end_of_estado_max_min-_estado_max_min
  6594                           	
  6595  150C                     _estado_max_min:	
  6596                           ;incstack = 0
  6597                           	opt	stack 0
  6598                           ; Regs used in _estado_max_min: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6599                           ;estado_max_min@opt stored from wreg
  6600  150C  1283               	bcf	status, 5	;RP0=0, select bank0
  6601  150D  1303               	bcf	status, 6	;RP1=0, select bank0
  6602  150E  00DA               	movwf	(estado_max_min@opt)
  6603                           	line	278
  6604                           	
  6605  150F                     i1l4543:	
  6606                           ;estados.c: 278: if (opt == 2) {
  6607  150F  085A               	movf	(estado_max_min@opt),w
  6608  1510  3A02               	xorlw	02h
  6609  1511  1D03               	skipz
  6610  1512  2D14               	goto	u360_21
  6611  1513  2D15               	goto	u360_20
  6612  1514                     u360_21:
  6613  1514  2D1C               	goto	i1l479
  6614  1515                     u360_20:
  6615                           	line	279
  6616                           	
  6617  1515                     i1l4545:	
  6618                           ;estados.c: 279: estado_executa_muda(EST_MENU_PRINCIPAL);
  6619  1515  3001               	movlw	(01h)
  6620  1516  120A  118A  2015   	fcall	_estado_executa_muda
              160A  118A         
  6621  151B  2D1C               	goto	i1l479
  6622                           	line	280
  6623                           	
  6624  151C                     i1l478:	
  6625                           	line	281
  6626                           	
  6627  151C                     i1l479:	
  6628  151C  0008               	return
  6629                           	opt stack 0
  6630                           GLOBAL	__end_of_estado_max_min
  6631  151D                     	__end_of_estado_max_min:
  6632                           	signat	_estado_max_min,4216
  6633                           	global	_estado_ver_todos
  6634                           
  6635 ;; *************** function _estado_ver_todos *****************
  6636 ;; Defined at:
  6637 ;;		line 251 in file "estados.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  opt             1    wreg     unsigned char 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  opt             1   59[BANK0 ] unsigned char 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;		None               void
  6644 ;; Registers used:
  6645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6651 ;;      Params:         0       0       0       0       0
  6652 ;;      Locals:         0       1       0       0       0
  6653 ;;      Temps:          0       1       0       0       0
  6654 ;;      Totals:         0       2       0       0       0
  6655 ;;Total ram usage:        2 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    3
  6658 ;; This function calls:
  6659 ;;		_estado_executa_muda
  6660 ;;		___lbdiv
  6661 ;;		i1_eeprom_read
  6662 ;; This function is called by:
  6663 ;;		_estado_maquina
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           psect	text18,local,class=CODE,delta=2,merge=1
  6667                           global __ptext18
  6668  0971                     __ptext18:	;psect for function _estado_ver_todos
  6669                           psect	text18
  6670                           	file	"estados.c"
  6671                           	line	251
  6672                           	global	__size_of_estado_ver_todos
  6673  0057                     	__size_of_estado_ver_todos	equ	__end_of_estado_ver_todos-_estado_ver_todos
  6674                           	
  6675  0971                     _estado_ver_todos:	
  6676                           ;incstack = 0
  6677                           	opt	stack 0
  6678                           ; Regs used in _estado_ver_todos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6679                           ;estado_ver_todos@opt stored from wreg
  6680  0971  1283               	bcf	status, 5	;RP0=0, select bank0
  6681  0972  1303               	bcf	status, 6	;RP1=0, select bank0
  6682  0973  00DB               	movwf	(estado_ver_todos@opt)
  6683                           	line	252
  6684                           	
  6685  0974                     i1l4525:	
  6686                           ;estados.c: 252: switch (opt) {
  6687  0974  29BA               	goto	i1l4541
  6688                           	line	253
  6689                           ;estados.c: 253: case 3:
  6690                           	
  6691  0975                     i1l469:	
  6692                           	line	254
  6693                           ;estados.c: 254: if (gl_item_menu_ver_todos > 0) {
  6694  0975  1683               	bsf	status, 5	;RP0=1, select bank1
  6695  0976  1303               	bcf	status, 6	;RP1=0, select bank1
  6696  0977  0850               	movf	(_gl_item_menu_ver_todos)^080h,w
  6697  0978  1D03               	skipz
  6698  0979  297B               	goto	u358_20
  6699  097A  29C7               	goto	i1l475
  6700  097B                     u358_20:
  6701                           	line	255
  6702                           	
  6703  097B                     i1l4527:	
  6704                           ;estados.c: 255: gl_item_menu_ver_todos--;
  6705  097B  3001               	movlw	low(01h)
  6706  097C  02D0               	subwf	(_gl_item_menu_ver_todos)^080h,f
  6707                           	line	256
  6708                           	
  6709  097D                     i1l4529:	
  6710                           ;estados.c: 256: estado_executa_muda(EST_MOSTRA_TODOS);
  6711  097D  3004               	movlw	(04h)
  6712  097E  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6713  0983  29C7               	goto	i1l475
  6714                           	line	257
  6715                           	
  6716  0984                     i1l470:	
  6717                           	line	258
  6718                           ;estados.c: 257: }
  6719                           ;estados.c: 258: break;
  6720  0984  29C7               	goto	i1l475
  6721                           	line	259
  6722                           ;estados.c: 259: case 4:
  6723                           	
  6724  0985                     i1l472:	
  6725                           	line	262
  6726                           	
  6727  0985                     i1l4531:	
  6728                           ;estados.c: 262: if (gl_item_menu_ver_todos < (eeprom_read(0x08) / eeprom_read(0x00))) {
  6729  0985  3000               	movlw	(0)
  6730  0986  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  158A         
  6731  098B  1283               	bcf	status, 5	;RP0=0, select bank0
  6732  098C  1303               	bcf	status, 6	;RP1=0, select bank0
  6733  098D  00DA               	movwf	(??_estado_ver_todos+0)+0
  6734  098E  085A               	movf	(??_estado_ver_todos+0)+0,w
  6735  098F  00F2               	movwf	(?___lbdiv)
  6736  0990  3008               	movlw	(08h)
  6737  0991  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  158A         
  6738  0996  160A  118A  26FB   	fcall	___lbdiv
              120A  158A         
  6739  099B  1683               	bsf	status, 5	;RP0=1, select bank1
  6740  099C  1303               	bcf	status, 6	;RP1=0, select bank1
  6741  099D  0250               	subwf	(_gl_item_menu_ver_todos)^080h,w
  6742  099E  1803               	skipnc
  6743  099F  29A1               	goto	u359_21
  6744  09A0  29A2               	goto	u359_20
  6745  09A1                     u359_21:
  6746  09A1  29C7               	goto	i1l475
  6747  09A2                     u359_20:
  6748                           	line	263
  6749                           	
  6750  09A2                     i1l4533:	
  6751                           ;estados.c: 263: gl_item_menu_ver_todos++;
  6752  09A2  3001               	movlw	(01h)
  6753  09A3  1283               	bcf	status, 5	;RP0=0, select bank0
  6754  09A4  1303               	bcf	status, 6	;RP1=0, select bank0
  6755  09A5  00DA               	movwf	(??_estado_ver_todos+0)+0
  6756  09A6  085A               	movf	(??_estado_ver_todos+0)+0,w
  6757  09A7  1683               	bsf	status, 5	;RP0=1, select bank1
  6758  09A8  1303               	bcf	status, 6	;RP1=0, select bank1
  6759  09A9  07D0               	addwf	(_gl_item_menu_ver_todos)^080h,f
  6760                           	line	264
  6761                           	
  6762  09AA                     i1l4535:	
  6763                           ;estados.c: 264: estado_executa_muda(EST_MOSTRA_TODOS);
  6764  09AA  3004               	movlw	(04h)
  6765  09AB  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6766  09B0  29C7               	goto	i1l475
  6767                           	line	265
  6768                           	
  6769  09B1                     i1l473:	
  6770                           	line	266
  6771                           ;estados.c: 265: }
  6772                           ;estados.c: 266: break;
  6773  09B1  29C7               	goto	i1l475
  6774                           	line	267
  6775                           ;estados.c: 267: case 2:
  6776                           	
  6777  09B2                     i1l474:	
  6778                           	line	268
  6779                           	
  6780  09B2                     i1l4537:	
  6781                           ;estados.c: 268: estado_executa_muda(EST_MENU_PRINCIPAL);
  6782  09B2  3001               	movlw	(01h)
  6783  09B3  120A  118A  2015   	fcall	_estado_executa_muda
              120A  158A         
  6784                           	line	269
  6785                           ;estados.c: 269: break;
  6786  09B8  29C7               	goto	i1l475
  6787                           	line	270
  6788                           	
  6789  09B9                     i1l4539:	
  6790                           ;estados.c: 270: }
  6791  09B9  29C7               	goto	i1l475
  6792                           	line	252
  6793                           	
  6794  09BA                     i1l468:	
  6795                           	
  6796  09BA                     i1l4541:	
  6797  09BA  1283               	bcf	status, 5	;RP0=0, select bank0
  6798  09BB  1303               	bcf	status, 6	;RP1=0, select bank0
  6799  09BC  085B               	movf	(estado_ver_todos@opt),w
  6800                           	; Switch size 1, requested type "space"
  6801                           ; Number of cases is 3, Range of values is 2 to 4
  6802                           ; switch strategies available:
  6803                           ; Name         Instructions Cycles
  6804                           ; simple_byte           10     6 (average)
  6805                           ; direct_byte           20    11 (fixed)
  6806                           ; jumptable            263     9 (fixed)
  6807                           ;	Chosen strategy is simple_byte
  6808                           
  6809                           	opt asmopt_off
  6810  09BD  3A02               	xorlw	2^0	; case 2
  6811  09BE  1903               	skipnz
  6812  09BF  29B2               	goto	i1l4537
  6813  09C0  3A01               	xorlw	3^2	; case 3
  6814  09C1  1903               	skipnz
  6815  09C2  2975               	goto	i1l469
  6816  09C3  3A07               	xorlw	4^3	; case 4
  6817  09C4  1903               	skipnz
  6818  09C5  2985               	goto	i1l4531
  6819  09C6  29C7               	goto	i1l475
  6820                           	opt asmopt_on
  6821                           
  6822                           	line	270
  6823                           	
  6824  09C7                     i1l471:	
  6825                           	line	271
  6826                           	
  6827  09C7                     i1l475:	
  6828  09C7  0008               	return
  6829                           	opt stack 0
  6830                           GLOBAL	__end_of_estado_ver_todos
  6831  09C8                     	__end_of_estado_ver_todos:
  6832                           	signat	_estado_ver_todos,4216
  6833                           	global	___lbdiv
  6834                           
  6835 ;; *************** function ___lbdiv *****************
  6836 ;; Defined at:
  6837 ;;		line 5 in file "/opt/microchip/xc8/v1.20/sources/pic/lbdiv.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;  dividend        1    wreg     unsigned char 
  6840 ;;  divisor         1    2[COMMON] unsigned char 
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;  dividend        1    4[COMMON] unsigned char 
  6843 ;;  quotient        1    6[COMMON] unsigned char 
  6844 ;;  counter         1    5[COMMON] unsigned char 
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      unsigned char 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2, status,0
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6854 ;;      Params:         1       0       0       0       0
  6855 ;;      Locals:         3       0       0       0       0
  6856 ;;      Temps:          1       0       0       0       0
  6857 ;;      Totals:         5       0       0       0       0
  6858 ;;Total ram usage:        5 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_estado_ver_todos
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           psect	text19,local,class=CODE,delta=2,merge=1
  6867                           global __ptext19
  6868  16FB                     __ptext19:	;psect for function ___lbdiv
  6869                           psect	text19
  6870                           	file	"/opt/microchip/xc8/v1.20/sources/pic/lbdiv.c"
  6871                           	line	5
  6872                           	global	__size_of___lbdiv
  6873  002F                     	__size_of___lbdiv	equ	__end_of___lbdiv-___lbdiv
  6874                           	
  6875  16FB                     ___lbdiv:	
  6876                           ;incstack = 0
  6877                           	opt	stack 2
  6878                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  6879                           ;___lbdiv@dividend stored from wreg
  6880                           	line	9
  6881  16FB  00F4               	movwf	(___lbdiv@dividend)
  6882                           	
  6883  16FC                     i1l4099:	
  6884  16FC  01F6               	clrf	(___lbdiv@quotient)
  6885                           	line	10
  6886                           	
  6887  16FD                     i1l4101:	
  6888  16FD  0872               	movf	(___lbdiv@divisor),w
  6889  16FE  1D03               	skipz
  6890  16FF  2F01               	goto	u309_20
  6891  1700  2F27               	goto	i1l4121
  6892  1701                     u309_20:
  6893                           	line	11
  6894                           	
  6895  1701                     i1l4103:	
  6896  1701  01F5               	clrf	(___lbdiv@counter)
  6897  1702  0AF5               	incf	(___lbdiv@counter),f
  6898                           	line	12
  6899  1703  2F0B               	goto	i1l4109
  6900                           	
  6901  1704                     i1l928:	
  6902                           	line	13
  6903                           	
  6904  1704                     i1l4105:	
  6905  1704  1003               	clrc
  6906  1705  0DF2               	rlf	(___lbdiv@divisor),f
  6907                           
  6908                           	line	14
  6909                           	
  6910  1706                     i1l4107:	
  6911  1706  3001               	movlw	(01h)
  6912  1707  00F3               	movwf	(??___lbdiv+0)+0
  6913  1708  0873               	movf	(??___lbdiv+0)+0,w
  6914  1709  07F5               	addwf	(___lbdiv@counter),f
  6915  170A  2F0B               	goto	i1l4109
  6916                           	line	15
  6917                           	
  6918  170B                     i1l927:	
  6919                           	line	12
  6920                           	
  6921  170B                     i1l4109:	
  6922  170B  1FF2               	btfss	(___lbdiv@divisor),(7)&7
  6923  170C  2F0E               	goto	u310_21
  6924  170D  2F0F               	goto	u310_20
  6925  170E                     u310_21:
  6926  170E  2F04               	goto	i1l4105
  6927  170F                     u310_20:
  6928  170F  2F11               	goto	i1l4111
  6929                           	
  6930  1710                     i1l929:	
  6931  1710  2F11               	goto	i1l4111
  6932                           	line	16
  6933                           	
  6934  1711                     i1l930:	
  6935                           	line	17
  6936                           	
  6937  1711                     i1l4111:	
  6938  1711  1003               	clrc
  6939  1712  0DF6               	rlf	(___lbdiv@quotient),f
  6940                           
  6941                           	line	18
  6942  1713  0872               	movf	(___lbdiv@divisor),w
  6943  1714  0274               	subwf	(___lbdiv@dividend),w
  6944  1715  1C03               	skipc
  6945  1716  2F18               	goto	u311_21
  6946  1717  2F19               	goto	u311_20
  6947  1718                     u311_21:
  6948  1718  2F1D               	goto	i1l4117
  6949  1719                     u311_20:
  6950                           	line	19
  6951                           	
  6952  1719                     i1l4113:	
  6953  1719  0872               	movf	(___lbdiv@divisor),w
  6954  171A  02F4               	subwf	(___lbdiv@dividend),f
  6955                           	line	20
  6956                           	
  6957  171B                     i1l4115:	
  6958  171B  1476               	bsf	(___lbdiv@quotient)+(0/8),(0)&7
  6959  171C  2F1D               	goto	i1l4117
  6960                           	line	21
  6961                           	
  6962  171D                     i1l931:	
  6963                           	line	22
  6964                           	
  6965  171D                     i1l4117:	
  6966  171D  1003               	clrc
  6967  171E  0CF2               	rrf	(___lbdiv@divisor),f
  6968                           
  6969                           	line	23
  6970                           	
  6971  171F                     i1l4119:	
  6972  171F  3001               	movlw	low(01h)
  6973  1720  02F5               	subwf	(___lbdiv@counter),f
  6974  1721  1D03               	btfss	status,2
  6975  1722  2F24               	goto	u312_21
  6976  1723  2F25               	goto	u312_20
  6977  1724                     u312_21:
  6978  1724  2F11               	goto	i1l4111
  6979  1725                     u312_20:
  6980  1725  2F27               	goto	i1l4121
  6981                           	
  6982  1726                     i1l932:	
  6983  1726  2F27               	goto	i1l4121
  6984                           	line	24
  6985                           	
  6986  1727                     i1l926:	
  6987                           	line	25
  6988                           	
  6989  1727                     i1l4121:	
  6990  1727  0876               	movf	(___lbdiv@quotient),w
  6991  1728  2F29               	goto	i1l933
  6992                           	
  6993  1729                     i1l4123:	
  6994                           	line	26
  6995                           	
  6996  1729                     i1l933:	
  6997  1729  0008               	return
  6998                           	opt stack 0
  6999                           GLOBAL	__end_of___lbdiv
  7000  172A                     	__end_of___lbdiv:
  7001                           	signat	___lbdiv,8313
  7002                           	global	_estado_captura_mostra
  7003                           
  7004 ;; *************** function _estado_captura_mostra *****************
  7005 ;; Defined at:
  7006 ;;		line 113 in file "estados.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  opt             1    wreg     unsigned char 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  opt             1   58[BANK0 ] unsigned char 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;		None               void
  7013 ;; Registers used:
  7014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7020 ;;      Params:         0       0       0       0       0
  7021 ;;      Locals:         0       1       0       0       0
  7022 ;;      Temps:          0       0       0       0       0
  7023 ;;      Totals:         0       1       0       0       0
  7024 ;;Total ram usage:        1 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:    3
  7027 ;; This function calls:
  7028 ;;		_estado_executa_muda
  7029 ;; This function is called by:
  7030 ;;		_estado_maquina
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           psect	text20,local,class=CODE,delta=2,merge=1
  7034                           global __ptext20
  7035  152E                     __ptext20:	;psect for function _estado_captura_mostra
  7036                           psect	text20
  7037                           	file	"estados.c"
  7038                           	line	113
  7039                           	global	__size_of_estado_captura_mostra
  7040  0012                     	__size_of_estado_captura_mostra	equ	__end_of_estado_captura_mostra-_estado_captura_most
                                 ra
  7041                           	
  7042  152E                     _estado_captura_mostra:	
  7043                           ;incstack = 0
  7044                           	opt	stack 0
  7045                           ; Regs used in _estado_captura_mostra: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
                                 ck]
  7046                           ;estado_captura_mostra@opt stored from wreg
  7047  152E  1283               	bcf	status, 5	;RP0=0, select bank0
  7048  152F  1303               	bcf	status, 6	;RP1=0, select bank0
  7049  1530  00DA               	movwf	(estado_captura_mostra@opt)
  7050                           	line	114
  7051                           	
  7052  1531                     i1l4519:	
  7053                           ;estados.c: 114: if (opt == 2) {
  7054  1531  085A               	movf	(estado_captura_mostra@opt),w
  7055  1532  3A02               	xorlw	02h
  7056  1533  1D03               	skipz
  7057  1534  2D36               	goto	u357_21
  7058  1535  2D37               	goto	u357_20
  7059  1536                     u357_21:
  7060  1536  2D3F               	goto	i1l436
  7061  1537                     u357_20:
  7062                           	line	115
  7063                           	
  7064  1537                     i1l4521:	
  7065                           ;estados.c: 115: INTCONbits.T0IE = 0;
  7066  1537  128B               	bcf	(11),5	;volatile
  7067                           	line	116
  7068                           	
  7069  1538                     i1l4523:	
  7070                           ;estados.c: 116: estado_executa_muda(EST_MENU_PRINCIPAL);
  7071  1538  3001               	movlw	(01h)
  7072  1539  120A  118A  2015   	fcall	_estado_executa_muda
              160A  118A         
  7073  153E  2D3F               	goto	i1l436
  7074                           	line	117
  7075                           	
  7076  153F                     i1l435:	
  7077                           	line	118
  7078                           	
  7079  153F                     i1l436:	
  7080  153F  0008               	return
  7081                           	opt stack 0
  7082                           GLOBAL	__end_of_estado_captura_mostra
  7083  1540                     	__end_of_estado_captura_mostra:
  7084                           	signat	_estado_captura_mostra,4216
  7085                           	global	_estado_menu_principal
  7086                           
  7087 ;; *************** function _estado_menu_principal *****************
  7088 ;; Defined at:
  7089 ;;		line 124 in file "estados.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  opt             1    wreg     unsigned char 
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;  opt             1   64[BANK0 ] unsigned char 
  7094 ;;  i               1   69[BANK0 ] unsigned char 
  7095 ;;  i               1   68[BANK0 ] unsigned char 
  7096 ;;  t_int           2   70[BANK0 ] unsigned int 
  7097 ;;  menor           2   62[BANK0 ] unsigned int 
  7098 ;;  maior           2   60[BANK0 ] unsigned int 
  7099 ;;  qtd_val         1   67[BANK0 ] unsigned char 
  7100 ;;  qtd_sens        1   66[BANK0 ] unsigned char 
  7101 ;;  posicao         1   65[BANK0 ] unsigned char 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;		None               void
  7104 ;; Registers used:
  7105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7111 ;;      Params:         0       0       0       0       0
  7112 ;;      Locals:         0      12       0       0       0
  7113 ;;      Temps:          0       2       0       0       0
  7114 ;;      Totals:         0      14       0       0       0
  7115 ;;Total ram usage:       14 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    3
  7118 ;; This function calls:
  7119 ;;		_lcd_clear
  7120 ;;		_eeprom_ler_word
  7121 ;;		_adcon_ler_canal
  7122 ;;		_adcon_mostra
  7123 ;;		_estado_executa_muda
  7124 ;;		___bmul
  7125 ;;		i1_lcd_puts
  7126 ;;		i1_eeprom_gravar_word
  7127 ;;		i1_eeprom_read
  7128 ;;		i1_eeprom_write
  7129 ;; This function is called by:
  7130 ;;		_estado_maquina
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           psect	text21,local,class=CODE,delta=2,merge=1
  7134                           global __ptext21
  7135  02FC                     __ptext21:	;psect for function _estado_menu_principal
  7136                           psect	text21
  7137                           	file	"estados.c"
  7138                           	line	124
  7139                           	global	__size_of_estado_menu_principal
  7140  01C2                     	__size_of_estado_menu_principal	equ	__end_of_estado_menu_principal-_estado_menu_princip
                                 al
  7141                           	
  7142  02FC                     _estado_menu_principal:	
  7143                           ;incstack = 0
  7144 ;; using string table level
  7145                           	opt	stack 1
  7146                           ; Regs used in _estado_menu_principal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
                                 ck]
  7147                           ;estado_menu_principal@opt stored from wreg
  7148  02FC  1283               	bcf	status, 5	;RP0=0, select bank0
  7149  02FD  1303               	bcf	status, 6	;RP1=0, select bank0
  7150  02FE  00E0               	movwf	(estado_menu_principal@opt)
  7151                           	line	131
  7152                           	
  7153  02FF                     i1l4431:	
  7154                           ;estados.c: 125: uint8_t qtd_val;
  7155                           ;estados.c: 126: uint8_t qtd_sens;
  7156                           ;estados.c: 127: uint16_t t_int;
  7157                           ;estados.c: 128: uint16_t maior, menor;
  7158                           ;estados.c: 129: uint8_t posicao;
  7159                           ;estados.c: 131: switch (opt) {
  7160  02FF  2CB2               	goto	i1l4517
  7161                           	line	132
  7162                           ;estados.c: 132: case 3:
  7163                           	
  7164  0300                     i1l440:	
  7165                           	line	133
  7166                           ;estados.c: 133: if (gl_item_menu_principal > 0) {
  7167  0300  086F               	movf	(_gl_item_menu_principal),w
  7168  0301  1D03               	skipz
  7169  0302  2B04               	goto	u350_20
  7170  0303  2CBD               	goto	i1l465
  7171  0304                     u350_20:
  7172                           	line	134
  7173                           	
  7174  0304                     i1l4433:	
  7175                           ;estados.c: 134: gl_item_menu_principal--;
  7176  0304  3001               	movlw	low(01h)
  7177  0305  02EF               	subwf	(_gl_item_menu_principal),f
  7178                           	line	135
  7179                           	
  7180  0306                     i1l4435:	
  7181                           ;estados.c: 135: estado_executa_muda(EST_MENU_PRINCIPAL);
  7182  0306  3001               	movlw	(01h)
  7183  0307  120A  118A  2015   	fcall	_estado_executa_muda
              120A  118A         
  7184  030C  2CBD               	goto	i1l465
  7185                           	line	136
  7186                           	
  7187  030D                     i1l441:	
  7188                           	line	137
  7189                           ;estados.c: 136: }
  7190                           ;estados.c: 137: break;
  7191  030D  2CBD               	goto	i1l465
  7192                           	line	139
  7193                           ;estados.c: 139: case 4:
  7194                           	
  7195  030E                     i1l443:	
  7196                           	line	140
  7197                           	
  7198  030E                     i1l4437:	
  7199                           ;estados.c: 140: if (gl_item_menu_principal < 7 - 1) {
  7200  030E  3006               	movlw	(06h)
  7201  030F  1283               	bcf	status, 5	;RP0=0, select bank0
  7202  0310  1303               	bcf	status, 6	;RP1=0, select bank0
  7203  0311  026F               	subwf	(_gl_item_menu_principal),w
  7204  0312  1803               	skipnc
  7205  0313  2B15               	goto	u351_21
  7206  0314  2B16               	goto	u351_20
  7207  0315                     u351_21:
  7208  0315  2CBD               	goto	i1l465
  7209  0316                     u351_20:
  7210                           	line	141
  7211                           	
  7212  0316                     i1l4439:	
  7213                           ;estados.c: 141: gl_item_menu_principal++;
  7214  0316  3001               	movlw	(01h)
  7215  0317  00DA               	movwf	(??_estado_menu_principal+0)+0
  7216  0318  085A               	movf	(??_estado_menu_principal+0)+0,w
  7217  0319  07EF               	addwf	(_gl_item_menu_principal),f
  7218                           	line	142
  7219                           	
  7220  031A                     i1l4441:	
  7221                           ;estados.c: 142: estado_executa_muda(EST_MENU_PRINCIPAL);
  7222  031A  3001               	movlw	(01h)
  7223  031B  120A  118A  2015   	fcall	_estado_executa_muda
              120A  118A         
  7224  0320  2CBD               	goto	i1l465
  7225                           	line	143
  7226                           	
  7227  0321                     i1l444:	
  7228                           	line	144
  7229                           ;estados.c: 143: }
  7230                           ;estados.c: 144: break;
  7231  0321  2CBD               	goto	i1l465
  7232                           	line	146
  7233                           ;estados.c: 146: case 1:
  7234                           	
  7235  0322                     i1l445:	
  7236                           	line	148
  7237                           ;estados.c: 148: switch (gl_item_menu_principal) {
  7238  0322  2C97               	goto	i1l4513
  7239                           	line	149
  7240                           ;estados.c: 149: case 0:
  7241                           	
  7242  0323                     i1l447:	
  7243                           	line	153
  7244                           	
  7245  0323                     i1l4443:	
  7246                           ;estados.c: 153: lcd_clear();
  7247  0323  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  7248                           	line	157
  7249                           ;estados.c: 157: posicao = eeprom_read(0x00);
  7250  0328  3000               	movlw	(0)
  7251  0329  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  118A         
  7252  032E  1283               	bcf	status, 5	;RP0=0, select bank0
  7253  032F  1303               	bcf	status, 6	;RP1=0, select bank0
  7254  0330  00DA               	movwf	(??_estado_menu_principal+0)+0
  7255  0331  085A               	movf	(??_estado_menu_principal+0)+0,w
  7256  0332  00E1               	movwf	(estado_menu_principal@posicao)
  7257                           	line	158
  7258                           	
  7259  0333                     i1l4445:	
  7260                           ;estados.c: 158: qtd_sens = menu_quant_sensores[posicao].i_quant_sensores;
  7261  0333  3003               	movlw	(03h)
  7262  0334  00DA               	movwf	(??_estado_menu_principal+0)+0
  7263  0335  085A               	movf	(??_estado_menu_principal+0)+0,w
  7264  0336  00F0               	movwf	(?___bmul)
  7265  0337  0861               	movf	(estado_menu_principal@posicao),w
  7266  0338  160A  118A  2569   	fcall	___bmul
              120A  118A         
  7267  033D  3E02               	addlw	02h
  7268  033E  3E2E               	addlw	low(_menu_quant_sensores|8000h)
  7269  033F  0084               	movwf	fsr0
  7270  0340  3085               	movlw	high(_menu_quant_sensores|8000h)
  7271  0341  1803               	skipnc
  7272  0342  3E01               	addlw	1
  7273  0343  1283               	bcf	status, 5	;RP0=0, select bank0
  7274  0344  1303               	bcf	status, 6	;RP1=0, select bank0
  7275  0345  00FF               	movwf	btemp+1
  7276  0346  120A  118A  2500   	fcall	stringtab
              120A  118A         
  7277  034B  00DB               	movwf	(??_estado_menu_principal+1)+0
  7278  034C  085B               	movf	(??_estado_menu_principal+1)+0,w
  7279  034D  00E2               	movwf	(estado_menu_principal@qtd_sens)
  7280                           	line	160
  7281                           	
  7282  034E                     i1l4447:	
  7283                           ;estados.c: 160: for (uint8_t i = 0; i < qtd_sens; i++) {
  7284  034E  01E4               	clrf	(estado_menu_principal@i)
  7285  034F  2B74               	goto	i1l4453
  7286                           	
  7287  0350                     i1l449:	
  7288                           	line	161
  7289                           	
  7290  0350                     i1l4449:	
  7291                           ;estados.c: 161: t_int = adcon_ler_canal(i);
  7292  0350  0864               	movf	(estado_menu_principal@i),w
  7293  0351  120A  158A  245D   	fcall	_adcon_ler_canal
              120A  118A         
  7294  0356  0871               	movf	(1+(?_adcon_ler_canal)),w
  7295  0357  1283               	bcf	status, 5	;RP0=0, select bank0
  7296  0358  1303               	bcf	status, 6	;RP1=0, select bank0
  7297  0359  01E7               	clrf	(estado_menu_principal@t_int+1)
  7298  035A  07E7               	addwf	(estado_menu_principal@t_int+1)
  7299  035B  0870               	movf	(0+(?_adcon_ler_canal)),w
  7300  035C  01E6               	clrf	(estado_menu_principal@t_int)
  7301  035D  07E6               	addwf	(estado_menu_principal@t_int)
  7302                           
  7303                           	line	163
  7304                           ;estados.c: 163: adcon_mostra(t_int, i);
  7305  035E  0867               	movf	(estado_menu_principal@t_int+1),w
  7306  035F  01B5               	clrf	(?_adcon_mostra+1)
  7307  0360  07B5               	addwf	(?_adcon_mostra+1)
  7308  0361  0866               	movf	(estado_menu_principal@t_int),w
  7309  0362  01B4               	clrf	(?_adcon_mostra)
  7310  0363  07B4               	addwf	(?_adcon_mostra)
  7311                           
  7312  0364  0864               	movf	(estado_menu_principal@i),w
  7313  0365  00DA               	movwf	(??_estado_menu_principal+0)+0
  7314  0366  085A               	movf	(??_estado_menu_principal+0)+0,w
  7315  0367  00B6               	movwf	0+(?_adcon_mostra)+02h
  7316  0368  120A  158A  24E4   	fcall	_adcon_mostra
              120A  118A         
  7317                           	line	160
  7318                           	
  7319  036D                     i1l4451:	
  7320  036D  3001               	movlw	(01h)
  7321  036E  1283               	bcf	status, 5	;RP0=0, select bank0
  7322  036F  1303               	bcf	status, 6	;RP1=0, select bank0
  7323  0370  00DA               	movwf	(??_estado_menu_principal+0)+0
  7324  0371  085A               	movf	(??_estado_menu_principal+0)+0,w
  7325  0372  07E4               	addwf	(estado_menu_principal@i),f
  7326  0373  2B74               	goto	i1l4453
  7327                           	
  7328  0374                     i1l448:	
  7329                           	
  7330  0374                     i1l4453:	
  7331  0374  0862               	movf	(estado_menu_principal@qtd_sens),w
  7332  0375  0264               	subwf	(estado_menu_principal@i),w
  7333  0376  1C03               	skipc
  7334  0377  2B79               	goto	u352_21
  7335  0378  2B7A               	goto	u352_20
  7336  0379                     u352_21:
  7337  0379  2B50               	goto	i1l4449
  7338  037A                     u352_20:
  7339  037A  2B7B               	goto	i1l4455
  7340                           	
  7341  037B                     i1l450:	
  7342                           	line	172
  7343                           	
  7344  037B                     i1l4455:	
  7345                           ;estados.c: 171: }
  7346                           ;estados.c: 172: estado_executa_muda(EST_CAPTURA_E_MOSTRA);
  7347  037B  3002               	movlw	(02h)
  7348  037C  120A  118A  2015   	fcall	_estado_executa_muda
              120A  118A         
  7349                           	line	173
  7350                           ;estados.c: 173: break;
  7351  0381  2CBD               	goto	i1l465
  7352                           	line	175
  7353                           ;estados.c: 175: case 1:
  7354                           	
  7355  0382                     i1l452:	
  7356                           	line	176
  7357                           	
  7358  0382                     i1l4457:	
  7359                           ;estados.c: 176: lcd_clear();
  7360  0382  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  7361                           	line	181
  7362                           ;estados.c: 181: qtd_val = eeprom_read(0x08);
  7363  0387  3008               	movlw	(08h)
  7364  0388  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  118A         
  7365  038D  1283               	bcf	status, 5	;RP0=0, select bank0
  7366  038E  1303               	bcf	status, 6	;RP1=0, select bank0
  7367  038F  00DA               	movwf	(??_estado_menu_principal+0)+0
  7368  0390  085A               	movf	(??_estado_menu_principal+0)+0,w
  7369  0391  00E3               	movwf	(estado_menu_principal@qtd_val)
  7370                           	line	182
  7371                           	
  7372  0392                     i1l4459:	
  7373                           ;estados.c: 182: maior = eeprom_ler_word(0x06);
  7374  0392  3006               	movlw	(06h)
  7375  0393  160A  118A  2678   	fcall	_eeprom_ler_word
              120A  118A         
  7376  0398  0873               	movf	(1+(?_eeprom_ler_word)),w
  7377  0399  1283               	bcf	status, 5	;RP0=0, select bank0
  7378  039A  1303               	bcf	status, 6	;RP1=0, select bank0
  7379  039B  01DD               	clrf	(estado_menu_principal@maior+1)
  7380  039C  07DD               	addwf	(estado_menu_principal@maior+1)
  7381  039D  0872               	movf	(0+(?_eeprom_ler_word)),w
  7382  039E  01DC               	clrf	(estado_menu_principal@maior)
  7383  039F  07DC               	addwf	(estado_menu_principal@maior)
  7384                           
  7385                           	line	183
  7386                           	
  7387  03A0                     i1l4461:	
  7388                           ;estados.c: 183: menor = eeprom_ler_word(0x04);
  7389  03A0  3004               	movlw	(04h)
  7390  03A1  160A  118A  2678   	fcall	_eeprom_ler_word
              120A  118A         
  7391  03A6  0873               	movf	(1+(?_eeprom_ler_word)),w
  7392  03A7  1283               	bcf	status, 5	;RP0=0, select bank0
  7393  03A8  1303               	bcf	status, 6	;RP1=0, select bank0
  7394  03A9  01DF               	clrf	(estado_menu_principal@menor+1)
  7395  03AA  07DF               	addwf	(estado_menu_principal@menor+1)
  7396  03AB  0872               	movf	(0+(?_eeprom_ler_word)),w
  7397  03AC  01DE               	clrf	(estado_menu_principal@menor)
  7398  03AD  07DE               	addwf	(estado_menu_principal@menor)
  7399                           
  7400                           	line	185
  7401                           	
  7402  03AE                     i1l4463:	
  7403                           ;estados.c: 185: for (uint8_t i = 0; i < qtd_sens; i++) {
  7404  03AE  01E5               	clrf	(estado_menu_principal@i_806)
  7405  03AF  2C4C               	goto	i1l4493
  7406                           	
  7407  03B0                     i1l454:	
  7408                           	line	186
  7409                           	
  7410  03B0                     i1l4465:	
  7411                           ;estados.c: 186: if ((qtd_val + i) >= 100) {
  7412  03B0  0863               	movf	(estado_menu_principal@qtd_val),w
  7413  03B1  0765               	addwf	(estado_menu_principal@i_806),w
  7414  03B2  00DA               	movwf	(??_estado_menu_principal+0)+0
  7415  03B3  01DB               	clrf	(??_estado_menu_principal+0)+0+1
  7416  03B4  0DDB               	rlf	1+(??_estado_menu_principal+0)+0,f
  7417                           	
  7418  03B5  085B               	movf	1+(??_estado_menu_principal+0)+0,w
  7419  03B6  3A80               	xorlw	80h
  7420  03B7  00FF               	movwf	btemp+1
  7421  03B8  3080               	movlw	(high(064h))^80h
  7422  03B9  027F               	subwf	btemp+1,w
  7423  03BA  1D03               	skipz
  7424  03BB  2BBE               	goto	u353_25
  7425  03BC  3064               	movlw	low(064h)
  7426  03BD  025A               	subwf	0+(??_estado_menu_principal+0)+0,w
  7427  03BE                     u353_25:
  7428                           
  7429  03BE  1C03               	skipc
  7430  03BF  2BC1               	goto	u353_21
  7431  03C0  2BC2               	goto	u353_20
  7432  03C1                     u353_21:
  7433  03C1  2BD3               	goto	i1l4475
  7434  03C2                     u353_20:
  7435                           	line	187
  7436                           	
  7437  03C2                     i1l4467:	
  7438                           ;estados.c: 187: INTCONbits.T0IE = 0;
  7439  03C2  128B               	bcf	(11),5	;volatile
  7440                           	line	188
  7441                           	
  7442  03C3                     i1l4469:	
  7443                           ;estados.c: 188: lcd_clear();
  7444  03C3  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  7445                           	line	189
  7446                           	
  7447  03C8                     i1l4471:	
  7448                           ;estados.c: 189: lcd_puts("Memoria Cheia");
  7449  03C8  30B7               	movlw	low(STR_40|8000h)
  7450  03C9  00F4               	movwf	(?i1_lcd_puts)
  7451  03CA  3085               	movlw	high(STR_40|8000h)
  7452  03CB  00F5               	movwf	((?i1_lcd_puts))+1
  7453  03CC  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  7454                           	line	190
  7455                           ;estados.c: 190: break;
  7456  03D1  2C53               	goto	i1l4495
  7457                           	line	191
  7458                           	
  7459  03D2                     i1l4473:	
  7460                           ;estados.c: 191: }
  7461  03D2  2C45               	goto	i1l4491
  7462                           	line	192
  7463                           	
  7464  03D3                     i1l455:	
  7465                           	line	193
  7466                           	
  7467  03D3                     i1l4475:	
  7468                           ;estados.c: 192: else {
  7469                           ;estados.c: 193: t_int = adcon_ler_canal(i);
  7470  03D3  1283               	bcf	status, 5	;RP0=0, select bank0
  7471  03D4  1303               	bcf	status, 6	;RP1=0, select bank0
  7472  03D5  0865               	movf	(estado_menu_principal@i_806),w
  7473  03D6  120A  158A  245D   	fcall	_adcon_ler_canal
              120A  118A         
  7474  03DB  0871               	movf	(1+(?_adcon_ler_canal)),w
  7475  03DC  1283               	bcf	status, 5	;RP0=0, select bank0
  7476  03DD  1303               	bcf	status, 6	;RP1=0, select bank0
  7477  03DE  01E7               	clrf	(estado_menu_principal@t_int+1)
  7478  03DF  07E7               	addwf	(estado_menu_principal@t_int+1)
  7479  03E0  0870               	movf	(0+(?_adcon_ler_canal)),w
  7480  03E1  01E6               	clrf	(estado_menu_principal@t_int)
  7481  03E2  07E6               	addwf	(estado_menu_principal@t_int)
  7482                           
  7483                           	line	194
  7484                           	
  7485  03E3                     i1l4477:	
  7486                           ;estados.c: 194: if (t_int < menor) {
  7487  03E3  085F               	movf	(estado_menu_principal@menor+1),w
  7488  03E4  0267               	subwf	(estado_menu_principal@t_int+1),w
  7489  03E5  1D03               	skipz
  7490  03E6  2BE9               	goto	u354_25
  7491  03E7  085E               	movf	(estado_menu_principal@menor),w
  7492  03E8  0266               	subwf	(estado_menu_principal@t_int),w
  7493  03E9                     u354_25:
  7494  03E9  1803               	skipnc
  7495  03EA  2BEC               	goto	u354_21
  7496  03EB  2BED               	goto	u354_20
  7497  03EC                     u354_21:
  7498  03EC  2BFA               	goto	i1l4481
  7499  03ED                     u354_20:
  7500                           	line	195
  7501                           	
  7502  03ED                     i1l4479:	
  7503                           ;estados.c: 195: eeprom_gravar_word(0x04, t_int);
  7504  03ED  0867               	movf	(estado_menu_principal@t_int+1),w
  7505  03EE  01F4               	clrf	(?i1_eeprom_gravar_word+1)
  7506  03EF  07F4               	addwf	(?i1_eeprom_gravar_word+1)
  7507  03F0  0866               	movf	(estado_menu_principal@t_int),w
  7508  03F1  01F3               	clrf	(?i1_eeprom_gravar_word)
  7509  03F2  07F3               	addwf	(?i1_eeprom_gravar_word)
  7510                           
  7511  03F3  3004               	movlw	(04h)
  7512  03F4  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  118A         
  7513  03F9  2BFA               	goto	i1l4481
  7514                           	line	196
  7515                           	
  7516  03FA                     i1l458:	
  7517                           	line	197
  7518                           	
  7519  03FA                     i1l4481:	
  7520                           ;estados.c: 196: }
  7521                           ;estados.c: 197: if (t_int > maior) {
  7522  03FA  1283               	bcf	status, 5	;RP0=0, select bank0
  7523  03FB  1303               	bcf	status, 6	;RP1=0, select bank0
  7524  03FC  0867               	movf	(estado_menu_principal@t_int+1),w
  7525  03FD  025D               	subwf	(estado_menu_principal@maior+1),w
  7526  03FE  1D03               	skipz
  7527  03FF  2C02               	goto	u355_25
  7528  0400  0866               	movf	(estado_menu_principal@t_int),w
  7529  0401  025C               	subwf	(estado_menu_principal@maior),w
  7530  0402                     u355_25:
  7531  0402  1803               	skipnc
  7532  0403  2C05               	goto	u355_21
  7533  0404  2C06               	goto	u355_20
  7534  0405                     u355_21:
  7535  0405  2C12               	goto	i1l459
  7536  0406                     u355_20:
  7537                           	line	198
  7538                           	
  7539  0406                     i1l4483:	
  7540                           ;estados.c: 198: eeprom_gravar_word(0x06, t_int);
  7541  0406  0867               	movf	(estado_menu_principal@t_int+1),w
  7542  0407  01F4               	clrf	(?i1_eeprom_gravar_word+1)
  7543  0408  07F4               	addwf	(?i1_eeprom_gravar_word+1)
  7544  0409  0866               	movf	(estado_menu_principal@t_int),w
  7545  040A  01F3               	clrf	(?i1_eeprom_gravar_word)
  7546  040B  07F3               	addwf	(?i1_eeprom_gravar_word)
  7547                           
  7548  040C  3006               	movlw	(06h)
  7549  040D  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  118A         
  7550                           	line	199
  7551                           	
  7552  0412                     i1l459:	
  7553                           	line	200
  7554                           ;estados.c: 199: }
  7555                           ;estados.c: 200: eeprom_gravar_word(0x0e + (qtd_val * 2), t_int);
  7556  0412  1283               	bcf	status, 5	;RP0=0, select bank0
  7557  0413  1303               	bcf	status, 6	;RP1=0, select bank0
  7558  0414  0867               	movf	(estado_menu_principal@t_int+1),w
  7559  0415  01F4               	clrf	(?i1_eeprom_gravar_word+1)
  7560  0416  07F4               	addwf	(?i1_eeprom_gravar_word+1)
  7561  0417  0866               	movf	(estado_menu_principal@t_int),w
  7562  0418  01F3               	clrf	(?i1_eeprom_gravar_word)
  7563  0419  07F3               	addwf	(?i1_eeprom_gravar_word)
  7564                           
  7565  041A  0863               	movf	(estado_menu_principal@qtd_val),w
  7566  041B  00DA               	movwf	(??_estado_menu_principal+0)+0
  7567  041C  075A               	addwf	(??_estado_menu_principal+0)+0,w
  7568  041D  3E0E               	addlw	0Eh
  7569  041E  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  118A         
  7570                           	line	201
  7571                           	
  7572  0423                     i1l4485:	
  7573                           ;estados.c: 201: qtd_val++;
  7574  0423  3001               	movlw	(01h)
  7575  0424  1283               	bcf	status, 5	;RP0=0, select bank0
  7576  0425  1303               	bcf	status, 6	;RP1=0, select bank0
  7577  0426  00DA               	movwf	(??_estado_menu_principal+0)+0
  7578  0427  085A               	movf	(??_estado_menu_principal+0)+0,w
  7579  0428  07E3               	addwf	(estado_menu_principal@qtd_val),f
  7580                           	line	202
  7581                           	
  7582  0429                     i1l4487:	
  7583                           ;estados.c: 202: eeprom_write(0x08, qtd_val);
  7584  0429  0863               	movf	(estado_menu_principal@qtd_val),w
  7585  042A  00DA               	movwf	(??_estado_menu_principal+0)+0
  7586  042B  085A               	movf	(??_estado_menu_principal+0)+0,w
  7587  042C  00F0               	movwf	(?i1_eeprom_write)
  7588  042D  3008               	movlw	(08h)
  7589  042E  160A  118A  2759   	fcall	i1_eeprom_write
              120A  118A         
  7590                           	line	204
  7591                           	
  7592  0433                     i1l4489:	
  7593                           ;estados.c: 204: adcon_mostra(t_int, i);
  7594  0433  1283               	bcf	status, 5	;RP0=0, select bank0
  7595  0434  1303               	bcf	status, 6	;RP1=0, select bank0
  7596  0435  0867               	movf	(estado_menu_principal@t_int+1),w
  7597  0436  01B5               	clrf	(?_adcon_mostra+1)
  7598  0437  07B5               	addwf	(?_adcon_mostra+1)
  7599  0438  0866               	movf	(estado_menu_principal@t_int),w
  7600  0439  01B4               	clrf	(?_adcon_mostra)
  7601  043A  07B4               	addwf	(?_adcon_mostra)
  7602                           
  7603  043B  0865               	movf	(estado_menu_principal@i_806),w
  7604  043C  00DA               	movwf	(??_estado_menu_principal+0)+0
  7605  043D  085A               	movf	(??_estado_menu_principal+0)+0,w
  7606  043E  00B6               	movwf	0+(?_adcon_mostra)+02h
  7607  043F  120A  158A  24E4   	fcall	_adcon_mostra
              120A  118A         
  7608  0444  2C45               	goto	i1l4491
  7609                           	line	210
  7610                           	
  7611  0445                     i1l457:	
  7612                           	line	185
  7613                           	
  7614  0445                     i1l4491:	
  7615  0445  3001               	movlw	(01h)
  7616  0446  1283               	bcf	status, 5	;RP0=0, select bank0
  7617  0447  1303               	bcf	status, 6	;RP1=0, select bank0
  7618  0448  00DA               	movwf	(??_estado_menu_principal+0)+0
  7619  0449  085A               	movf	(??_estado_menu_principal+0)+0,w
  7620  044A  07E5               	addwf	(estado_menu_principal@i_806),f
  7621  044B  2C4C               	goto	i1l4493
  7622                           	
  7623  044C                     i1l453:	
  7624                           	
  7625  044C                     i1l4493:	
  7626  044C  0862               	movf	(estado_menu_principal@qtd_sens),w
  7627  044D  0265               	subwf	(estado_menu_principal@i_806),w
  7628  044E  1C03               	skipc
  7629  044F  2C51               	goto	u356_21
  7630  0450  2C52               	goto	u356_20
  7631  0451                     u356_21:
  7632  0451  2BB0               	goto	i1l4465
  7633  0452                     u356_20:
  7634  0452  2C53               	goto	i1l4495
  7635                           	
  7636  0453                     i1l456:	
  7637                           	line	213
  7638                           	
  7639  0453                     i1l4495:	
  7640                           ;estados.c: 210: }
  7641                           ;estados.c: 211: }
  7642                           ;estados.c: 213: estado_executa_muda(EST_CAPTURA_E_GRAVA);
  7643  0453  3003               	movlw	(03h)
  7644  0454  120A  118A  2015   	fcall	_estado_executa_muda
              120A  118A         
  7645                           	line	214
  7646                           ;estados.c: 214: break;
  7647  0459  2CBD               	goto	i1l465
  7648                           	line	216
  7649                           ;estados.c: 216: case 2:
  7650                           	
  7651  045A                     i1l460:	
  7652                           	line	217
  7653                           	
  7654  045A                     i1l4497:	
  7655                           ;estados.c: 217: estado_executa_muda(EST_MOSTRA_TODOS);
  7656  045A  3004               	movlw	(04h)
  7657  045B  120A  118A  2015   	fcall	_estado_executa_muda
              120A  118A         
  7658                           	line	218
  7659                           ;estados.c: 218: break;
  7660  0460  2CBD               	goto	i1l465
  7661                           	line	220
  7662                           ;estados.c: 220: case 3:
  7663                           	
  7664  0461                     i1l461:	
  7665                           	line	221
  7666                           	
  7667  0461                     i1l4499:	
  7668                           ;estados.c: 221: estado_executa_muda(EST_MOSTRA_MAX_MIN);
  7669  0461  3005               	movlw	(05h)
  7670  0462  120A  118A  2015   	fcall	_estado_executa_muda
              120A  118A         
  7671                           	line	222
  7672                           ;estados.c: 222: break;
  7673  0467  2CBD               	goto	i1l465
  7674                           	line	224
  7675                           ;estados.c: 224: case 4:
  7676                           	
  7677  0468                     i1l462:	
  7678                           	line	225
  7679                           	
  7680  0468                     i1l4501:	
  7681                           ;estados.c: 225: estado_executa_muda(EST_LIMPAR);
  7682  0468  3006               	movlw	(06h)
  7683  0469  120A  118A  2015   	fcall	_estado_executa_muda
              120A  118A         
  7684                           	line	226
  7685                           ;estados.c: 226: break;
  7686  046E  2CBD               	goto	i1l465
  7687                           	line	228
  7688                           ;estados.c: 228: case 5:
  7689                           	
  7690  046F                     i1l463:	
  7691                           	line	229
  7692                           	
  7693  046F                     i1l4503:	
  7694                           ;estados.c: 229: gl_item_menu_config_amostra = eeprom_ler_word(0x02);
  7695  046F  3002               	movlw	(02h)
  7696  0470  160A  118A  2678   	fcall	_eeprom_ler_word
              120A  118A         
  7697  0475  0873               	movf	(1+(?_eeprom_ler_word)),w
  7698  0476  1683               	bsf	status, 5	;RP0=1, select bank1
  7699  0477  1303               	bcf	status, 6	;RP1=0, select bank1
  7700  0478  01CC               	clrf	(_gl_item_menu_config_amostra+1)^080h
  7701  0479  07CC               	addwf	(_gl_item_menu_config_amostra+1)^080h
  7702  047A  0872               	movf	(0+(?_eeprom_ler_word)),w
  7703  047B  01CB               	clrf	(_gl_item_menu_config_amostra)^080h
  7704  047C  07CB               	addwf	(_gl_item_menu_config_amostra)^080h
  7705                           
  7706                           	line	230
  7707                           	
  7708  047D                     i1l4505:	
  7709                           ;estados.c: 230: estado_executa_muda(EST_MENU_CONF_TEMPO_AMOSTRA);
  7710  047D  3007               	movlw	(07h)
  7711  047E  120A  118A  2015   	fcall	_estado_executa_muda
              120A  118A         
  7712                           	line	231
  7713                           ;estados.c: 231: break;
  7714  0483  2CBD               	goto	i1l465
  7715                           	line	233
  7716                           ;estados.c: 233: case 6:
  7717                           	
  7718  0484                     i1l464:	
  7719                           	line	234
  7720                           	
  7721  0484                     i1l4507:	
  7722                           ;estados.c: 234: gl_item_menu_config_sensores = eeprom_read(0x00);
  7723  0484  3000               	movlw	(0)
  7724  0485  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  118A         
  7725  048A  1283               	bcf	status, 5	;RP0=0, select bank0
  7726  048B  1303               	bcf	status, 6	;RP1=0, select bank0
  7727  048C  00DA               	movwf	(??_estado_menu_principal+0)+0
  7728  048D  085A               	movf	(??_estado_menu_principal+0)+0,w
  7729  048E  00EE               	movwf	(_gl_item_menu_config_sensores)
  7730                           	line	235
  7731                           	
  7732  048F                     i1l4509:	
  7733                           ;estados.c: 235: estado_executa_muda(EST_MENU_CONF_QUANT_SENSORES);
  7734  048F  3008               	movlw	(08h)
  7735  0490  120A  118A  2015   	fcall	_estado_executa_muda
              120A  118A         
  7736                           	line	236
  7737                           ;estados.c: 236: break;
  7738  0495  2CBD               	goto	i1l465
  7739                           	line	242
  7740                           	
  7741  0496                     i1l4511:	
  7742                           ;estados.c: 242: }
  7743  0496  2CBD               	goto	i1l465
  7744                           	line	148
  7745                           	
  7746  0497                     i1l446:	
  7747                           	
  7748  0497                     i1l4513:	
  7749  0497  1283               	bcf	status, 5	;RP0=0, select bank0
  7750  0498  1303               	bcf	status, 6	;RP1=0, select bank0
  7751  0499  086F               	movf	(_gl_item_menu_principal),w
  7752                           	; Switch size 1, requested type "space"
  7753                           ; Number of cases is 7, Range of values is 0 to 6
  7754                           ; switch strategies available:
  7755                           ; Name         Instructions Cycles
  7756                           ; simple_byte           22    12 (average)
  7757                           ; direct_byte           29     8 (fixed)
  7758                           ; jumptable            260     6 (fixed)
  7759                           ; rangetable            11     6 (fixed)
  7760                           ; spacedrange           20     9 (fixed)
  7761                           ; locatedrange           7     3 (fixed)
  7762                           ;	Chosen strategy is simple_byte
  7763                           
  7764                           	opt asmopt_off
  7765  049A  3A00               	xorlw	0^0	; case 0
  7766  049B  1903               	skipnz
  7767  049C  2B23               	goto	i1l4443
  7768  049D  3A01               	xorlw	1^0	; case 1
  7769  049E  1903               	skipnz
  7770  049F  2B82               	goto	i1l4457
  7771  04A0  3A03               	xorlw	2^1	; case 2
  7772  04A1  1903               	skipnz
  7773  04A2  2C5A               	goto	i1l4497
  7774  04A3  3A01               	xorlw	3^2	; case 3
  7775  04A4  1903               	skipnz
  7776  04A5  2C61               	goto	i1l4499
  7777  04A6  3A07               	xorlw	4^3	; case 4
  7778  04A7  1903               	skipnz
  7779  04A8  2C68               	goto	i1l4501
  7780  04A9  3A01               	xorlw	5^4	; case 5
  7781  04AA  1903               	skipnz
  7782  04AB  2C6F               	goto	i1l4503
  7783  04AC  3A03               	xorlw	6^5	; case 6
  7784  04AD  1903               	skipnz
  7785  04AE  2C84               	goto	i1l4507
  7786  04AF  2CBD               	goto	i1l465
  7787                           	opt asmopt_on
  7788                           
  7789                           	line	242
  7790                           	
  7791  04B0                     i1l451:	
  7792                           	line	243
  7793                           ;estados.c: 243: break;
  7794  04B0  2CBD               	goto	i1l465
  7795                           	line	244
  7796                           	
  7797  04B1                     i1l4515:	
  7798                           ;estados.c: 244: }
  7799  04B1  2CBD               	goto	i1l465
  7800                           	line	131
  7801                           	
  7802  04B2                     i1l439:	
  7803                           	
  7804  04B2                     i1l4517:	
  7805  04B2  0860               	movf	(estado_menu_principal@opt),w
  7806                           	; Switch size 1, requested type "space"
  7807                           ; Number of cases is 3, Range of values is 1 to 4
  7808                           ; switch strategies available:
  7809                           ; Name         Instructions Cycles
  7810                           ; simple_byte           10     6 (average)
  7811                           ; direct_byte           23    11 (fixed)
  7812                           ; jumptable            263     9 (fixed)
  7813                           ;	Chosen strategy is simple_byte
  7814                           
  7815                           	opt asmopt_off
  7816  04B3  3A01               	xorlw	1^0	; case 1
  7817  04B4  1903               	skipnz
  7818  04B5  2C97               	goto	i1l4513
  7819  04B6  3A02               	xorlw	3^1	; case 3
  7820  04B7  1903               	skipnz
  7821  04B8  2B00               	goto	i1l440
  7822  04B9  3A07               	xorlw	4^3	; case 4
  7823  04BA  1903               	skipnz
  7824  04BB  2B0E               	goto	i1l4437
  7825  04BC  2CBD               	goto	i1l465
  7826                           	opt asmopt_on
  7827                           
  7828                           	line	244
  7829                           	
  7830  04BD                     i1l442:	
  7831                           	line	245
  7832                           	
  7833  04BD                     i1l465:	
  7834  04BD  0008               	return
  7835                           	opt stack 0
  7836                           GLOBAL	__end_of_estado_menu_principal
  7837  04BE                     	__end_of_estado_menu_principal:
  7838                           	signat	_estado_menu_principal,4216
  7839                           	global	_estado_inicial
  7840                           
  7841 ;; *************** function _estado_inicial *****************
  7842 ;; Defined at:
  7843 ;;		line 95 in file "estados.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  opt             1    wreg     unsigned char 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  opt             1    0[COMMON] unsigned char 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;		None               void
  7850 ;; Registers used:
  7851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7857 ;;      Params:         0       0       0       0       0
  7858 ;;      Locals:         0       0       0       0       0
  7859 ;;      Temps:          0       0       0       0       0
  7860 ;;      Totals:         0       0       0       0       0
  7861 ;;Total ram usage:        0 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    3
  7864 ;; This function calls:
  7865 ;;		_estado_executa_muda
  7866 ;; This function is called by:
  7867 ;;		_estado_maquina
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           psect	text22,local,class=CODE,delta=2,merge=1
  7871                           global __ptext22
  7872  14E2                     __ptext22:	;psect for function _estado_inicial
  7873                           psect	text22
  7874                           	file	"estados.c"
  7875                           	line	95
  7876                           	global	__size_of_estado_inicial
  7877  0007                     	__size_of_estado_inicial	equ	__end_of_estado_inicial-_estado_inicial
  7878                           	
  7879  14E2                     _estado_inicial:	
  7880                           ;incstack = 0
  7881                           	opt	stack 0
  7882                           ; Regs used in _estado_inicial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7883                           	line	96
  7884                           	
  7885  14E2                     i1l4429:	
  7886                           ;estados.c: 96: estado_executa_muda(EST_MENU_PRINCIPAL);
  7887  14E2  3001               	movlw	(01h)
  7888  14E3  120A  118A  2015   	fcall	_estado_executa_muda
              160A  118A         
  7889                           	line	97
  7890                           	
  7891  14E8                     i1l428:	
  7892  14E8  0008               	return
  7893                           	opt stack 0
  7894                           GLOBAL	__end_of_estado_inicial
  7895  14E9                     	__end_of_estado_inicial:
  7896                           	signat	_estado_inicial,4216
  7897                           	global	_estado_executa_muda
  7898                           
  7899 ;; *************** function _estado_executa_muda *****************
  7900 ;; Defined at:
  7901 ;;		line 357 in file "estados.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  novo_estado     1    wreg     enum E1660
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  novo_estado     1   45[BANK0 ] enum E1660
  7906 ;;  i               1   57[BANK0 ] unsigned char 
  7907 ;;  i               1   56[BANK0 ] unsigned char 
  7908 ;;  tmp            17   24[BANK0 ] unsigned char [17]
  7909 ;;  menor           2   50[BANK0 ] unsigned int 
  7910 ;;  maior           2   48[BANK0 ] unsigned int 
  7911 ;;  temp_int        2   43[BANK0 ] unsigned int 
  7912 ;;  endereco        1   47[BANK0 ] unsigned char 
  7913 ;;  qtd_sens        1   46[BANK0 ] unsigned char 
  7914 ;;  posicao         1   42[BANK0 ] unsigned char 
  7915 ;;  qtd_val         1   41[BANK0 ] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;		None               void
  7918 ;; Registers used:
  7919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7925 ;;      Params:         0       0       0       0       0
  7926 ;;      Locals:         0      34       0       0       0
  7927 ;;      Temps:          0       4       0       0       0
  7928 ;;      Totals:         0      38       0       0       0
  7929 ;;Total ram usage:       38 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    2
  7932 ;; This function calls:
  7933 ;;		_lcd_clear
  7934 ;;		_eeprom_ler_word
  7935 ;;		_sprintf
  7936 ;;		___bmul
  7937 ;;		___lwdiv
  7938 ;;		___lwmod
  7939 ;;		i1_lcd_goto
  7940 ;;		i1_lcd_puts
  7941 ;;		i1_eeprom_gravar_word
  7942 ;;		i1_eeprom_read
  7943 ;;		i1_eeprom_write
  7944 ;; This function is called by:
  7945 ;;		_estado_inicial
  7946 ;;		_estado_menu_limpar
  7947 ;;		_estado_captura_mostra
  7948 ;;		_estado_menu_principal
  7949 ;;		_estado_ver_todos
  7950 ;;		_estado_max_min
  7951 ;;		_estado_menu_conf_tempo_amostra
  7952 ;;		_estado_menu_conf_quant_sensores
  7953 ;;		_estado_enviar_dados
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           psect	text23,local,class=CODE,delta=2,merge=1
  7957                           global __ptext23
  7958  0015                     __ptext23:	;psect for function _estado_executa_muda
  7959                           psect	text23
  7960                           	file	"estados.c"
  7961                           	line	357
  7962                           	global	__size_of_estado_executa_muda
  7963  02E7                     	__size_of_estado_executa_muda	equ	__end_of_estado_executa_muda-_estado_executa_muda
  7964                           	
  7965  0015                     _estado_executa_muda:	
  7966                           ;incstack = 0
  7967 ;; using string table level
  7968                           	opt	stack 1
  7969                           ; Regs used in _estado_executa_muda: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  7970                           ;estado_executa_muda@novo_estado stored from wreg
  7971                           	line	365
  7972  0015  1283               	bcf	status, 5	;RP0=0, select bank0
  7973  0016  1303               	bcf	status, 6	;RP1=0, select bank0
  7974  0017  00CD               	movwf	(estado_executa_muda@novo_estado)
  7975                           	
  7976  0018                     i1l4275:	
  7977                           ;estados.c: 359: uint16_t maior, menor, temp_int;
  7978                           ;estados.c: 360: uint8_t endereco, qtd_val, qtd_sens;
  7979                           ;estados.c: 361: uint8_t posicao;
  7980                           ;estados.c: 365: char tmp[17] = {0};
  7981  0018  3038               	movlw	(estado_executa_muda@tmp)&0ffh
  7982  0019  0084               	movwf	fsr0
  7983  001A  3090               	movlw	low(estado_executa_muda@F1751)
  7984  001B  00B4               	movwf	(??_estado_executa_muda+0)+0
  7985  001C  0804               	movf	fsr0,w
  7986  001D  00B5               	movwf	((??_estado_executa_muda+0)+0+1)
  7987  001E  3011               	movlw	17
  7988  001F  00B6               	movwf	((??_estado_executa_muda+0)+0+2)
  7989  0020                     u335_20:
  7990  0020  0834               	movf	(??_estado_executa_muda+0)+0,w
  7991  0021  0084               	movwf	fsr0
  7992  0022  1783               	bsf	status, 7	;select IRP bank3
  7993                           	
  7994  0023  0800               	movf	indf,w
  7995  0024  00B7               	movwf	((??_estado_executa_muda+0)+0+3)
  7996  0025  0AB4               	incf	(??_estado_executa_muda+0)+0,f
  7997  0026  0835               	movf	((??_estado_executa_muda+0)+0+1),w
  7998  0027  0084               	movwf	fsr0
  7999  0028  1383               	bcf	status, 7	;select IRP bank0
  8000                           	
  8001  0029  0837               	movf	((??_estado_executa_muda+0)+0+3),w
  8002  002A  0080               	movwf	indf
  8003  002B  0AB5               	incf	((??_estado_executa_muda+0)+0+1),f
  8004  002C  0BB6               	decfsz	((??_estado_executa_muda+0)+0+2),f
  8005  002D  2820               	goto	u335_20
  8006                           	line	368
  8007                           ;estados.c: 368: switch (novo_estado) {
  8008  002E  2AD7               	goto	i1l4369
  8009                           	line	369
  8010                           ;estados.c: 369: case EST_MENU_PRINCIPAL:
  8011                           	
  8012  002F                     i1l511:	
  8013                           	line	370
  8014                           	
  8015  002F                     i1l4277:	
  8016                           ;estados.c: 370: lcd_clear();
  8017  002F  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  8018                           	line	371
  8019                           	
  8020  0034                     i1l4279:	
  8021                           ;estados.c: 371: lcd_puts(menu_inicial[gl_item_menu_principal]);
  8022  0034  1283               	bcf	status, 5	;RP0=0, select bank0
  8023  0035  1303               	bcf	status, 6	;RP1=0, select bank0
  8024  0036  086F               	movf	(_gl_item_menu_principal),w
  8025  0037  00B4               	movwf	(??_estado_executa_muda+0)+0
  8026  0038  0734               	addwf	(??_estado_executa_muda+0)+0,w
  8027  0039  3ED1               	addlw	_menu_inicial&0ffh
  8028  003A  0084               	movwf	fsr0
  8029  003B  1383               	bcf	status, 7	;select IRP bank1
  8030  003C  0800               	movf	indf,w
  8031  003D  00F4               	movwf	(?i1_lcd_puts)
  8032  003E  0A84               	incf	fsr0,f
  8033  003F  0800               	movf	indf,w
  8034  0040  00F5               	movwf	(?i1_lcd_puts+1)
  8035  0041  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  8036                           	line	372
  8037                           ;estados.c: 372: break;
  8038  0046  2AF3               	goto	i1l4371
  8039                           	line	373
  8040                           ;estados.c: 373: case EST_CAPTURA_E_MOSTRA:
  8041                           	
  8042  0047                     i1l513:	
  8043                           	line	374
  8044                           ;estados.c: 374: INTCONbits.T0IE = 1;
  8045  0047  168B               	bsf	(11),5	;volatile
  8046                           	line	375
  8047                           ;estados.c: 375: break;
  8048  0048  2AF3               	goto	i1l4371
  8049                           	line	376
  8050                           ;estados.c: 376: case EST_CAPTURA_E_GRAVA:
  8051                           	
  8052  0049                     i1l514:	
  8053                           	line	377
  8054                           ;estados.c: 377: INTCONbits.T0IE = 1;
  8055  0049  168B               	bsf	(11),5	;volatile
  8056                           	line	378
  8057                           ;estados.c: 378: break;
  8058  004A  2AF3               	goto	i1l4371
  8059                           	line	379
  8060                           ;estados.c: 379: case EST_MOSTRA_TODOS:
  8061                           	
  8062  004B                     i1l515:	
  8063                           	line	380
  8064                           	
  8065  004B                     i1l4281:	
  8066                           ;estados.c: 380: lcd_clear();
  8067  004B  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  8068                           	line	381
  8069                           ;estados.c: 381: qtd_val = eeprom_read(0x08);
  8070  0050  3008               	movlw	(08h)
  8071  0051  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  118A         
  8072  0056  1283               	bcf	status, 5	;RP0=0, select bank0
  8073  0057  1303               	bcf	status, 6	;RP1=0, select bank0
  8074  0058  00B4               	movwf	(??_estado_executa_muda+0)+0
  8075  0059  0834               	movf	(??_estado_executa_muda+0)+0,w
  8076  005A  00C9               	movwf	(estado_executa_muda@qtd_val)
  8077                           	line	382
  8078                           	
  8079  005B                     i1l4283:	
  8080                           ;estados.c: 382: if (qtd_val == 0) {
  8081  005B  08C9               	movf	(estado_executa_muda@qtd_val),f
  8082  005C  1D03               	skipz
  8083  005D  285F               	goto	u336_21
  8084  005E  2860               	goto	u336_20
  8085  005F                     u336_21:
  8086  005F  286A               	goto	i1l4287
  8087  0060                     u336_20:
  8088                           	line	383
  8089                           	
  8090  0060                     i1l4285:	
  8091                           ;estados.c: 383: lcd_puts("Nenhum Dado");
  8092  0060  30D3               	movlw	low(STR_41|8000h)
  8093  0061  00F4               	movwf	(?i1_lcd_puts)
  8094  0062  3085               	movlw	high(STR_41|8000h)
  8095  0063  00F5               	movwf	((?i1_lcd_puts))+1
  8096  0064  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  8097                           	line	384
  8098                           ;estados.c: 384: } else {
  8099  0069  2AF3               	goto	i1l4371
  8100                           	
  8101  006A                     i1l516:	
  8102                           	line	388
  8103                           	
  8104  006A                     i1l4287:	
  8105                           ;estados.c: 388: posicao = eeprom_read(0x00);
  8106  006A  3000               	movlw	(0)
  8107  006B  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  118A         
  8108  0070  1283               	bcf	status, 5	;RP0=0, select bank0
  8109  0071  1303               	bcf	status, 6	;RP1=0, select bank0
  8110  0072  00B4               	movwf	(??_estado_executa_muda+0)+0
  8111  0073  0834               	movf	(??_estado_executa_muda+0)+0,w
  8112  0074  00CA               	movwf	(estado_executa_muda@posicao)
  8113                           	line	389
  8114                           	
  8115  0075                     i1l4289:	
  8116                           ;estados.c: 389: qtd_sens = menu_quant_sensores[posicao].i_quant_sensores;
  8117  0075  3003               	movlw	(03h)
  8118  0076  00B4               	movwf	(??_estado_executa_muda+0)+0
  8119  0077  0834               	movf	(??_estado_executa_muda+0)+0,w
  8120  0078  00F0               	movwf	(?___bmul)
  8121  0079  084A               	movf	(estado_executa_muda@posicao),w
  8122  007A  160A  118A  2569   	fcall	___bmul
              120A  118A         
  8123  007F  3E02               	addlw	02h
  8124  0080  3E2E               	addlw	low(_menu_quant_sensores|8000h)
  8125  0081  0084               	movwf	fsr0
  8126  0082  3085               	movlw	high(_menu_quant_sensores|8000h)
  8127  0083  1803               	skipnc
  8128  0084  3E01               	addlw	1
  8129  0085  1283               	bcf	status, 5	;RP0=0, select bank0
  8130  0086  1303               	bcf	status, 6	;RP1=0, select bank0
  8131  0087  00FF               	movwf	btemp+1
  8132  0088  120A  118A  2500   	fcall	stringtab
              120A  118A         
  8133  008D  00B5               	movwf	(??_estado_executa_muda+1)+0
  8134  008E  0835               	movf	(??_estado_executa_muda+1)+0,w
  8135  008F  00CE               	movwf	(estado_executa_muda@qtd_sens)
  8136                           	line	392
  8137                           	
  8138  0090                     i1l4291:	
  8139                           ;estados.c: 392: endereco = 0x0e + (gl_item_menu_ver_todos * qtd_sens * 2);
  8140  0090  084E               	movf	(estado_executa_muda@qtd_sens),w
  8141  0091  00B4               	movwf	(??_estado_executa_muda+0)+0
  8142  0092  0834               	movf	(??_estado_executa_muda+0)+0,w
  8143  0093  00F0               	movwf	(?___bmul)
  8144  0094  1683               	bsf	status, 5	;RP0=1, select bank1
  8145  0095  1303               	bcf	status, 6	;RP1=0, select bank1
  8146  0096  0850               	movf	(_gl_item_menu_ver_todos)^080h,w
  8147  0097  160A  118A  2569   	fcall	___bmul
              120A  118A         
  8148  009C  1283               	bcf	status, 5	;RP0=0, select bank0
  8149  009D  1303               	bcf	status, 6	;RP1=0, select bank0
  8150  009E  00B5               	movwf	(??_estado_executa_muda+1)+0
  8151  009F  0735               	addwf	(??_estado_executa_muda+1)+0,w
  8152  00A0  3E0E               	addlw	0Eh
  8153  00A1  00B6               	movwf	(??_estado_executa_muda+2)+0
  8154  00A2  0836               	movf	(??_estado_executa_muda+2)+0,w
  8155  00A3  00CF               	movwf	(estado_executa_muda@endereco)
  8156                           	line	395
  8157                           	
  8158  00A4                     i1l4293:	
  8159                           ;estados.c: 395: for (uint8_t i = 0; i < qtd_sens; i++) {
  8160  00A4  01D9               	clrf	(estado_executa_muda@i)
  8161  00A5  2939               	goto	i1l4311
  8162                           	
  8163  00A6                     i1l519:	
  8164                           	line	397
  8165                           	
  8166  00A6                     i1l4295:	
  8167                           ;estados.c: 397: temp_int = eeprom_ler_word(endereco);
  8168  00A6  084F               	movf	(estado_executa_muda@endereco),w
  8169  00A7  160A  118A  2678   	fcall	_eeprom_ler_word
              120A  118A         
  8170  00AC  0873               	movf	(1+(?_eeprom_ler_word)),w
  8171  00AD  1283               	bcf	status, 5	;RP0=0, select bank0
  8172  00AE  1303               	bcf	status, 6	;RP1=0, select bank0
  8173  00AF  01CC               	clrf	(estado_executa_muda@temp_int+1)
  8174  00B0  07CC               	addwf	(estado_executa_muda@temp_int+1)
  8175  00B1  0872               	movf	(0+(?_eeprom_ler_word)),w
  8176  00B2  01CB               	clrf	(estado_executa_muda@temp_int)
  8177  00B3  07CB               	addwf	(estado_executa_muda@temp_int)
  8178                           
  8179                           	line	399
  8180                           	
  8181  00B4                     i1l4297:	
  8182                           ;estados.c: 399: sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp_int % 10);
  8183  00B4  300A               	movlw	low(0Ah)
  8184  00B5  00F0               	movwf	(?___lwdiv)
  8185  00B6  3000               	movlw	high(0Ah)
  8186  00B7  00F1               	movwf	((?___lwdiv))+1
  8187  00B8  084C               	movf	(estado_executa_muda@temp_int+1),w
  8188  00B9  01F3               	clrf	1+(?___lwdiv)+02h
  8189  00BA  07F3               	addwf	1+(?___lwdiv)+02h
  8190  00BB  084B               	movf	(estado_executa_muda@temp_int),w
  8191  00BC  01F2               	clrf	0+(?___lwdiv)+02h
  8192  00BD  07F2               	addwf	0+(?___lwdiv)+02h
  8193                           
  8194  00BE  120A  158A  2085   	fcall	___lwdiv
              120A  118A         
  8195  00C3  0871               	movf	(1+(?___lwdiv)),w
  8196  00C4  1283               	bcf	status, 5	;RP0=0, select bank0
  8197  00C5  1303               	bcf	status, 6	;RP1=0, select bank0
  8198  00C6  01D5               	clrf	(_estado_executa_muda$1447+1)
  8199  00C7  07D5               	addwf	(_estado_executa_muda$1447+1)
  8200  00C8  0870               	movf	(0+(?___lwdiv)),w
  8201  00C9  01D4               	clrf	(_estado_executa_muda$1447)
  8202  00CA  07D4               	addwf	(_estado_executa_muda$1447)
  8203                           
  8204                           	
  8205  00CB                     i1l4299:	
  8206                           ;estados.c: 399: sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp_int % 10);
  8207  00CB  300A               	movlw	low(0Ah)
  8208  00CC  00F8               	movwf	(?___lwmod)
  8209  00CD  3000               	movlw	high(0Ah)
  8210  00CE  00F9               	movwf	((?___lwmod))+1
  8211  00CF  084C               	movf	(estado_executa_muda@temp_int+1),w
  8212  00D0  01FB               	clrf	1+(?___lwmod)+02h
  8213  00D1  07FB               	addwf	1+(?___lwmod)+02h
  8214  00D2  084B               	movf	(estado_executa_muda@temp_int),w
  8215  00D3  01FA               	clrf	0+(?___lwmod)+02h
  8216  00D4  07FA               	addwf	0+(?___lwmod)+02h
  8217                           
  8218  00D5  120A  158A  2042   	fcall	___lwmod
              120A  118A         
  8219  00DA  0879               	movf	(1+(?___lwmod)),w
  8220  00DB  1283               	bcf	status, 5	;RP0=0, select bank0
  8221  00DC  1303               	bcf	status, 6	;RP1=0, select bank0
  8222  00DD  01D7               	clrf	(_estado_executa_muda$1448+1)
  8223  00DE  07D7               	addwf	(_estado_executa_muda$1448+1)
  8224  00DF  0878               	movf	(0+(?___lwmod)),w
  8225  00E0  01D6               	clrf	(_estado_executa_muda$1448)
  8226  00E1  07D6               	addwf	(_estado_executa_muda$1448)
  8227                           
  8228                           	
  8229  00E2                     i1l4301:	
  8230                           ;estados.c: 399: sprintf(tmp, "%d=%d.%d", i + 1, temp_int / 10, temp_int % 10);
  8231  00E2  303D               	movlw	low(STR_42|8000h)
  8232  00E3  00A0               	movwf	(?_sprintf)
  8233  00E4  3086               	movlw	high(STR_42|8000h)
  8234  00E5  00A1               	movwf	((?_sprintf))+1
  8235  00E6  0859               	movf	(estado_executa_muda@i),w
  8236  00E7  3E01               	addlw	low(01h)
  8237  00E8  00A2               	movwf	0+(?_sprintf)+02h
  8238  00E9  3000               	movlw	high(01h)
  8239  00EA  1803               	skipnc
  8240  00EB  3001               	movlw	(high(01h)+1)&0ffh
  8241  00EC  00A3               	movwf	(0+(?_sprintf)+02h)+1
  8242  00ED  0855               	movf	(_estado_executa_muda$1447+1),w
  8243  00EE  01A5               	clrf	1+(?_sprintf)+04h
  8244  00EF  07A5               	addwf	1+(?_sprintf)+04h
  8245  00F0  0854               	movf	(_estado_executa_muda$1447),w
  8246  00F1  01A4               	clrf	0+(?_sprintf)+04h
  8247  00F2  07A4               	addwf	0+(?_sprintf)+04h
  8248                           
  8249  00F3  0857               	movf	(_estado_executa_muda$1448+1),w
  8250  00F4  01A7               	clrf	1+(?_sprintf)+06h
  8251  00F5  07A7               	addwf	1+(?_sprintf)+06h
  8252  00F6  0856               	movf	(_estado_executa_muda$1448),w
  8253  00F7  01A6               	clrf	0+(?_sprintf)+06h
  8254  00F8  07A6               	addwf	0+(?_sprintf)+06h
  8255                           
  8256  00F9  3038               	movlw	(estado_executa_muda@tmp)&0ffh
  8257  00FA  120A  158A  26D6   	fcall	_sprintf
              120A  118A         
  8258                           	line	400
  8259                           	
  8260  00FF                     i1l4303:	
  8261                           ;estados.c: 400: lcd_goto(LCD_POSICAO[i].y, LCD_POSICAO[i].x);
  8262  00FF  1403               	setc
  8263  0100  1283               	bcf	status, 5	;RP0=0, select bank0
  8264  0101  1303               	bcf	status, 6	;RP1=0, select bank0
  8265  0102  0D59               	rlf	(estado_executa_muda@i),w
  8266  0103  3E44               	addlw	low(_LCD_POSICAO|8000h)
  8267  0104  0084               	movwf	fsr0
  8268  0105  3085               	movlw	high(_LCD_POSICAO|8000h)
  8269  0106  1803               	skipnc
  8270  0107  3E01               	addlw	1
  8271  0108  00FF               	movwf	btemp+1
  8272  0109  120A  118A  2500   	fcall	stringtab
              120A  118A         
  8273  010E  00B4               	movwf	(??_estado_executa_muda+0)+0
  8274  010F  0834               	movf	(??_estado_executa_muda+0)+0,w
  8275  0110  00F2               	movwf	(?i1_lcd_goto)
  8276  0111  0859               	movf	(estado_executa_muda@i),w
  8277  0112  00B5               	movwf	(??_estado_executa_muda+1)+0
  8278  0113  0735               	addwf	(??_estado_executa_muda+1)+0,w
  8279  0114  3E44               	addlw	low(_LCD_POSICAO|8000h)
  8280  0115  0084               	movwf	fsr0
  8281  0116  3085               	movlw	high(_LCD_POSICAO|8000h)
  8282  0117  1803               	skipnc
  8283  0118  3E01               	addlw	1
  8284  0119  00FF               	movwf	btemp+1
  8285  011A  120A  118A  2500   	fcall	stringtab
              120A  118A         
  8286  011F  160A  118A  2651   	fcall	i1_lcd_goto
              120A  118A         
  8287                           	line	401
  8288                           	
  8289  0124                     i1l4305:	
  8290                           ;estados.c: 401: lcd_puts(tmp);
  8291  0124  3038               	movlw	(estado_executa_muda@tmp&0ffh)
  8292  0125  00F4               	movwf	(?i1_lcd_puts)
  8293  0126  3000               	movlw	(0x0/2)
  8294  0127  00F5               	movwf	(?i1_lcd_puts+1)
  8295  0128  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  8296                           	line	402
  8297                           	
  8298  012D                     i1l4307:	
  8299                           ;estados.c: 402: endereco = endereco + 2;
  8300  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  8301  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  8302  012F  084F               	movf	(estado_executa_muda@endereco),w
  8303  0130  3E02               	addlw	02h
  8304  0131  00B4               	movwf	(??_estado_executa_muda+0)+0
  8305  0132  0834               	movf	(??_estado_executa_muda+0)+0,w
  8306  0133  00CF               	movwf	(estado_executa_muda@endereco)
  8307                           	line	395
  8308                           	
  8309  0134                     i1l4309:	
  8310  0134  3001               	movlw	(01h)
  8311  0135  00B4               	movwf	(??_estado_executa_muda+0)+0
  8312  0136  0834               	movf	(??_estado_executa_muda+0)+0,w
  8313  0137  07D9               	addwf	(estado_executa_muda@i),f
  8314  0138  2939               	goto	i1l4311
  8315                           	
  8316  0139                     i1l518:	
  8317                           	
  8318  0139                     i1l4311:	
  8319  0139  084E               	movf	(estado_executa_muda@qtd_sens),w
  8320  013A  0259               	subwf	(estado_executa_muda@i),w
  8321  013B  1C03               	skipc
  8322  013C  293E               	goto	u337_21
  8323  013D  293F               	goto	u337_20
  8324  013E                     u337_21:
  8325  013E  28A6               	goto	i1l4295
  8326  013F                     u337_20:
  8327  013F  2AF3               	goto	i1l4371
  8328                           	
  8329  0140                     i1l520:	
  8330  0140  2AF3               	goto	i1l4371
  8331                           	line	404
  8332                           	
  8333  0141                     i1l517:	
  8334                           	line	405
  8335                           ;estados.c: 403: }
  8336                           ;estados.c: 404: }
  8337                           ;estados.c: 405: break;
  8338  0141  2AF3               	goto	i1l4371
  8339                           	line	406
  8340                           ;estados.c: 406: case EST_MOSTRA_MAX_MIN:
  8341                           	
  8342  0142                     i1l521:	
  8343                           	line	407
  8344                           	
  8345  0142                     i1l4313:	
  8346                           ;estados.c: 407: lcd_clear();
  8347  0142  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  8348                           	line	408
  8349                           	
  8350  0147                     i1l4315:	
  8351                           ;estados.c: 408: maior = eeprom_ler_word(0x06);
  8352  0147  3006               	movlw	(06h)
  8353  0148  160A  118A  2678   	fcall	_eeprom_ler_word
              120A  118A         
  8354  014D  0873               	movf	(1+(?_eeprom_ler_word)),w
  8355  014E  1283               	bcf	status, 5	;RP0=0, select bank0
  8356  014F  1303               	bcf	status, 6	;RP1=0, select bank0
  8357  0150  01D1               	clrf	(estado_executa_muda@maior+1)
  8358  0151  07D1               	addwf	(estado_executa_muda@maior+1)
  8359  0152  0872               	movf	(0+(?_eeprom_ler_word)),w
  8360  0153  01D0               	clrf	(estado_executa_muda@maior)
  8361  0154  07D0               	addwf	(estado_executa_muda@maior)
  8362                           
  8363                           	line	409
  8364                           	
  8365  0155                     i1l4317:	
  8366                           ;estados.c: 409: menor = eeprom_ler_word(0x04);
  8367  0155  3004               	movlw	(04h)
  8368  0156  160A  118A  2678   	fcall	_eeprom_ler_word
              120A  118A         
  8369  015B  0873               	movf	(1+(?_eeprom_ler_word)),w
  8370  015C  1283               	bcf	status, 5	;RP0=0, select bank0
  8371  015D  1303               	bcf	status, 6	;RP1=0, select bank0
  8372  015E  01D3               	clrf	(estado_executa_muda@menor+1)
  8373  015F  07D3               	addwf	(estado_executa_muda@menor+1)
  8374  0160  0872               	movf	(0+(?_eeprom_ler_word)),w
  8375  0161  01D2               	clrf	(estado_executa_muda@menor)
  8376  0162  07D2               	addwf	(estado_executa_muda@menor)
  8377                           
  8378                           	line	411
  8379                           	
  8380  0163                     i1l4319:	
  8381                           ;estados.c: 411: if (maior == 0) {
  8382  0163  0851               	movf	((estado_executa_muda@maior+1)),w
  8383  0164  0450               	iorwf	((estado_executa_muda@maior)),w
  8384  0165  1D03               	skipz
  8385  0166  2968               	goto	u338_21
  8386  0167  2969               	goto	u338_20
  8387  0168                     u338_21:
  8388  0168  297E               	goto	i1l4325
  8389  0169                     u338_20:
  8390                           	line	412
  8391                           	
  8392  0169                     i1l4321:	
  8393                           ;estados.c: 412: if (menor == 0xffff) {
  8394  0169  30FF               	movlw	high(0FFFFh)
  8395  016A  0653               	xorwf	(estado_executa_muda@menor+1),w
  8396  016B  1D03               	skipz
  8397  016C  296F               	goto	u339_25
  8398  016D  30FF               	movlw	low(0FFFFh)
  8399  016E  0652               	xorwf	(estado_executa_muda@menor),w
  8400  016F                     u339_25:
  8401                           
  8402  016F  1D03               	skipz
  8403  0170  2972               	goto	u339_21
  8404  0171  2973               	goto	u339_20
  8405  0172                     u339_21:
  8406  0172  2AF3               	goto	i1l4371
  8407  0173                     u339_20:
  8408                           	line	413
  8409                           	
  8410  0173                     i1l4323:	
  8411                           ;estados.c: 413: lcd_puts("Nenhum Dado");
  8412  0173  30D3               	movlw	low(STR_43|8000h)
  8413  0174  00F4               	movwf	(?i1_lcd_puts)
  8414  0175  3085               	movlw	high(STR_43|8000h)
  8415  0176  00F5               	movwf	((?i1_lcd_puts))+1
  8416  0177  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  8417  017C  2AF3               	goto	i1l4371
  8418                           	line	414
  8419                           	
  8420  017D                     i1l523:	
  8421                           	line	415
  8422                           ;estados.c: 414: }
  8423                           ;estados.c: 415: } else {
  8424  017D  2AF3               	goto	i1l4371
  8425                           	
  8426  017E                     i1l522:	
  8427                           	line	416
  8428                           	
  8429  017E                     i1l4325:	
  8430                           ;estados.c: 416: sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  8431  017E  300A               	movlw	low(0Ah)
  8432  017F  00F0               	movwf	(?___lwdiv)
  8433  0180  3000               	movlw	high(0Ah)
  8434  0181  00F1               	movwf	((?___lwdiv))+1
  8435  0182  1283               	bcf	status, 5	;RP0=0, select bank0
  8436  0183  1303               	bcf	status, 6	;RP1=0, select bank0
  8437  0184  0851               	movf	(estado_executa_muda@maior+1),w
  8438  0185  01F3               	clrf	1+(?___lwdiv)+02h
  8439  0186  07F3               	addwf	1+(?___lwdiv)+02h
  8440  0187  0850               	movf	(estado_executa_muda@maior),w
  8441  0188  01F2               	clrf	0+(?___lwdiv)+02h
  8442  0189  07F2               	addwf	0+(?___lwdiv)+02h
  8443                           
  8444  018A  120A  158A  2085   	fcall	___lwdiv
              120A  118A         
  8445  018F  0871               	movf	(1+(?___lwdiv)),w
  8446  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  8447  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  8448  0192  01D5               	clrf	(_estado_executa_muda$1447+1)
  8449  0193  07D5               	addwf	(_estado_executa_muda$1447+1)
  8450  0194  0870               	movf	(0+(?___lwdiv)),w
  8451  0195  01D4               	clrf	(_estado_executa_muda$1447)
  8452  0196  07D4               	addwf	(_estado_executa_muda$1447)
  8453                           
  8454                           ;estados.c: 416: sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  8455  0197  300A               	movlw	low(0Ah)
  8456  0198  00F8               	movwf	(?___lwmod)
  8457  0199  3000               	movlw	high(0Ah)
  8458  019A  00F9               	movwf	((?___lwmod))+1
  8459  019B  0851               	movf	(estado_executa_muda@maior+1),w
  8460  019C  01FB               	clrf	1+(?___lwmod)+02h
  8461  019D  07FB               	addwf	1+(?___lwmod)+02h
  8462  019E  0850               	movf	(estado_executa_muda@maior),w
  8463  019F  01FA               	clrf	0+(?___lwmod)+02h
  8464  01A0  07FA               	addwf	0+(?___lwmod)+02h
  8465                           
  8466  01A1  120A  158A  2042   	fcall	___lwmod
              120A  118A         
  8467  01A6  0879               	movf	(1+(?___lwmod)),w
  8468  01A7  1283               	bcf	status, 5	;RP0=0, select bank0
  8469  01A8  1303               	bcf	status, 6	;RP1=0, select bank0
  8470  01A9  01D7               	clrf	(_estado_executa_muda$1448+1)
  8471  01AA  07D7               	addwf	(_estado_executa_muda$1448+1)
  8472  01AB  0878               	movf	(0+(?___lwmod)),w
  8473  01AC  01D6               	clrf	(_estado_executa_muda$1448)
  8474  01AD  07D6               	addwf	(_estado_executa_muda$1448)
  8475                           
  8476                           	
  8477  01AE                     i1l4327:	
  8478                           ;estados.c: 416: sprintf(tmp, "Max=%d.%d", maior / 10, maior % 10);
  8479  01AE  3020               	movlw	low(STR_44|8000h)
  8480  01AF  00A0               	movwf	(?_sprintf)
  8481  01B0  3086               	movlw	high(STR_44|8000h)
  8482  01B1  00A1               	movwf	((?_sprintf))+1
  8483  01B2  0855               	movf	(_estado_executa_muda$1447+1),w
  8484  01B3  01A3               	clrf	1+(?_sprintf)+02h
  8485  01B4  07A3               	addwf	1+(?_sprintf)+02h
  8486  01B5  0854               	movf	(_estado_executa_muda$1447),w
  8487  01B6  01A2               	clrf	0+(?_sprintf)+02h
  8488  01B7  07A2               	addwf	0+(?_sprintf)+02h
  8489                           
  8490  01B8  0857               	movf	(_estado_executa_muda$1448+1),w
  8491  01B9  01A5               	clrf	1+(?_sprintf)+04h
  8492  01BA  07A5               	addwf	1+(?_sprintf)+04h
  8493  01BB  0856               	movf	(_estado_executa_muda$1448),w
  8494  01BC  01A4               	clrf	0+(?_sprintf)+04h
  8495  01BD  07A4               	addwf	0+(?_sprintf)+04h
  8496                           
  8497  01BE  3038               	movlw	(estado_executa_muda@tmp)&0ffh
  8498  01BF  120A  158A  26D6   	fcall	_sprintf
              120A  118A         
  8499                           	line	417
  8500                           	
  8501  01C4                     i1l4329:	
  8502                           ;estados.c: 417: lcd_puts(tmp);
  8503  01C4  3038               	movlw	(estado_executa_muda@tmp&0ffh)
  8504  01C5  00F4               	movwf	(?i1_lcd_puts)
  8505  01C6  3000               	movlw	(0x0/2)
  8506  01C7  00F5               	movwf	(?i1_lcd_puts+1)
  8507  01C8  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  8508                           	line	418
  8509                           	
  8510  01CD                     i1l4331:	
  8511                           ;estados.c: 418: lcd_goto(2, 0);
  8512  01CD  01F2               	clrf	(?i1_lcd_goto)
  8513  01CE  3002               	movlw	(02h)
  8514  01CF  160A  118A  2651   	fcall	i1_lcd_goto
              120A  118A         
  8515                           	line	419
  8516                           	
  8517  01D4                     i1l4333:	
  8518                           ;estados.c: 419: sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  8519  01D4  300A               	movlw	low(0Ah)
  8520  01D5  00F0               	movwf	(?___lwdiv)
  8521  01D6  3000               	movlw	high(0Ah)
  8522  01D7  00F1               	movwf	((?___lwdiv))+1
  8523  01D8  1283               	bcf	status, 5	;RP0=0, select bank0
  8524  01D9  1303               	bcf	status, 6	;RP1=0, select bank0
  8525  01DA  0853               	movf	(estado_executa_muda@menor+1),w
  8526  01DB  01F3               	clrf	1+(?___lwdiv)+02h
  8527  01DC  07F3               	addwf	1+(?___lwdiv)+02h
  8528  01DD  0852               	movf	(estado_executa_muda@menor),w
  8529  01DE  01F2               	clrf	0+(?___lwdiv)+02h
  8530  01DF  07F2               	addwf	0+(?___lwdiv)+02h
  8531                           
  8532  01E0  120A  158A  2085   	fcall	___lwdiv
              120A  118A         
  8533  01E5  0871               	movf	(1+(?___lwdiv)),w
  8534  01E6  1283               	bcf	status, 5	;RP0=0, select bank0
  8535  01E7  1303               	bcf	status, 6	;RP1=0, select bank0
  8536  01E8  01D5               	clrf	(_estado_executa_muda$1447+1)
  8537  01E9  07D5               	addwf	(_estado_executa_muda$1447+1)
  8538  01EA  0870               	movf	(0+(?___lwdiv)),w
  8539  01EB  01D4               	clrf	(_estado_executa_muda$1447)
  8540  01EC  07D4               	addwf	(_estado_executa_muda$1447)
  8541                           
  8542                           	
  8543  01ED                     i1l4335:	
  8544                           ;estados.c: 419: sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  8545  01ED  300A               	movlw	low(0Ah)
  8546  01EE  00F8               	movwf	(?___lwmod)
  8547  01EF  3000               	movlw	high(0Ah)
  8548  01F0  00F9               	movwf	((?___lwmod))+1
  8549  01F1  0853               	movf	(estado_executa_muda@menor+1),w
  8550  01F2  01FB               	clrf	1+(?___lwmod)+02h
  8551  01F3  07FB               	addwf	1+(?___lwmod)+02h
  8552  01F4  0852               	movf	(estado_executa_muda@menor),w
  8553  01F5  01FA               	clrf	0+(?___lwmod)+02h
  8554  01F6  07FA               	addwf	0+(?___lwmod)+02h
  8555                           
  8556  01F7  120A  158A  2042   	fcall	___lwmod
              120A  118A         
  8557  01FC  0879               	movf	(1+(?___lwmod)),w
  8558  01FD  1283               	bcf	status, 5	;RP0=0, select bank0
  8559  01FE  1303               	bcf	status, 6	;RP1=0, select bank0
  8560  01FF  01D7               	clrf	(_estado_executa_muda$1448+1)
  8561  0200  07D7               	addwf	(_estado_executa_muda$1448+1)
  8562  0201  0878               	movf	(0+(?___lwmod)),w
  8563  0202  01D6               	clrf	(_estado_executa_muda$1448)
  8564  0203  07D6               	addwf	(_estado_executa_muda$1448)
  8565                           
  8566                           	
  8567  0204                     i1l4337:	
  8568                           ;estados.c: 419: sprintf(tmp, "Min=%d.%d", menor / 10, menor % 10);
  8569  0204  3016               	movlw	low(STR_45|8000h)
  8570  0205  00A0               	movwf	(?_sprintf)
  8571  0206  3086               	movlw	high(STR_45|8000h)
  8572  0207  00A1               	movwf	((?_sprintf))+1
  8573  0208  0855               	movf	(_estado_executa_muda$1447+1),w
  8574  0209  01A3               	clrf	1+(?_sprintf)+02h
  8575  020A  07A3               	addwf	1+(?_sprintf)+02h
  8576  020B  0854               	movf	(_estado_executa_muda$1447),w
  8577  020C  01A2               	clrf	0+(?_sprintf)+02h
  8578  020D  07A2               	addwf	0+(?_sprintf)+02h
  8579                           
  8580  020E  0857               	movf	(_estado_executa_muda$1448+1),w
  8581  020F  01A5               	clrf	1+(?_sprintf)+04h
  8582  0210  07A5               	addwf	1+(?_sprintf)+04h
  8583  0211  0856               	movf	(_estado_executa_muda$1448),w
  8584  0212  01A4               	clrf	0+(?_sprintf)+04h
  8585  0213  07A4               	addwf	0+(?_sprintf)+04h
  8586                           
  8587  0214  3038               	movlw	(estado_executa_muda@tmp)&0ffh
  8588  0215  120A  158A  26D6   	fcall	_sprintf
              120A  118A         
  8589                           	line	420
  8590                           	
  8591  021A                     i1l4339:	
  8592                           ;estados.c: 420: lcd_puts(tmp);
  8593  021A  3038               	movlw	(estado_executa_muda@tmp&0ffh)
  8594  021B  00F4               	movwf	(?i1_lcd_puts)
  8595  021C  3000               	movlw	(0x0/2)
  8596  021D  00F5               	movwf	(?i1_lcd_puts+1)
  8597  021E  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  8598  0223  2AF3               	goto	i1l4371
  8599                           	line	421
  8600                           	
  8601  0224                     i1l524:	
  8602                           	line	422
  8603                           ;estados.c: 421: }
  8604                           ;estados.c: 422: break;
  8605  0224  2AF3               	goto	i1l4371
  8606                           	line	423
  8607                           ;estados.c: 423: case EST_LIMPAR:
  8608                           	
  8609  0225                     i1l525:	
  8610                           	line	424
  8611                           	
  8612  0225                     i1l4341:	
  8613                           ;estados.c: 424: eeprom_write(0x08, 0);
  8614  0225  01F0               	clrf	(?i1_eeprom_write)
  8615  0226  3008               	movlw	(08h)
  8616  0227  160A  118A  2759   	fcall	i1_eeprom_write
              120A  118A         
  8617                           	line	425
  8618                           ;estados.c: 425: eeprom_write(0x00, 0);
  8619  022C  01F0               	clrf	(?i1_eeprom_write)
  8620  022D  3000               	movlw	(0)
  8621  022E  160A  118A  2759   	fcall	i1_eeprom_write
              120A  118A         
  8622                           	line	426
  8623                           ;estados.c: 426: eeprom_gravar_word(0x02, 0);
  8624  0233  3000               	movlw	low(0)
  8625  0234  00F3               	movwf	(?i1_eeprom_gravar_word)
  8626  0235  3000               	movlw	high(0)
  8627  0236  00F4               	movwf	((?i1_eeprom_gravar_word))+1
  8628  0237  3002               	movlw	(02h)
  8629  0238  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  118A         
  8630                           	line	427
  8631                           ;estados.c: 427: eeprom_gravar_word(0x04, 0xffff);
  8632  023D  30FF               	movlw	low(0FFFFh)
  8633  023E  00F3               	movwf	(?i1_eeprom_gravar_word)
  8634  023F  30FF               	movlw	high(0FFFFh)
  8635  0240  00F4               	movwf	((?i1_eeprom_gravar_word))+1
  8636  0241  3004               	movlw	(04h)
  8637  0242  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  118A         
  8638                           	line	428
  8639                           ;estados.c: 428: eeprom_gravar_word(0x06, 0);
  8640  0247  3000               	movlw	low(0)
  8641  0248  00F3               	movwf	(?i1_eeprom_gravar_word)
  8642  0249  3000               	movlw	high(0)
  8643  024A  00F4               	movwf	((?i1_eeprom_gravar_word))+1
  8644  024B  3006               	movlw	(06h)
  8645  024C  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  118A         
  8646                           	line	429
  8647                           	
  8648  0251                     i1l4343:	
  8649                           ;estados.c: 429: for (uint8_t i = 0; i < 100 * 2; i++) {
  8650  0251  1283               	bcf	status, 5	;RP0=0, select bank0
  8651  0252  1303               	bcf	status, 6	;RP1=0, select bank0
  8652  0253  01D8               	clrf	(estado_executa_muda@i_835)
  8653                           	
  8654  0254                     i1l4345:	
  8655  0254  30C8               	movlw	(0C8h)
  8656  0255  0258               	subwf	(estado_executa_muda@i_835),w
  8657  0256  1C03               	skipc
  8658  0257  2A59               	goto	u340_21
  8659  0258  2A5A               	goto	u340_20
  8660  0259                     u340_21:
  8661  0259  2A5C               	goto	i1l4349
  8662  025A                     u340_20:
  8663  025A  2A71               	goto	i1l4355
  8664                           	
  8665  025B                     i1l4347:	
  8666  025B  2A71               	goto	i1l4355
  8667                           	
  8668  025C                     i1l526:	
  8669                           	line	430
  8670                           	
  8671  025C                     i1l4349:	
  8672                           ;estados.c: 430: eeprom_write(i + 0x0e, 0);
  8673  025C  01F0               	clrf	(?i1_eeprom_write)
  8674  025D  0858               	movf	(estado_executa_muda@i_835),w
  8675  025E  3E0E               	addlw	0Eh
  8676  025F  160A  118A  2759   	fcall	i1_eeprom_write
              120A  118A         
  8677                           	line	429
  8678                           	
  8679  0264                     i1l4351:	
  8680  0264  3001               	movlw	(01h)
  8681  0265  1283               	bcf	status, 5	;RP0=0, select bank0
  8682  0266  1303               	bcf	status, 6	;RP1=0, select bank0
  8683  0267  00B4               	movwf	(??_estado_executa_muda+0)+0
  8684  0268  0834               	movf	(??_estado_executa_muda+0)+0,w
  8685  0269  07D8               	addwf	(estado_executa_muda@i_835),f
  8686                           	
  8687  026A                     i1l4353:	
  8688  026A  30C8               	movlw	(0C8h)
  8689  026B  0258               	subwf	(estado_executa_muda@i_835),w
  8690  026C  1C03               	skipc
  8691  026D  2A6F               	goto	u341_21
  8692  026E  2A70               	goto	u341_20
  8693  026F                     u341_21:
  8694  026F  2A5C               	goto	i1l4349
  8695  0270                     u341_20:
  8696  0270  2A71               	goto	i1l4355
  8697                           	
  8698  0271                     i1l527:	
  8699                           	line	432
  8700                           	
  8701  0271                     i1l4355:	
  8702                           ;estados.c: 431: }
  8703                           ;estados.c: 432: lcd_clear();
  8704  0271  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  8705                           	line	433
  8706                           	
  8707  0276                     i1l4357:	
  8708                           ;estados.c: 433: lcd_puts("Tudo Limpo");
  8709  0276  30DF               	movlw	low(STR_46|8000h)
  8710  0277  00F4               	movwf	(?i1_lcd_puts)
  8711  0278  3085               	movlw	high(STR_46|8000h)
  8712  0279  00F5               	movwf	((?i1_lcd_puts))+1
  8713  027A  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  8714                           	line	434
  8715                           ;estados.c: 434: break;
  8716  027F  2AF3               	goto	i1l4371
  8717                           	line	435
  8718                           ;estados.c: 435: case EST_MENU_CONF_TEMPO_AMOSTRA:
  8719                           	
  8720  0280                     i1l528:	
  8721                           	line	437
  8722                           	
  8723  0280                     i1l4359:	
  8724                           ;estados.c: 437: lcd_clear();
  8725  0280  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  8726                           	line	438
  8727                           	
  8728  0285                     i1l4361:	
  8729                           ;estados.c: 438: lcd_puts(menu_tempo_amostra[gl_item_menu_config_amostra].str_tempo_amos
                                 tra);
  8730  0285  1683               	bsf	status, 5	;RP0=1, select bank1
  8731  0286  1303               	bcf	status, 6	;RP1=0, select bank1
  8732  0287  084B               	movf	(_gl_item_menu_config_amostra)^080h,w
  8733  0288  1283               	bcf	status, 5	;RP0=0, select bank0
  8734  0289  1303               	bcf	status, 6	;RP1=0, select bank0
  8735  028A  00B4               	movwf	(??_estado_executa_muda+0)+0
  8736  028B  3001               	movlw	(02h)-1
  8737  028C                     u342_25:
  8738  028C  1003               	clrc
  8739  028D  0DB4               	rlf	(??_estado_executa_muda+0)+0,f
  8740  028E  3EFF               	addlw	-1
  8741  028F  1D03               	skipz
  8742  0290  2A8C               	goto	u342_25
  8743  0291  1003               	clrc
  8744  0292  0D34               	rlf	(??_estado_executa_muda+0)+0,w
  8745  0293  3E12               	addlw	low(_menu_tempo_amostra|8000h)
  8746  0294  0084               	movwf	fsr0
  8747  0295  3085               	movlw	high(_menu_tempo_amostra|8000h)
  8748  0296  1803               	skipnc
  8749  0297  3E01               	addlw	1
  8750  0298  00FF               	movwf	btemp+1
  8751  0299  120A  118A  2500   	fcall	stringtab
              120A  118A         
  8752  029E  00F4               	movwf	(?i1_lcd_puts)
  8753  029F  120A  118A  2500   	fcall	stringtab
              120A  118A         
  8754  02A4  00F5               	movwf	(?i1_lcd_puts+1)
  8755  02A5  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  8756                           	line	439
  8757                           ;estados.c: 439: break;
  8758  02AA  2AF3               	goto	i1l4371
  8759                           	line	448
  8760                           ;estados.c: 448: case EST_MENU_CONF_QUANT_SENSORES:
  8761                           	
  8762  02AB                     i1l529:	
  8763                           	line	449
  8764                           	
  8765  02AB                     i1l4363:	
  8766                           ;estados.c: 449: lcd_clear();
  8767  02AB  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  8768                           	line	450
  8769                           	
  8770  02B0                     i1l4365:	
  8771                           ;estados.c: 450: lcd_puts(menu_quant_sensores[gl_item_menu_config_sensores].str_quant_se
                                 nsores);
  8772  02B0  3003               	movlw	(03h)
  8773  02B1  1283               	bcf	status, 5	;RP0=0, select bank0
  8774  02B2  1303               	bcf	status, 6	;RP1=0, select bank0
  8775  02B3  00B4               	movwf	(??_estado_executa_muda+0)+0
  8776  02B4  0834               	movf	(??_estado_executa_muda+0)+0,w
  8777  02B5  00F0               	movwf	(?___bmul)
  8778  02B6  086E               	movf	(_gl_item_menu_config_sensores),w
  8779  02B7  160A  118A  2569   	fcall	___bmul
              120A  118A         
  8780  02BC  3E2E               	addlw	low(_menu_quant_sensores|8000h)
  8781  02BD  0084               	movwf	fsr0
  8782  02BE  3085               	movlw	high(_menu_quant_sensores|8000h)
  8783  02BF  1803               	skipnc
  8784  02C0  3E01               	addlw	1
  8785  02C1  1283               	bcf	status, 5	;RP0=0, select bank0
  8786  02C2  1303               	bcf	status, 6	;RP1=0, select bank0
  8787  02C3  00FF               	movwf	btemp+1
  8788  02C4  120A  118A  2500   	fcall	stringtab
              120A  118A         
  8789  02C9  00F4               	movwf	(?i1_lcd_puts)
  8790  02CA  120A  118A  2500   	fcall	stringtab
              120A  118A         
  8791  02CF  00F5               	movwf	(?i1_lcd_puts+1)
  8792  02D0  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  8793                           	line	451
  8794                           ;estados.c: 451: break;
  8795  02D5  2AF3               	goto	i1l4371
  8796                           	line	452
  8797                           	
  8798  02D6                     i1l4367:	
  8799                           ;estados.c: 452: }
  8800  02D6  2AF3               	goto	i1l4371
  8801                           	line	368
  8802                           	
  8803  02D7                     i1l510:	
  8804                           	
  8805  02D7                     i1l4369:	
  8806  02D7  1283               	bcf	status, 5	;RP0=0, select bank0
  8807  02D8  1303               	bcf	status, 6	;RP1=0, select bank0
  8808  02D9  084D               	movf	(estado_executa_muda@novo_estado),w
  8809                           	; Switch size 1, requested type "space"
  8810                           ; Number of cases is 8, Range of values is 1 to 8
  8811                           ; switch strategies available:
  8812                           ; Name         Instructions Cycles
  8813                           ; simple_byte           25    13 (average)
  8814                           ; direct_byte           35    11 (fixed)
  8815                           ; jumptable            263     9 (fixed)
  8816                           ;	Chosen strategy is simple_byte
  8817                           
  8818                           	opt asmopt_off
  8819  02DA  3A01               	xorlw	1^0	; case 1
  8820  02DB  1903               	skipnz
  8821  02DC  282F               	goto	i1l4277
  8822  02DD  3A03               	xorlw	2^1	; case 2
  8823  02DE  1903               	skipnz
  8824  02DF  2847               	goto	i1l513
  8825  02E0  3A01               	xorlw	3^2	; case 3
  8826  02E1  1903               	skipnz
  8827  02E2  2849               	goto	i1l514
  8828  02E3  3A07               	xorlw	4^3	; case 4
  8829  02E4  1903               	skipnz
  8830  02E5  284B               	goto	i1l4281
  8831  02E6  3A01               	xorlw	5^4	; case 5
  8832  02E7  1903               	skipnz
  8833  02E8  2942               	goto	i1l4313
  8834  02E9  3A03               	xorlw	6^5	; case 6
  8835  02EA  1903               	skipnz
  8836  02EB  2A25               	goto	i1l4341
  8837  02EC  3A01               	xorlw	7^6	; case 7
  8838  02ED  1903               	skipnz
  8839  02EE  2A80               	goto	i1l4359
  8840  02EF  3A0F               	xorlw	8^7	; case 8
  8841  02F0  1903               	skipnz
  8842  02F1  2AAB               	goto	i1l4363
  8843  02F2  2AF3               	goto	i1l4371
  8844                           	opt asmopt_on
  8845                           
  8846                           	line	452
  8847                           	
  8848  02F3                     i1l512:	
  8849                           	line	453
  8850                           	
  8851  02F3                     i1l4371:	
  8852                           ;estados.c: 453: gl_estado = novo_estado;
  8853  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  8854  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  8855  02F5  084D               	movf	(estado_executa_muda@novo_estado),w
  8856  02F6  00B4               	movwf	(??_estado_executa_muda+0)+0
  8857  02F7  0834               	movf	(??_estado_executa_muda+0)+0,w
  8858  02F8  1683               	bsf	status, 5	;RP0=1, select bank1
  8859  02F9  1303               	bcf	status, 6	;RP1=0, select bank1
  8860  02FA  00CF               	movwf	(_gl_estado)^080h
  8861                           	line	454
  8862                           	
  8863  02FB                     i1l530:	
  8864  02FB  0008               	return
  8865                           	opt stack 0
  8866                           GLOBAL	__end_of_estado_executa_muda
  8867  02FC                     	__end_of_estado_executa_muda:
  8868                           	signat	_estado_executa_muda,4216
  8869                           	global	_adcon_captura_grava
  8870                           
  8871 ;; *************** function _adcon_captura_grava *****************
  8872 ;; Defined at:
  8873 ;;		line 18 in file "adcon.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;		None
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  i               1   52[BANK0 ] unsigned char 
  8878 ;;  x               2   46[BANK0 ] unsigned int 
  8879 ;;  i               1   51[BANK0 ] unsigned char 
  8880 ;;  t_int           2   53[BANK0 ] unsigned int 
  8881 ;;  menor           2   44[BANK0 ] unsigned int 
  8882 ;;  maior           2   42[BANK0 ] unsigned int 
  8883 ;;  qtd_val         1   50[BANK0 ] unsigned char 
  8884 ;;  qtd_sens        1   49[BANK0 ] unsigned char 
  8885 ;;  posicao         1   48[BANK0 ] unsigned char 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;		None               void
  8888 ;; Registers used:
  8889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8895 ;;      Params:         0       0       0       0       0
  8896 ;;      Locals:         0      13       0       0       0
  8897 ;;      Temps:          0       2       0       0       0
  8898 ;;      Totals:         0      15       0       0       0
  8899 ;;Total ram usage:       15 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    3
  8902 ;; This function calls:
  8903 ;;		_lcd_clear
  8904 ;;		_eeprom_ler_word
  8905 ;;		_adcon_ler_canal
  8906 ;;		_adcon_mostra
  8907 ;;		___bmul
  8908 ;;		i1_lcd_puts
  8909 ;;		i1_eeprom_gravar_word
  8910 ;;		i1_eeprom_read
  8911 ;;		i1_eeprom_write
  8912 ;; This function is called by:
  8913 ;;		_handler
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           psect	text24,local,class=CODE,delta=2,merge=1
  8917                           global __ptext24
  8918  0696                     __ptext24:	;psect for function _adcon_captura_grava
  8919                           psect	text24
  8920                           	file	"adcon.c"
  8921                           	line	18
  8922                           	global	__size_of_adcon_captura_grava
  8923  0130                     	__size_of_adcon_captura_grava	equ	__end_of_adcon_captura_grava-_adcon_captura_grava
  8924                           	
  8925  0696                     _adcon_captura_grava:	
  8926                           ;incstack = 0
  8927                           	opt	stack 1
  8928                           ; Regs used in _adcon_captura_grava: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  8929                           	line	29
  8930                           	
  8931  0696                     i1l4373:	
  8932                           ;adcon.c: 19: uint16_t t_int;
  8933                           ;adcon.c: 20: uint16_t maior, menor;
  8934                           ;adcon.c: 21: uint8_t qtd_val, qtd_sens;
  8935                           ;adcon.c: 22: uint8_t posicao;
  8936                           ;adcon.c: 29: posicao = eeprom_read(0x00);
  8937  0696  3000               	movlw	(0)
  8938  0697  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  118A         
  8939  069C  1283               	bcf	status, 5	;RP0=0, select bank0
  8940  069D  1303               	bcf	status, 6	;RP1=0, select bank0
  8941  069E  00C8               	movwf	(??_adcon_captura_grava+0)+0
  8942  069F  0848               	movf	(??_adcon_captura_grava+0)+0,w
  8943  06A0  00D0               	movwf	(adcon_captura_grava@posicao)
  8944                           	line	30
  8945                           	
  8946  06A1                     i1l4375:	
  8947                           ;adcon.c: 30: qtd_sens = menu_quant_sensores[posicao].i_quant_sensores;
  8948  06A1  3003               	movlw	(03h)
  8949  06A2  00C8               	movwf	(??_adcon_captura_grava+0)+0
  8950  06A3  0848               	movf	(??_adcon_captura_grava+0)+0,w
  8951  06A4  00F0               	movwf	(?___bmul)
  8952  06A5  0850               	movf	(adcon_captura_grava@posicao),w
  8953  06A6  160A  118A  2569   	fcall	___bmul
              120A  118A         
  8954  06AB  3E02               	addlw	02h
  8955  06AC  3E2E               	addlw	low(_menu_quant_sensores|8000h)
  8956  06AD  0084               	movwf	fsr0
  8957  06AE  3085               	movlw	high(_menu_quant_sensores|8000h)
  8958  06AF  1803               	skipnc
  8959  06B0  3E01               	addlw	1
  8960  06B1  1283               	bcf	status, 5	;RP0=0, select bank0
  8961  06B2  1303               	bcf	status, 6	;RP1=0, select bank0
  8962  06B3  00FF               	movwf	btemp+1
  8963  06B4  120A  118A  2500   	fcall	stringtab
              120A  118A         
  8964  06B9  00C9               	movwf	(??_adcon_captura_grava+1)+0
  8965  06BA  0849               	movf	(??_adcon_captura_grava+1)+0,w
  8966  06BB  00D1               	movwf	(adcon_captura_grava@qtd_sens)
  8967                           	line	32
  8968                           	
  8969  06BC                     i1l4377:	
  8970                           ;adcon.c: 32: qtd_val = eeprom_read(0x08);
  8971  06BC  3008               	movlw	(08h)
  8972  06BD  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  118A         
  8973  06C2  1283               	bcf	status, 5	;RP0=0, select bank0
  8974  06C3  1303               	bcf	status, 6	;RP1=0, select bank0
  8975  06C4  00C8               	movwf	(??_adcon_captura_grava+0)+0
  8976  06C5  0848               	movf	(??_adcon_captura_grava+0)+0,w
  8977  06C6  00D2               	movwf	(adcon_captura_grava@qtd_val)
  8978                           	line	33
  8979                           	
  8980  06C7                     i1l4379:	
  8981                           ;adcon.c: 33: maior = eeprom_ler_word(0x06);
  8982  06C7  3006               	movlw	(06h)
  8983  06C8  160A  118A  2678   	fcall	_eeprom_ler_word
              120A  118A         
  8984  06CD  0873               	movf	(1+(?_eeprom_ler_word)),w
  8985  06CE  1283               	bcf	status, 5	;RP0=0, select bank0
  8986  06CF  1303               	bcf	status, 6	;RP1=0, select bank0
  8987  06D0  01CB               	clrf	(adcon_captura_grava@maior+1)
  8988  06D1  07CB               	addwf	(adcon_captura_grava@maior+1)
  8989  06D2  0872               	movf	(0+(?_eeprom_ler_word)),w
  8990  06D3  01CA               	clrf	(adcon_captura_grava@maior)
  8991  06D4  07CA               	addwf	(adcon_captura_grava@maior)
  8992                           
  8993                           	line	34
  8994                           	
  8995  06D5                     i1l4381:	
  8996                           ;adcon.c: 34: menor = eeprom_ler_word(0x04);
  8997  06D5  3004               	movlw	(04h)
  8998  06D6  160A  118A  2678   	fcall	_eeprom_ler_word
              120A  118A         
  8999  06DB  0873               	movf	(1+(?_eeprom_ler_word)),w
  9000  06DC  1283               	bcf	status, 5	;RP0=0, select bank0
  9001  06DD  1303               	bcf	status, 6	;RP1=0, select bank0
  9002  06DE  01CD               	clrf	(adcon_captura_grava@menor+1)
  9003  06DF  07CD               	addwf	(adcon_captura_grava@menor+1)
  9004  06E0  0872               	movf	(0+(?_eeprom_ler_word)),w
  9005  06E1  01CC               	clrf	(adcon_captura_grava@menor)
  9006  06E2  07CC               	addwf	(adcon_captura_grava@menor)
  9007                           
  9008                           	line	39
  9009                           	
  9010  06E3                     i1l4383:	
  9011                           ;adcon.c: 39: lcd_clear();
  9012  06E3  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  9013                           	line	41
  9014                           	
  9015  06E8                     i1l4385:	
  9016                           ;adcon.c: 41: if (gl_estado == EST_CAPTURA_E_MOSTRA) {
  9017  06E8  1683               	bsf	status, 5	;RP0=1, select bank1
  9018  06E9  1303               	bcf	status, 6	;RP1=0, select bank1
  9019  06EA  084F               	movf	(_gl_estado)^080h,w
  9020  06EB  3A02               	xorlw	02h
  9021  06EC  1D03               	skipz
  9022  06ED  2EEF               	goto	u343_21
  9023  06EE  2EF0               	goto	u343_20
  9024  06EF                     u343_21:
  9025  06EF  2F20               	goto	i1l4395
  9026  06F0                     u343_20:
  9027                           	line	42
  9028                           	
  9029  06F0                     i1l4387:	
  9030                           ;adcon.c: 42: for (uint8_t i = 0; i < qtd_sens; i++) {
  9031  06F0  1283               	bcf	status, 5	;RP0=0, select bank0
  9032  06F1  1303               	bcf	status, 6	;RP1=0, select bank0
  9033  06F2  01D3               	clrf	(adcon_captura_grava@i)
  9034  06F3  2F18               	goto	i1l4393
  9035                           	
  9036  06F4                     i1l239:	
  9037                           	line	43
  9038                           	
  9039  06F4                     i1l4389:	
  9040                           ;adcon.c: 43: uint16_t x = adcon_ler_canal(i);
  9041  06F4  0853               	movf	(adcon_captura_grava@i),w
  9042  06F5  120A  158A  245D   	fcall	_adcon_ler_canal
              120A  118A         
  9043  06FA  0871               	movf	(1+(?_adcon_ler_canal)),w
  9044  06FB  1283               	bcf	status, 5	;RP0=0, select bank0
  9045  06FC  1303               	bcf	status, 6	;RP1=0, select bank0
  9046  06FD  01CF               	clrf	(adcon_captura_grava@x+1)
  9047  06FE  07CF               	addwf	(adcon_captura_grava@x+1)
  9048  06FF  0870               	movf	(0+(?_adcon_ler_canal)),w
  9049  0700  01CE               	clrf	(adcon_captura_grava@x)
  9050  0701  07CE               	addwf	(adcon_captura_grava@x)
  9051                           
  9052                           	line	44
  9053                           ;adcon.c: 44: adcon_mostra(x, i);
  9054  0702  084F               	movf	(adcon_captura_grava@x+1),w
  9055  0703  01B5               	clrf	(?_adcon_mostra+1)
  9056  0704  07B5               	addwf	(?_adcon_mostra+1)
  9057  0705  084E               	movf	(adcon_captura_grava@x),w
  9058  0706  01B4               	clrf	(?_adcon_mostra)
  9059  0707  07B4               	addwf	(?_adcon_mostra)
  9060                           
  9061  0708  0853               	movf	(adcon_captura_grava@i),w
  9062  0709  00C8               	movwf	(??_adcon_captura_grava+0)+0
  9063  070A  0848               	movf	(??_adcon_captura_grava+0)+0,w
  9064  070B  00B6               	movwf	0+(?_adcon_mostra)+02h
  9065  070C  120A  158A  24E4   	fcall	_adcon_mostra
              120A  118A         
  9066                           	line	42
  9067                           	
  9068  0711                     i1l4391:	
  9069  0711  3001               	movlw	(01h)
  9070  0712  1283               	bcf	status, 5	;RP0=0, select bank0
  9071  0713  1303               	bcf	status, 6	;RP1=0, select bank0
  9072  0714  00C8               	movwf	(??_adcon_captura_grava+0)+0
  9073  0715  0848               	movf	(??_adcon_captura_grava+0)+0,w
  9074  0716  07D3               	addwf	(adcon_captura_grava@i),f
  9075  0717  2F18               	goto	i1l4393
  9076                           	
  9077  0718                     i1l238:	
  9078                           	
  9079  0718                     i1l4393:	
  9080  0718  0851               	movf	(adcon_captura_grava@qtd_sens),w
  9081  0719  0253               	subwf	(adcon_captura_grava@i),w
  9082  071A  1C03               	skipc
  9083  071B  2F1D               	goto	u344_21
  9084  071C  2F1E               	goto	u344_20
  9085  071D                     u344_21:
  9086  071D  2EF4               	goto	i1l4389
  9087  071E                     u344_20:
  9088  071E  2FC5               	goto	i1l250
  9089                           	
  9090  071F                     i1l240:	
  9091                           	line	47
  9092                           ;adcon.c: 46: }
  9093                           ;adcon.c: 47: } else {
  9094  071F  2FC5               	goto	i1l250
  9095                           	
  9096  0720                     i1l237:	
  9097                           	line	48
  9098                           	
  9099  0720                     i1l4395:	
  9100                           ;adcon.c: 48: if (gl_estado == EST_CAPTURA_E_GRAVA) {
  9101  0720  1683               	bsf	status, 5	;RP0=1, select bank1
  9102  0721  1303               	bcf	status, 6	;RP1=0, select bank1
  9103  0722  084F               	movf	(_gl_estado)^080h,w
  9104  0723  3A03               	xorlw	03h
  9105  0724  1D03               	skipz
  9106  0725  2F27               	goto	u345_21
  9107  0726  2F28               	goto	u345_20
  9108  0727                     u345_21:
  9109  0727  2FC5               	goto	i1l250
  9110  0728                     u345_20:
  9111                           	line	49
  9112                           	
  9113  0728                     i1l4397:	
  9114                           ;adcon.c: 49: for (uint8_t i = 0; i < qtd_sens; i++) {
  9115  0728  1283               	bcf	status, 5	;RP0=0, select bank0
  9116  0729  1303               	bcf	status, 6	;RP1=0, select bank0
  9117  072A  01D4               	clrf	(adcon_captura_grava@i_536)
  9118  072B  2FBC               	goto	i1l4427
  9119                           	
  9120  072C                     i1l244:	
  9121                           	line	51
  9122                           	
  9123  072C                     i1l4399:	
  9124                           ;adcon.c: 51: if (qtd_val >= 100) {
  9125  072C  3064               	movlw	(064h)
  9126  072D  0252               	subwf	(adcon_captura_grava@qtd_val),w
  9127  072E  1C03               	skipc
  9128  072F  2F31               	goto	u346_21
  9129  0730  2F32               	goto	u346_20
  9130  0731                     u346_21:
  9131  0731  2F43               	goto	i1l4409
  9132  0732                     u346_20:
  9133                           	line	52
  9134                           	
  9135  0732                     i1l4401:	
  9136                           ;adcon.c: 52: INTCONbits.T0IE = 0;
  9137  0732  128B               	bcf	(11),5	;volatile
  9138                           	line	53
  9139                           	
  9140  0733                     i1l4403:	
  9141                           ;adcon.c: 53: lcd_clear();
  9142  0733  160A  118A  2582   	fcall	_lcd_clear
              120A  118A         
  9143                           	line	54
  9144                           	
  9145  0738                     i1l4405:	
  9146                           ;adcon.c: 54: lcd_puts("Memoria Cheia");
  9147  0738  30B7               	movlw	low(STR_15|8000h)
  9148  0739  00F4               	movwf	(?i1_lcd_puts)
  9149  073A  3085               	movlw	high(STR_15|8000h)
  9150  073B  00F5               	movwf	((?i1_lcd_puts))+1
  9151  073C  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  118A         
  9152                           	line	55
  9153                           ;adcon.c: 55: break;
  9154  0741  2FC5               	goto	i1l250
  9155                           	line	56
  9156                           	
  9157  0742                     i1l4407:	
  9158                           ;adcon.c: 56: }
  9159  0742  2FB5               	goto	i1l4425
  9160                           	line	57
  9161                           	
  9162  0743                     i1l245:	
  9163                           	line	58
  9164                           	
  9165  0743                     i1l4409:	
  9166                           ;adcon.c: 57: else {
  9167                           ;adcon.c: 58: t_int = adcon_ler_canal(i);
  9168  0743  1283               	bcf	status, 5	;RP0=0, select bank0
  9169  0744  1303               	bcf	status, 6	;RP1=0, select bank0
  9170  0745  0854               	movf	(adcon_captura_grava@i_536),w
  9171  0746  120A  158A  245D   	fcall	_adcon_ler_canal
              120A  118A         
  9172  074B  0871               	movf	(1+(?_adcon_ler_canal)),w
  9173  074C  1283               	bcf	status, 5	;RP0=0, select bank0
  9174  074D  1303               	bcf	status, 6	;RP1=0, select bank0
  9175  074E  01D6               	clrf	(adcon_captura_grava@t_int+1)
  9176  074F  07D6               	addwf	(adcon_captura_grava@t_int+1)
  9177  0750  0870               	movf	(0+(?_adcon_ler_canal)),w
  9178  0751  01D5               	clrf	(adcon_captura_grava@t_int)
  9179  0752  07D5               	addwf	(adcon_captura_grava@t_int)
  9180                           
  9181                           	line	59
  9182                           	
  9183  0753                     i1l4411:	
  9184                           ;adcon.c: 59: if (t_int < menor) {
  9185  0753  084D               	movf	(adcon_captura_grava@menor+1),w
  9186  0754  0256               	subwf	(adcon_captura_grava@t_int+1),w
  9187  0755  1D03               	skipz
  9188  0756  2F59               	goto	u347_25
  9189  0757  084C               	movf	(adcon_captura_grava@menor),w
  9190  0758  0255               	subwf	(adcon_captura_grava@t_int),w
  9191  0759                     u347_25:
  9192  0759  1803               	skipnc
  9193  075A  2F5C               	goto	u347_21
  9194  075B  2F5D               	goto	u347_20
  9195  075C                     u347_21:
  9196  075C  2F6A               	goto	i1l4415
  9197  075D                     u347_20:
  9198                           	line	60
  9199                           	
  9200  075D                     i1l4413:	
  9201                           ;adcon.c: 60: eeprom_gravar_word(0x04, t_int);
  9202  075D  0856               	movf	(adcon_captura_grava@t_int+1),w
  9203  075E  01F4               	clrf	(?i1_eeprom_gravar_word+1)
  9204  075F  07F4               	addwf	(?i1_eeprom_gravar_word+1)
  9205  0760  0855               	movf	(adcon_captura_grava@t_int),w
  9206  0761  01F3               	clrf	(?i1_eeprom_gravar_word)
  9207  0762  07F3               	addwf	(?i1_eeprom_gravar_word)
  9208                           
  9209  0763  3004               	movlw	(04h)
  9210  0764  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  118A         
  9211  0769  2F6A               	goto	i1l4415
  9212                           	line	61
  9213                           	
  9214  076A                     i1l248:	
  9215                           	line	62
  9216                           	
  9217  076A                     i1l4415:	
  9218                           ;adcon.c: 61: }
  9219                           ;adcon.c: 62: if (t_int > maior) {
  9220  076A  1283               	bcf	status, 5	;RP0=0, select bank0
  9221  076B  1303               	bcf	status, 6	;RP1=0, select bank0
  9222  076C  0856               	movf	(adcon_captura_grava@t_int+1),w
  9223  076D  024B               	subwf	(adcon_captura_grava@maior+1),w
  9224  076E  1D03               	skipz
  9225  076F  2F72               	goto	u348_25
  9226  0770  0855               	movf	(adcon_captura_grava@t_int),w
  9227  0771  024A               	subwf	(adcon_captura_grava@maior),w
  9228  0772                     u348_25:
  9229  0772  1803               	skipnc
  9230  0773  2F75               	goto	u348_21
  9231  0774  2F76               	goto	u348_20
  9232  0775                     u348_21:
  9233  0775  2F82               	goto	i1l249
  9234  0776                     u348_20:
  9235                           	line	63
  9236                           	
  9237  0776                     i1l4417:	
  9238                           ;adcon.c: 63: eeprom_gravar_word(0x06, t_int);
  9239  0776  0856               	movf	(adcon_captura_grava@t_int+1),w
  9240  0777  01F4               	clrf	(?i1_eeprom_gravar_word+1)
  9241  0778  07F4               	addwf	(?i1_eeprom_gravar_word+1)
  9242  0779  0855               	movf	(adcon_captura_grava@t_int),w
  9243  077A  01F3               	clrf	(?i1_eeprom_gravar_word)
  9244  077B  07F3               	addwf	(?i1_eeprom_gravar_word)
  9245                           
  9246  077C  3006               	movlw	(06h)
  9247  077D  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  118A         
  9248                           	line	64
  9249                           	
  9250  0782                     i1l249:	
  9251                           	line	65
  9252                           ;adcon.c: 64: }
  9253                           ;adcon.c: 65: eeprom_gravar_word(0x0e + (qtd_val * 2), t_int);
  9254  0782  1283               	bcf	status, 5	;RP0=0, select bank0
  9255  0783  1303               	bcf	status, 6	;RP1=0, select bank0
  9256  0784  0856               	movf	(adcon_captura_grava@t_int+1),w
  9257  0785  01F4               	clrf	(?i1_eeprom_gravar_word+1)
  9258  0786  07F4               	addwf	(?i1_eeprom_gravar_word+1)
  9259  0787  0855               	movf	(adcon_captura_grava@t_int),w
  9260  0788  01F3               	clrf	(?i1_eeprom_gravar_word)
  9261  0789  07F3               	addwf	(?i1_eeprom_gravar_word)
  9262                           
  9263  078A  0852               	movf	(adcon_captura_grava@qtd_val),w
  9264  078B  00C8               	movwf	(??_adcon_captura_grava+0)+0
  9265  078C  0748               	addwf	(??_adcon_captura_grava+0)+0,w
  9266  078D  3E0E               	addlw	0Eh
  9267  078E  160A  118A  2553   	fcall	i1_eeprom_gravar_word
              120A  118A         
  9268                           	line	67
  9269                           	
  9270  0793                     i1l4419:	
  9271                           ;adcon.c: 67: qtd_val++;
  9272  0793  3001               	movlw	(01h)
  9273  0794  1283               	bcf	status, 5	;RP0=0, select bank0
  9274  0795  1303               	bcf	status, 6	;RP1=0, select bank0
  9275  0796  00C8               	movwf	(??_adcon_captura_grava+0)+0
  9276  0797  0848               	movf	(??_adcon_captura_grava+0)+0,w
  9277  0798  07D2               	addwf	(adcon_captura_grava@qtd_val),f
  9278                           	line	68
  9279                           	
  9280  0799                     i1l4421:	
  9281                           ;adcon.c: 68: eeprom_write(0x08, qtd_val);
  9282  0799  0852               	movf	(adcon_captura_grava@qtd_val),w
  9283  079A  00C8               	movwf	(??_adcon_captura_grava+0)+0
  9284  079B  0848               	movf	(??_adcon_captura_grava+0)+0,w
  9285  079C  00F0               	movwf	(?i1_eeprom_write)
  9286  079D  3008               	movlw	(08h)
  9287  079E  160A  118A  2759   	fcall	i1_eeprom_write
              120A  118A         
  9288                           	line	70
  9289                           	
  9290  07A3                     i1l4423:	
  9291                           ;adcon.c: 70: adcon_mostra(t_int, i);
  9292  07A3  1283               	bcf	status, 5	;RP0=0, select bank0
  9293  07A4  1303               	bcf	status, 6	;RP1=0, select bank0
  9294  07A5  0856               	movf	(adcon_captura_grava@t_int+1),w
  9295  07A6  01B5               	clrf	(?_adcon_mostra+1)
  9296  07A7  07B5               	addwf	(?_adcon_mostra+1)
  9297  07A8  0855               	movf	(adcon_captura_grava@t_int),w
  9298  07A9  01B4               	clrf	(?_adcon_mostra)
  9299  07AA  07B4               	addwf	(?_adcon_mostra)
  9300                           
  9301  07AB  0854               	movf	(adcon_captura_grava@i_536),w
  9302  07AC  00C8               	movwf	(??_adcon_captura_grava+0)+0
  9303  07AD  0848               	movf	(??_adcon_captura_grava+0)+0,w
  9304  07AE  00B6               	movwf	0+(?_adcon_mostra)+02h
  9305  07AF  120A  158A  24E4   	fcall	_adcon_mostra
              120A  118A         
  9306  07B4  2FB5               	goto	i1l4425
  9307                           	line	73
  9308                           	
  9309  07B5                     i1l247:	
  9310                           	line	49
  9311                           	
  9312  07B5                     i1l4425:	
  9313  07B5  3001               	movlw	(01h)
  9314  07B6  1283               	bcf	status, 5	;RP0=0, select bank0
  9315  07B7  1303               	bcf	status, 6	;RP1=0, select bank0
  9316  07B8  00C8               	movwf	(??_adcon_captura_grava+0)+0
  9317  07B9  0848               	movf	(??_adcon_captura_grava+0)+0,w
  9318  07BA  07D4               	addwf	(adcon_captura_grava@i_536),f
  9319  07BB  2FBC               	goto	i1l4427
  9320                           	
  9321  07BC                     i1l243:	
  9322                           	
  9323  07BC                     i1l4427:	
  9324  07BC  0851               	movf	(adcon_captura_grava@qtd_sens),w
  9325  07BD  0254               	subwf	(adcon_captura_grava@i_536),w
  9326  07BE  1C03               	skipc
  9327  07BF  2FC1               	goto	u349_21
  9328  07C0  2FC2               	goto	u349_20
  9329  07C1                     u349_21:
  9330  07C1  2F2C               	goto	i1l4399
  9331  07C2                     u349_20:
  9332  07C2  2FC5               	goto	i1l250
  9333                           	
  9334  07C3                     i1l246:	
  9335  07C3  2FC5               	goto	i1l250
  9336                           	line	75
  9337                           	
  9338  07C4                     i1l242:	
  9339  07C4  2FC5               	goto	i1l250
  9340                           	line	76
  9341                           	
  9342  07C5                     i1l241:	
  9343                           	line	77
  9344                           	
  9345  07C5                     i1l250:	
  9346  07C5  0008               	return
  9347                           	opt stack 0
  9348                           GLOBAL	__end_of_adcon_captura_grava
  9349  07C6                     	__end_of_adcon_captura_grava:
  9350                           	signat	_adcon_captura_grava,88
  9351                           	global	i1_eeprom_gravar_word
  9352                           
  9353 ;; *************** function i1_eeprom_gravar_word *****************
  9354 ;; Defined at:
  9355 ;;		line 23 in file "eeprom.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;  eeprom_grava    1    wreg     unsigned char 
  9358 ;;  eeprom_grava    2    3[COMMON] unsigned int 
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;  eeprom_grava    1    6[COMMON] unsigned char 
  9361 ;; Return value:  Size  Location     Type
  9362 ;;		None               void
  9363 ;; Registers used:
  9364 ;;		wreg, status,2, status,0, pclath, cstack
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9370 ;;      Params:         2       0       0       0       0
  9371 ;;      Locals:         1       0       0       0       0
  9372 ;;      Temps:          1       0       0       0       0
  9373 ;;      Totals:         4       0       0       0       0
  9374 ;;Total ram usage:        4 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; Hardware stack levels required when called:    1
  9377 ;; This function calls:
  9378 ;;		i1_eeprom_write
  9379 ;; This function is called by:
  9380 ;;		_adcon_captura_grava
  9381 ;;		_estado_menu_principal
  9382 ;;		_estado_menu_conf_tempo_amostra
  9383 ;;		_estado_executa_muda
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           psect	text25,local,class=CODE,delta=2,merge=1
  9387                           global __ptext25
  9388  1553                     __ptext25:	;psect for function i1_eeprom_gravar_word
  9389                           psect	text25
  9390                           	file	"eeprom.c"
  9391                           	line	23
  9392                           	global	__size_ofi1_eeprom_gravar_word
  9393  0016                     	__size_ofi1_eeprom_gravar_word	equ	__end_ofi1_eeprom_gravar_word-i1_eeprom_gravar_word
  9394                           	
  9395  1553                     i1_eeprom_gravar_word:	
  9396                           ;incstack = 0
  9397                           	opt	stack 0
  9398                           ; Regs used in i1_eeprom_gravar_word: [wreg+status,2+status,0+pclath+cstack]
  9399                           ;i1eeprom_gravar_word@end stored from wreg
  9400                           	line	30
  9401  1553  00F6               	movwf	(i1eeprom_gravar_word@end)
  9402                           	
  9403  1554                     i1l4163:	
  9404                           ;eeprom.c: 30: eeprom_write(end, dado >> 8);
  9405  1554  0874               	movf	(i1eeprom_gravar_word@dado+1),w
  9406  1555  00F5               	movwf	(??i1_eeprom_gravar_word+0)+0
  9407  1556  0875               	movf	(??i1_eeprom_gravar_word+0)+0,w
  9408  1557  00F0               	movwf	(?i1_eeprom_write)
  9409  1558  0876               	movf	(i1eeprom_gravar_word@end),w
  9410  1559  160A  118A  2759   	fcall	i1_eeprom_write
              160A  118A         
  9411                           	line	32
  9412                           ;eeprom.c: 32: eeprom_write(end + 1, dado);
  9413  155E  0873               	movf	(i1eeprom_gravar_word@dado),w
  9414  155F  00F5               	movwf	(??i1_eeprom_gravar_word+0)+0
  9415  1560  0875               	movf	(??i1_eeprom_gravar_word+0)+0,w
  9416  1561  00F0               	movwf	(?i1_eeprom_write)
  9417  1562  0A76               	incf	(i1eeprom_gravar_word@end),w
  9418  1563  160A  118A  2759   	fcall	i1_eeprom_write
              160A  118A         
  9419                           	line	34
  9420                           	
  9421  1568                     i1l276:	
  9422  1568  0008               	return
  9423                           	opt stack 0
  9424                           GLOBAL	__end_ofi1_eeprom_gravar_word
  9425  1569                     	__end_ofi1_eeprom_gravar_word:
  9426                           	signat	i1_eeprom_gravar_word,88
  9427                           	global	i1_eeprom_write
  9428                           
  9429 ;; *************** function i1_eeprom_write *****************
  9430 ;; Defined at:
  9431 ;;		line 7 in file "/opt/microchip/xc8/v1.20/sources/pic/eewrite.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  eeprom_write    1    wreg     unsigned char 
  9434 ;;  eeprom_write    1    0[COMMON] unsigned char 
  9435 ;; Auto vars:     Size  Location     Type
  9436 ;;  eeprom_write    1    2[COMMON] unsigned char 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;		None               void
  9439 ;; Registers used:
  9440 ;;		wreg, status,2, status,0
  9441 ;; Tracked objects:
  9442 ;;		On entry : 0/0
  9443 ;;		On exit  : 0/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9446 ;;      Params:         1       0       0       0       0
  9447 ;;      Locals:         1       0       0       0       0
  9448 ;;      Temps:          1       0       0       0       0
  9449 ;;      Totals:         3       0       0       0       0
  9450 ;;Total ram usage:        3 bytes
  9451 ;; Hardware stack levels used:    1
  9452 ;; This function calls:
  9453 ;;		Nothing
  9454 ;; This function is called by:
  9455 ;;		_adcon_captura_grava
  9456 ;;		_estado_menu_principal
  9457 ;;		_estado_menu_conf_quant_sensores
  9458 ;;		_estado_executa_muda
  9459 ;;		i1_eeprom_gravar_word
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           psect	text26,local,class=CODE,delta=2,merge=1
  9463                           global __ptext26
  9464  1759                     __ptext26:	;psect for function i1_eeprom_write
  9465                           psect	text26
  9466                           	file	"/opt/microchip/xc8/v1.20/sources/pic/eewrite.c"
  9467                           	line	7
  9468                           	global	__size_ofi1_eeprom_write
  9469  0031                     	__size_ofi1_eeprom_write	equ	__end_ofi1_eeprom_write-i1_eeprom_write
  9470                           	
  9471  1759                     i1_eeprom_write:	
  9472                           ;incstack = 0
  9473                           	opt	stack 2
  9474                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  9475                           ;i1eeprom_write@addr stored from wreg
  9476  1759  00F2               	movwf	(i1eeprom_write@addr)
  9477                           	line	8
  9478                           	
  9479  175A                     i1l595:	
  9480  175A  2F5B               	goto	i1l596
  9481                           	
  9482  175B                     i1l597:	
  9483                           	
  9484  175B                     i1l596:	
  9485  175B  1683               	bsf	status, 5	;RP0=1, select bank3
  9486  175C  1703               	bsf	status, 6	;RP1=1, select bank3
  9487  175D  188C               	btfsc	(3169/8)^0180h,(3169)&7	;volatile
  9488  175E  2F60               	goto	u296_21
  9489  175F  2F61               	goto	u296_20
  9490  1760                     u296_21:
  9491  1760  2F5B               	goto	i1l596
  9492  1761                     u296_20:
  9493  1761  2F62               	goto	i1l3991
  9494                           	
  9495  1762                     i1l598:	
  9496                           	
  9497  1762                     i1l3991:	
  9498  1762  0872               	movf	(i1eeprom_write@addr),w
  9499  1763  1283               	bcf	status, 5	;RP0=0, select bank2
  9500  1764  1703               	bsf	status, 6	;RP1=1, select bank2
  9501  1765  008D               	movwf	(269)^0100h	;volatile
  9502  1766  0870               	movf	(i1eeprom_write@value),w
  9503  1767  008C               	movwf	(268)^0100h	;volatile
  9504                           	
  9505  1768                     i1l3993:	
  9506  1768  303F               	movlw	(03Fh)
  9507  1769  00F1               	movwf	(??i1_eeprom_write+0)+0
  9508  176A  0871               	movf	(??i1_eeprom_write+0)+0,w
  9509  176B  1683               	bsf	status, 5	;RP0=1, select bank3
  9510  176C  1703               	bsf	status, 6	;RP1=1, select bank3
  9511  176D  058C               	andwf	(396)^0180h,f	;volatile
  9512                           	
  9513  176E                     i1l3995:	
  9514  176E  1283               	bcf	status, 5	;RP0=0, select bank0
  9515  176F  1303               	bcf	status, 6	;RP1=0, select bank0
  9516  1770  1003               	bcf	(24/8),(24)&7	;volatile
  9517                           	
  9518  1771                     i1l3997:	
  9519  1771  1F8B               	btfss	(95/8),(95)&7	;volatile
  9520  1772  2F74               	goto	u297_21
  9521  1773  2F75               	goto	u297_20
  9522  1774                     u297_21:
  9523  1774  2F76               	goto	i1l599
  9524  1775                     u297_20:
  9525                           	
  9526  1775                     i1l3999:	
  9527  1775  1403               	bsf	(24/8),(24)&7	;volatile
  9528                           	
  9529  1776                     i1l599:	
  9530  1776  138B               	bcf	(95/8),(95)&7	;volatile
  9531  1777  1683               	bsf	status, 5	;RP0=1, select bank3
  9532  1778  1703               	bsf	status, 6	;RP1=1, select bank3
  9533  1779  150C               	bsf	(3170/8)^0180h,(3170)&7	;volatile
  9534                           	
  9535  177A                     i1l4001:	
  9536  177A  3055               	movlw	(055h)
  9537  177B  008D               	movwf	(397)^0180h	;volatile
  9538  177C  30AA               	movlw	(0AAh)
  9539  177D  008D               	movwf	(397)^0180h	;volatile
  9540                           	
  9541  177E                     i1l4003:	
  9542  177E  148C               	bsf	(3169/8)^0180h,(3169)&7	;volatile
  9543                           	
  9544  177F                     i1l4005:	
  9545  177F  110C               	bcf	(3170/8)^0180h,(3170)&7	;volatile
  9546                           	
  9547  1780                     i1l4007:	
  9548  1780  1283               	bcf	status, 5	;RP0=0, select bank0
  9549  1781  1303               	bcf	status, 6	;RP1=0, select bank0
  9550  1782  1C03               	btfss	(24/8),(24)&7	;volatile
  9551  1783  2F85               	goto	u298_21
  9552  1784  2F86               	goto	u298_20
  9553  1785                     u298_21:
  9554  1785  2F89               	goto	i1l602
  9555  1786                     u298_20:
  9556                           	
  9557  1786                     i1l4009:	
  9558  1786  178B               	bsf	(95/8),(95)&7	;volatile
  9559  1787  2F89               	goto	i1l602
  9560                           	
  9561  1788                     i1l600:	
  9562  1788  2F89               	goto	i1l602
  9563                           	
  9564  1789                     i1l601:	
  9565                           	line	9
  9566                           	
  9567  1789                     i1l602:	
  9568  1789  0008               	return
  9569                           	opt stack 0
  9570                           GLOBAL	__end_ofi1_eeprom_write
  9571  178A                     	__end_ofi1_eeprom_write:
  9572                           	signat	i1_eeprom_write,88
  9573                           	global	_adcon_mostra
  9574                           
  9575 ;; *************** function _adcon_mostra *****************
  9576 ;; Defined at:
  9577 ;;		line 108 in file "adcon.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  t_int           2   20[BANK0 ] unsigned int 
  9580 ;;  i               1   22[BANK0 ] unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  temp_str        9   27[BANK0 ] unsigned char [9]
  9583 ;;  temp_div        4   36[BANK0 ] struct .
  9584 ;; Return value:  Size  Location     Type
  9585 ;;		None               void
  9586 ;; Registers used:
  9587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9593 ;;      Params:         0       3       0       0       0
  9594 ;;      Locals:         0      13       0       0       0
  9595 ;;      Temps:          0       4       0       0       0
  9596 ;;      Totals:         0      20       0       0       0
  9597 ;;Total ram usage:       20 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:    2
  9600 ;; This function calls:
  9601 ;;		_div
  9602 ;;		_sprintf
  9603 ;;		___bmul
  9604 ;;		i1_lcd_goto
  9605 ;;		i1_lcd_puts
  9606 ;; This function is called by:
  9607 ;;		_adcon_captura_grava
  9608 ;;		_estado_menu_principal
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           psect	text27,local,class=CODE,delta=2,merge=1
  9612                           global __ptext27
  9613  0CE4                     __ptext27:	;psect for function _adcon_mostra
  9614                           psect	text27
  9615                           	file	"adcon.c"
  9616                           	line	108
  9617                           	global	__size_of_adcon_mostra
  9618  0091                     	__size_of_adcon_mostra	equ	__end_of_adcon_mostra-_adcon_mostra
  9619                           	
  9620  0CE4                     _adcon_mostra:	
  9621                           ;incstack = 0
  9622 ;; using string table level
  9623                           	opt	stack 1
  9624                           ; Regs used in _adcon_mostra: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9625                           	line	112
  9626                           	
  9627  0CE4                     i1l4265:	
  9628                           ;adcon.c: 112: char temp_str[9] = {0};
  9629  0CE4  303B               	movlw	(adcon_mostra@temp_str)&0ffh
  9630  0CE5  0084               	movwf	fsr0
  9631  0CE6  30C0               	movlw	low(adcon_mostra@F1828)
  9632  0CE7  1283               	bcf	status, 5	;RP0=0, select bank0
  9633  0CE8  1303               	bcf	status, 6	;RP1=0, select bank0
  9634  0CE9  00B7               	movwf	(??_adcon_mostra+0)+0
  9635  0CEA  0804               	movf	fsr0,w
  9636  0CEB  00B8               	movwf	((??_adcon_mostra+0)+0+1)
  9637  0CEC  3009               	movlw	9
  9638  0CED  00B9               	movwf	((??_adcon_mostra+0)+0+2)
  9639  0CEE                     u334_20:
  9640  0CEE  0837               	movf	(??_adcon_mostra+0)+0,w
  9641  0CEF  0084               	movwf	fsr0
  9642  0CF0  1383               	bcf	status, 7	;select IRP bank1
  9643                           	
  9644  0CF1  0800               	movf	indf,w
  9645  0CF2  00BA               	movwf	((??_adcon_mostra+0)+0+3)
  9646  0CF3  0AB7               	incf	(??_adcon_mostra+0)+0,f
  9647  0CF4  0838               	movf	((??_adcon_mostra+0)+0+1),w
  9648  0CF5  0084               	movwf	fsr0
  9649                           	
  9650  0CF6  083A               	movf	((??_adcon_mostra+0)+0+3),w
  9651  0CF7  0080               	movwf	indf
  9652  0CF8  0AB8               	incf	((??_adcon_mostra+0)+0+1),f
  9653  0CF9  0BB9               	decfsz	((??_adcon_mostra+0)+0+2),f
  9654  0CFA  2CEE               	goto	u334_20
  9655                           	line	116
  9656                           	
  9657  0CFB                     i1l4267:	
  9658                           ;adcon.c: 114: div_t temp_div;
  9659                           ;adcon.c: 116: temp_div = div(t_int, 10);
  9660  0CFB  0835               	movf	(adcon_mostra@t_int+1),w
  9661  0CFC  01FA               	clrf	(?_div+1)
  9662  0CFD  07FA               	addwf	(?_div+1)
  9663  0CFE  0834               	movf	(adcon_mostra@t_int),w
  9664  0CFF  01F9               	clrf	(?_div)
  9665  0D00  07F9               	addwf	(?_div)
  9666                           
  9667  0D01  300A               	movlw	low(0Ah)
  9668  0D02  00FB               	movwf	0+(?_div)+02h
  9669  0D03  3000               	movlw	high(0Ah)
  9670  0D04  00FC               	movwf	(0+(?_div)+02h)+1
  9671  0D05  120A  158A  2006   	fcall	_div
              120A  158A         
  9672  0D0A  087C               	movf	(3+(?_div)),w
  9673  0D0B  1283               	bcf	status, 5	;RP0=0, select bank0
  9674  0D0C  1303               	bcf	status, 6	;RP1=0, select bank0
  9675  0D0D  00C7               	movwf	(adcon_mostra@temp_div+3)
  9676  0D0E  087B               	movf	(2+(?_div)),w
  9677  0D0F  00C6               	movwf	(adcon_mostra@temp_div+2)
  9678  0D10  087A               	movf	(1+(?_div)),w
  9679  0D11  00C5               	movwf	(adcon_mostra@temp_div+1)
  9680  0D12  0879               	movf	(0+(?_div)),w
  9681  0D13  00C4               	movwf	(adcon_mostra@temp_div)
  9682                           
  9683                           	line	120
  9684                           	
  9685  0D14                     i1l4269:	
  9686                           ;adcon.c: 120: sprintf(temp_str, "%d=%d.%d", menu_quant_sensores[i].i_quant_sensores, te
                                 mp_div.quot, temp_div.rem);
  9687  0D14  303D               	movlw	low(STR_16|8000h)
  9688  0D15  00A0               	movwf	(?_sprintf)
  9689  0D16  3086               	movlw	high(STR_16|8000h)
  9690  0D17  00A1               	movwf	((?_sprintf))+1
  9691  0D18  3003               	movlw	(03h)
  9692  0D19  00B7               	movwf	(??_adcon_mostra+0)+0
  9693  0D1A  0837               	movf	(??_adcon_mostra+0)+0,w
  9694  0D1B  00F0               	movwf	(?___bmul)
  9695  0D1C  0836               	movf	(adcon_mostra@i),w
  9696  0D1D  160A  118A  2569   	fcall	___bmul
              120A  158A         
  9697  0D22  3E02               	addlw	02h
  9698  0D23  3E2E               	addlw	low(_menu_quant_sensores|8000h)
  9699  0D24  0084               	movwf	fsr0
  9700  0D25  3085               	movlw	high(_menu_quant_sensores|8000h)
  9701  0D26  1803               	skipnc
  9702  0D27  3E01               	addlw	1
  9703  0D28  1283               	bcf	status, 5	;RP0=0, select bank0
  9704  0D29  1303               	bcf	status, 6	;RP1=0, select bank0
  9705  0D2A  00FF               	movwf	btemp+1
  9706  0D2B  120A  118A  2500   	fcall	stringtab
              120A  158A         
  9707  0D30  00A2               	movwf	0+(?_sprintf)+02h
  9708  0D31  01A3               	clrf	1+(?_sprintf)+02h
  9709  0D32  1BA2               	btfsc	0+(?_sprintf)+02h,7
  9710  0D33  03A3               	decf	1+(?_sprintf)+02h,f
  9711  0D34  0847               	movf	1+(adcon_mostra@temp_div)+02h,w
  9712  0D35  01A5               	clrf	1+(?_sprintf)+04h
  9713  0D36  07A5               	addwf	1+(?_sprintf)+04h
  9714  0D37  0846               	movf	0+(adcon_mostra@temp_div)+02h,w
  9715  0D38  01A4               	clrf	0+(?_sprintf)+04h
  9716  0D39  07A4               	addwf	0+(?_sprintf)+04h
  9717                           
  9718  0D3A  0845               	movf	(adcon_mostra@temp_div+1),w
  9719  0D3B  01A7               	clrf	1+(?_sprintf)+06h
  9720  0D3C  07A7               	addwf	1+(?_sprintf)+06h
  9721  0D3D  0844               	movf	(adcon_mostra@temp_div),w
  9722  0D3E  01A6               	clrf	0+(?_sprintf)+06h
  9723  0D3F  07A6               	addwf	0+(?_sprintf)+06h
  9724                           
  9725  0D40  303B               	movlw	(adcon_mostra@temp_str)&0ffh
  9726  0D41  120A  158A  26D6   	fcall	_sprintf
              120A  158A         
  9727                           	line	133
  9728                           	
  9729  0D46                     i1l4271:	
  9730                           ;adcon.c: 133: lcd_goto(LCD_POSICAO[i].y, LCD_POSICAO[i].x);
  9731  0D46  1403               	setc
  9732  0D47  1283               	bcf	status, 5	;RP0=0, select bank0
  9733  0D48  1303               	bcf	status, 6	;RP1=0, select bank0
  9734  0D49  0D36               	rlf	(adcon_mostra@i),w
  9735  0D4A  3E44               	addlw	low(_LCD_POSICAO|8000h)
  9736  0D4B  0084               	movwf	fsr0
  9737  0D4C  3085               	movlw	high(_LCD_POSICAO|8000h)
  9738  0D4D  1803               	skipnc
  9739  0D4E  3E01               	addlw	1
  9740  0D4F  00FF               	movwf	btemp+1
  9741  0D50  120A  118A  2500   	fcall	stringtab
              120A  158A         
  9742  0D55  00B7               	movwf	(??_adcon_mostra+0)+0
  9743  0D56  0837               	movf	(??_adcon_mostra+0)+0,w
  9744  0D57  00F2               	movwf	(?i1_lcd_goto)
  9745  0D58  0836               	movf	(adcon_mostra@i),w
  9746  0D59  00B8               	movwf	(??_adcon_mostra+1)+0
  9747  0D5A  0738               	addwf	(??_adcon_mostra+1)+0,w
  9748  0D5B  3E44               	addlw	low(_LCD_POSICAO|8000h)
  9749  0D5C  0084               	movwf	fsr0
  9750  0D5D  3085               	movlw	high(_LCD_POSICAO|8000h)
  9751  0D5E  1803               	skipnc
  9752  0D5F  3E01               	addlw	1
  9753  0D60  00FF               	movwf	btemp+1
  9754  0D61  120A  118A  2500   	fcall	stringtab
              120A  158A         
  9755  0D66  160A  118A  2651   	fcall	i1_lcd_goto
              120A  158A         
  9756                           	line	134
  9757                           	
  9758  0D6B                     i1l4273:	
  9759                           ;adcon.c: 134: lcd_puts(temp_str);
  9760  0D6B  303B               	movlw	(adcon_mostra@temp_str&0ffh)
  9761  0D6C  00F4               	movwf	(?i1_lcd_puts)
  9762  0D6D  3000               	movlw	(0x0/2)
  9763  0D6E  00F5               	movwf	(?i1_lcd_puts+1)
  9764  0D6F  120A  158A  20D2   	fcall	i1_lcd_puts
              120A  158A         
  9765                           	line	135
  9766                           	
  9767  0D74                     i1l263:	
  9768  0D74  0008               	return
  9769                           	opt stack 0
  9770                           GLOBAL	__end_of_adcon_mostra
  9771  0D75                     	__end_of_adcon_mostra:
  9772                           	signat	_adcon_mostra,8312
  9773                           	global	i1_lcd_puts
  9774                           
  9775 ;; *************** function i1_lcd_puts *****************
  9776 ;; Defined at:
  9777 ;;		line 60 in file "lcd.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  lcd_puts        2    4[COMMON] PTR const unsigned char 
  9780 ;;		 -> STR_46(11), STR_43(12), STR_41(12), estado_executa_muda@tmp(17), 
  9781 ;;		 -> STR_40(14), STR_39(7), STR_38(7), STR_37(7), 
  9782 ;;		 -> STR_36(6), STR_35(7), STR_34(7), STR_33(6), 
  9783 ;;		 -> STR_32(11), STR_31(11), STR_30(11), STR_29(9), 
  9784 ;;		 -> STR_28(15), STR_27(14), STR_26(7), STR_25(8), 
  9785 ;;		 -> STR_24(10), STR_23(15), STR_22(9), mq_mostra@temp_str(16), 
  9786 ;;		 -> STR_20(11), STR_19(11), STR_18(11), STR_17(9), 
  9787 ;;		 -> adcon_mostra@temp_str(9), STR_15(14), STR_14(11), STR_13(11), 
  9788 ;;		 -> STR_12(11), STR_11(9), STR_10(7), STR_9(7), 
  9789 ;;		 -> STR_8(7), STR_7(6), STR_6(7), STR_5(7), 
  9790 ;;		 -> STR_4(6), STR_3(11), STR_2(2), STR_1(14), 
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;  lcd_puts        1    8[COMMON] unsigned char 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;		None               void
  9795 ;; Registers used:
  9796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9802 ;;      Params:         2       0       0       0       0
  9803 ;;      Locals:         1       0       0       0       0
  9804 ;;      Temps:          2       0       0       0       0
  9805 ;;      Totals:         5       0       0       0       0
  9806 ;;Total ram usage:        5 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; Hardware stack levels required when called:    1
  9809 ;; This function calls:
  9810 ;;		i1_lcd_write
  9811 ;; This function is called by:
  9812 ;;		_adcon_captura_grava
  9813 ;;		_adcon_mostra
  9814 ;;		_estado_menu_principal
  9815 ;;		_estado_executa_muda
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           psect	text28,local,class=CODE,delta=2,merge=1
  9819                           global __ptext28
  9820  08D2                     __ptext28:	;psect for function i1_lcd_puts
  9821                           psect	text28
  9822                           	file	"lcd.c"
  9823                           	line	60
  9824                           	global	__size_ofi1_lcd_puts
  9825  004D                     	__size_ofi1_lcd_puts	equ	__end_ofi1_lcd_puts-i1_lcd_puts
  9826                           	
  9827  08D2                     i1_lcd_puts:	
  9828                           ;incstack = 0
  9829 ;; using string table level
  9830                           	opt	stack 1
  9831                           ; Regs used in i1_lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9832                           	line	62
  9833                           	
  9834  08D2                     i1l4249:	
  9835                           ;lcd.c: 61: uint8_t cmd;
  9836                           ;lcd.c: 62: RC0 = 1;
  9837  08D2  1283               	bcf	status, 5	;RP0=0, select bank0
  9838  08D3  1303               	bcf	status, 6	;RP1=0, select bank0
  9839  08D4  1407               	bsf	(56/8),(56)&7	;volatile
  9840                           	line	64
  9841                           ;lcd.c: 64: while (*str) {
  9842  08D5  290D               	goto	i1l4263
  9843                           	
  9844  08D6                     i1l91:	
  9845                           	line	65
  9846                           	
  9847  08D6                     i1l4251:	
  9848                           ;lcd.c: 65: cmd = *str >> 4;
  9849  08D6  0875               	movf	(i1lcd_puts@str+1),w
  9850  08D7  00FF               	movwf	btemp+1
  9851  08D8  0874               	movf	(i1lcd_puts@str),w
  9852  08D9  0084               	movwf	fsr0
  9853  08DA  120A  118A  2500   	fcall	stringtab
              120A  158A         
  9854  08DF  00F6               	movwf	(??i1_lcd_puts+0)+0
  9855  08E0  3004               	movlw	04h
  9856  08E1                     u332_25:
  9857  08E1  1003               	clrc
  9858  08E2  0CF6               	rrf	(??i1_lcd_puts+0)+0,f
  9859  08E3  3EFF               	addlw	-1
  9860  08E4  1D03               	skipz
  9861  08E5  28E1               	goto	u332_25
  9862  08E6  0876               	movf	0+(??i1_lcd_puts+0)+0,w
  9863  08E7  00F7               	movwf	(??i1_lcd_puts+1)+0
  9864  08E8  0877               	movf	(??i1_lcd_puts+1)+0,w
  9865  08E9  00F8               	movwf	(i1lcd_puts@cmd)
  9866                           	line	72
  9867                           	
  9868  08EA                     i1l4253:	
  9869                           ;lcd.c: 72: lcd_write(cmd);
  9870  08EA  0878               	movf	(i1lcd_puts@cmd),w
  9871  08EB  160A  118A  26A2   	fcall	i1_lcd_write
              120A  158A         
  9872                           	line	73
  9873                           	
  9874  08F0                     i1l4255:	
  9875                           ;lcd.c: 73: _delay((unsigned long)((40)*(4000000/4000000.0)));
  9876                           	opt asmopt_off
  9877  08F0  300D               movlw	13
  9878  08F1  00F6               movwf	(??i1_lcd_puts+0)+0,f
  9879  08F2                     u399_27:
  9880  08F2  0BF6               decfsz	(??i1_lcd_puts+0)+0,f
  9881  08F3  28F2               	goto	u399_27
  9882                           opt asmopt_on
  9883                           
  9884                           	line	81
  9885                           	
  9886  08F4                     i1l4257:	
  9887                           ;lcd.c: 81: lcd_write(*str);
  9888  08F4  0875               	movf	(i1lcd_puts@str+1),w
  9889  08F5  1283               	bcf	status, 5	;RP0=0, select bank0
  9890  08F6  1303               	bcf	status, 6	;RP1=0, select bank0
  9891  08F7  00FF               	movwf	btemp+1
  9892  08F8  0874               	movf	(i1lcd_puts@str),w
  9893  08F9  0084               	movwf	fsr0
  9894  08FA  120A  118A  2500   	fcall	stringtab
              120A  158A         
  9895  08FF  160A  118A  26A2   	fcall	i1_lcd_write
              120A  158A         
  9896                           	line	82
  9897                           	
  9898  0904                     i1l4259:	
  9899                           ;lcd.c: 82: _delay((unsigned long)((40)*(4000000/4000000.0)));
  9900                           	opt asmopt_off
  9901  0904  300D               movlw	13
  9902  0905  00F6               movwf	(??i1_lcd_puts+0)+0,f
  9903  0906                     u400_27:
  9904  0906  0BF6               decfsz	(??i1_lcd_puts+0)+0,f
  9905  0907  2906               	goto	u400_27
  9906                           opt asmopt_on
  9907                           
  9908                           	line	84
  9909                           	
  9910  0908                     i1l4261:	
  9911                           ;lcd.c: 84: str++;
  9912  0908  3001               	movlw	01h
  9913  0909  07F4               	addwf	(i1lcd_puts@str),f
  9914  090A  1803               	skipnc
  9915  090B  0AF5               	incf	(i1lcd_puts@str+1),f
  9916  090C  290D               	goto	i1l4263
  9917                           	line	85
  9918                           	
  9919  090D                     i1l90:	
  9920                           	line	64
  9921                           	
  9922  090D                     i1l4263:	
  9923  090D  0875               	movf	(i1lcd_puts@str+1),w
  9924  090E  1283               	bcf	status, 5	;RP0=0, select bank0
  9925  090F  1303               	bcf	status, 6	;RP1=0, select bank0
  9926  0910  00FF               	movwf	btemp+1
  9927  0911  0874               	movf	(i1lcd_puts@str),w
  9928  0912  0084               	movwf	fsr0
  9929  0913  120A  118A  2500   	fcall	stringtab
              120A  158A         
  9930  0918  3800               	iorlw	0
  9931  0919  1D03               	skipz
  9932  091A  291C               	goto	u333_21
  9933  091B  291D               	goto	u333_20
  9934  091C                     u333_21:
  9935  091C  28D6               	goto	i1l4251
  9936  091D                     u333_20:
  9937  091D  291E               	goto	i1l93
  9938                           	
  9939  091E                     i1l92:	
  9940                           	line	92
  9941                           	
  9942  091E                     i1l93:	
  9943  091E  0008               	return
  9944                           	opt stack 0
  9945                           GLOBAL	__end_ofi1_lcd_puts
  9946  091F                     	__end_ofi1_lcd_puts:
  9947                           	signat	i1_lcd_puts,88
  9948                           	global	i1_lcd_goto
  9949                           
  9950 ;; *************** function i1_lcd_goto *****************
  9951 ;; Defined at:
  9952 ;;		line 46 in file "lcd.c"
  9953 ;; Parameters:    Size  Location     Type
  9954 ;;  lcd_goto        1    wreg     unsigned char 
  9955 ;;  lcd_goto        1    2[COMMON] unsigned char 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;  lcd_goto        1    4[COMMON] unsigned char 
  9958 ;; Return value:  Size  Location     Type
  9959 ;;		None               void
  9960 ;; Registers used:
  9961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9962 ;; Tracked objects:
  9963 ;;		On entry : 0/0
  9964 ;;		On exit  : 0/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9967 ;;      Params:         1       0       0       0       0
  9968 ;;      Locals:         1       0       0       0       0
  9969 ;;      Temps:          1       0       0       0       0
  9970 ;;      Totals:         3       0       0       0       0
  9971 ;;Total ram usage:        3 bytes
  9972 ;; Hardware stack levels used:    1
  9973 ;; Hardware stack levels required when called:    1
  9974 ;; This function calls:
  9975 ;;		i1_lcd_write
  9976 ;; This function is called by:
  9977 ;;		_adcon_mostra
  9978 ;;		_estado_executa_muda
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           psect	text29,local,class=CODE,delta=2,merge=1
  9982                           global __ptext29
  9983  1651                     __ptext29:	;psect for function i1_lcd_goto
  9984                           psect	text29
  9985                           	file	"lcd.c"
  9986                           	line	46
  9987                           	global	__size_ofi1_lcd_goto
  9988  0027                     	__size_ofi1_lcd_goto	equ	__end_ofi1_lcd_goto-i1_lcd_goto
  9989                           	
  9990  1651                     i1_lcd_goto:	
  9991                           ;incstack = 0
  9992                           	opt	stack 0
  9993                           ; Regs used in i1_lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9994                           ;i1lcd_goto@y stored from wreg
  9995  1651  00F4               	movwf	(i1lcd_goto@y)
  9996                           	line	47
  9997                           	
  9998  1652                     i1l4235:	
  9999                           ;lcd.c: 47: RC0 = 0;
 10000  1652  1283               	bcf	status, 5	;RP0=0, select bank0
 10001  1653  1303               	bcf	status, 6	;RP1=0, select bank0
 10002  1654  1007               	bcf	(56/8),(56)&7	;volatile
 10003                           	line	48
 10004                           ;lcd.c: 48: switch (y) {
 10005  1655  2E65               	goto	i1l4243
 10006                           	line	49
 10007                           ;lcd.c: 49: case 1:
 10008                           	
 10009  1656                     i1l84:	
 10010                           	line	50
 10011                           	
 10012  1656                     i1l4237:	
 10013                           ;lcd.c: 50: lcd_write(8);
 10014  1656  3008               	movlw	(08h)
 10015  1657  160A  118A  26A2   	fcall	i1_lcd_write
              160A  118A         
 10016                           	line	51
 10017                           ;lcd.c: 51: break;
 10018  165C  2E6D               	goto	i1l4245
 10019                           	line	52
 10020                           ;lcd.c: 52: case 2:
 10021                           	
 10022  165D                     i1l86:	
 10023                           	line	53
 10024                           	
 10025  165D                     i1l4239:	
 10026                           ;lcd.c: 53: lcd_write(0xc);
 10027  165D  300C               	movlw	(0Ch)
 10028  165E  160A  118A  26A2   	fcall	i1_lcd_write
              160A  118A         
 10029                           	line	54
 10030                           ;lcd.c: 54: break;
 10031  1663  2E6D               	goto	i1l4245
 10032                           	line	55
 10033                           	
 10034  1664                     i1l4241:	
 10035                           ;lcd.c: 55: }
 10036  1664  2E6D               	goto	i1l4245
 10037                           	line	48
 10038                           	
 10039  1665                     i1l83:	
 10040                           	
 10041  1665                     i1l4243:	
 10042  1665  0874               	movf	(i1lcd_goto@y),w
 10043                           	; Switch size 1, requested type "space"
 10044                           ; Number of cases is 2, Range of values is 1 to 2
 10045                           ; switch strategies available:
 10046                           ; Name         Instructions Cycles
 10047                           ; simple_byte            7     4 (average)
 10048                           ; direct_byte           17    11 (fixed)
 10049                           ; jumptable            263     9 (fixed)
 10050                           ;	Chosen strategy is simple_byte
 10051                           
 10052                           	opt asmopt_off
 10053  1666  3A01               	xorlw	1^0	; case 1
 10054  1667  1903               	skipnz
 10055  1668  2E56               	goto	i1l4237
 10056  1669  3A03               	xorlw	2^1	; case 2
 10057  166A  1903               	skipnz
 10058  166B  2E5D               	goto	i1l4239
 10059  166C  2E6D               	goto	i1l4245
 10060                           	opt asmopt_on
 10061                           
 10062                           	line	55
 10063                           	
 10064  166D                     i1l85:	
 10065                           	line	56
 10066                           	
 10067  166D                     i1l4245:	
 10068                           ;lcd.c: 56: lcd_write(x);
 10069  166D  0872               	movf	(i1lcd_goto@x),w
 10070  166E  160A  118A  26A2   	fcall	i1_lcd_write
              160A  118A         
 10071                           	line	57
 10072                           	
 10073  1673                     i1l4247:	
 10074                           ;lcd.c: 57: _delay((unsigned long)((40)*(4000000/4000000.0)));
 10075                           	opt asmopt_off
 10076  1673  300D               movlw	13
 10077  1674  00F3               movwf	(??i1_lcd_goto+0)+0,f
 10078  1675                     u401_27:
 10079  1675  0BF3               decfsz	(??i1_lcd_goto+0)+0,f
 10080  1676  2E75               	goto	u401_27
 10081                           opt asmopt_on
 10082                           
 10083                           	line	58
 10084                           	
 10085  1677                     i1l87:	
 10086  1677  0008               	return
 10087                           	opt stack 0
 10088                           GLOBAL	__end_ofi1_lcd_goto
 10089  1678                     	__end_ofi1_lcd_goto:
 10090                           	signat	i1_lcd_goto,88
 10091                           	global	_sprintf
 10092                           
 10093 ;; *************** function _sprintf *****************
 10094 ;; Defined at:
 10095 ;;		line 493 in file "/opt/microchip/xc8/v1.20/sources/common/doprnt.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;  sp              1    wreg     PTR unsigned char 
 10098 ;;		 -> estado_executa_muda@tmp(17), mq_mostra@temp_str(16), adcon_mostra@temp_str(9), 
 10099 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 10100 ;;		 -> STR_45(10), STR_44(10), STR_42(9), STR_21(7), 
 10101 ;;		 -> STR_16(9), 
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;  sp              1   18[BANK0 ] PTR unsigned char 
 10104 ;;		 -> estado_executa_muda@tmp(17), mq_mostra@temp_str(16), adcon_mostra@temp_str(9), 
 10105 ;;  _val            4   14[BANK0 ] struct .
 10106 ;;  c               1   19[BANK0 ] char 
 10107 ;;  flag            1   13[BANK0 ] unsigned char 
 10108 ;;  ap              1   12[BANK0 ] PTR void [1]
 10109 ;;		 -> ?_sprintf(2), 
 10110 ;;  prec            1   11[BANK0 ] char 
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  2    0[BANK0 ] int 
 10113 ;; Registers used:
 10114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10120 ;;      Params:         0       8       0       0       0
 10121 ;;      Locals:         0       9       0       0       0
 10122 ;;      Temps:          0       3       0       0       0
 10123 ;;      Totals:         0      20       0       0       0
 10124 ;;Total ram usage:       20 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; Hardware stack levels required when called:    1
 10127 ;; This function calls:
 10128 ;;		___lwdiv
 10129 ;;		___lwmod
 10130 ;; This function is called by:
 10131 ;;		_adcon_mostra
 10132 ;;		_estado_executa_muda
 10133 ;;		_mq_mostra
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           psect	text30,local,class=CODE,delta=2,merge=1
 10137                           global __ptext30
 10138  0ED6                     __ptext30:	;psect for function _sprintf
 10139                           psect	text30
 10140                           	file	"/opt/microchip/xc8/v1.20/sources/common/doprnt.c"
 10141                           	line	493
 10142                           	global	__size_of_sprintf
 10143  012A                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
 10144                           	
 10145  0ED6                     _sprintf:	
 10146                           ;incstack = 0
 10147 ;; using string table level
 10148                           	opt	stack 1
 10149                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10150                           ;sprintf@sp stored from wreg
 10151                           	line	542
 10152  0ED6  1283               	bcf	status, 5	;RP0=0, select bank0
 10153  0ED7  1303               	bcf	status, 6	;RP1=0, select bank0
 10154  0ED8  00B2               	movwf	(sprintf@sp)
 10155                           	
 10156  0ED9                     i1l4171:	
 10157                           ;doprnt.c: 494: va_list ap;
 10158                           ;doprnt.c: 499: signed char c;
 10159                           ;doprnt.c: 506: signed char prec;
 10160                           ;doprnt.c: 508: unsigned char flag;
 10161                           ;doprnt.c: 527: union {
 10162                           ;doprnt.c: 528: unsigned int _val;
 10163                           ;doprnt.c: 529: struct {
 10164                           ;doprnt.c: 530: const char * _cp;
 10165                           ;doprnt.c: 531: unsigned _len;
 10166                           ;doprnt.c: 532: } _str;
 10167                           ;doprnt.c: 533: } _val;
 10168                           ;doprnt.c: 542: *ap = __va_start();
 10169  0ED9  3022               	movlw	(?_sprintf+02h)&0ffh
 10170  0EDA  00A8               	movwf	(??_sprintf+0)+0
 10171  0EDB  0828               	movf	(??_sprintf+0)+0,w
 10172  0EDC  00AC               	movwf	(sprintf@ap)
 10173                           	line	545
 10174                           ;doprnt.c: 545: while(c = *f++) {
 10175  0EDD  2FDF               	goto	i1l4229
 10176                           	
 10177  0EDE                     i1l540:	
 10178                           	line	547
 10179                           	
 10180  0EDE                     i1l4173:	
 10181                           ;doprnt.c: 547: if(c != '%')
 10182  0EDE  0833               	movf	(sprintf@c),w
 10183  0EDF  3A25               	xorlw	025h
 10184  0EE0  1903               	skipnz
 10185  0EE1  2EE3               	goto	u323_21
 10186  0EE2  2EE4               	goto	u323_20
 10187  0EE3                     u323_21:
 10188  0EE3  2EF0               	goto	i1l4179
 10189  0EE4                     u323_20:
 10190                           	line	550
 10191                           	
 10192  0EE4                     i1l4175:	
 10193                           ;doprnt.c: 549: {
 10194                           ;doprnt.c: 550: ((*sp++ = (c)));
 10195  0EE4  0833               	movf	(sprintf@c),w
 10196  0EE5  00A8               	movwf	(??_sprintf+0)+0
 10197  0EE6  0832               	movf	(sprintf@sp),w
 10198  0EE7  0084               	movwf	fsr0
 10199  0EE8  0828               	movf	(??_sprintf+0)+0,w
 10200  0EE9  1383               	bcf	status, 7	;select IRP bank0
 10201  0EEA  0080               	movwf	indf
 10202                           	
 10203  0EEB                     i1l4177:	
 10204  0EEB  3001               	movlw	(01h)
 10205  0EEC  00A8               	movwf	(??_sprintf+0)+0
 10206  0EED  0828               	movf	(??_sprintf+0)+0,w
 10207  0EEE  07B2               	addwf	(sprintf@sp),f
 10208                           	line	551
 10209                           ;doprnt.c: 551: continue;
 10210  0EEF  2FDF               	goto	i1l4229
 10211                           	line	552
 10212                           	
 10213  0EF0                     i1l541:	
 10214                           	line	557
 10215                           	
 10216  0EF0                     i1l4179:	
 10217                           ;doprnt.c: 552: }
 10218                           ;doprnt.c: 557: flag = 0;
 10219  0EF0  01AD               	clrf	(sprintf@flag)
 10220                           	line	644
 10221                           ;doprnt.c: 644: switch(c = *f++) {
 10222  0EF1  2EF9               	goto	i1l4183
 10223                           	line	646
 10224                           ;doprnt.c: 646: case 0:
 10225                           	
 10226  0EF2                     i1l543:	
 10227                           	line	647
 10228                           ;doprnt.c: 647: goto alldone;
 10229  0EF2  2FFA               	goto	i1l4231
 10230                           	line	706
 10231                           ;doprnt.c: 706: case 'd':
 10232                           	
 10233  0EF3                     i1l545:	
 10234  0EF3  2F18               	goto	i1l547
 10235                           	line	707
 10236                           	
 10237  0EF4                     i1l546:	
 10238                           	line	708
 10239                           ;doprnt.c: 707: case 'i':
 10240                           ;doprnt.c: 708: break;
 10241  0EF4  2F18               	goto	i1l547
 10242                           	line	811
 10243                           ;doprnt.c: 811: default:
 10244                           	
 10245  0EF5                     i1l548:	
 10246                           	line	822
 10247                           ;doprnt.c: 822: continue;
 10248  0EF5  2FDF               	goto	i1l4229
 10249                           	line	826
 10250                           ;doprnt.c: 826: case 'u':
 10251                           	
 10252  0EF6                     i1l549:	
 10253                           	line	827
 10254                           ;doprnt.c: 827: flag |= 0x40;
 10255  0EF6  172D               	bsf	(sprintf@flag)+(6/8),(6)&7
 10256                           	line	828
 10257                           ;doprnt.c: 828: break;
 10258  0EF7  2F18               	goto	i1l547
 10259                           	line	831
 10260                           	
 10261  0EF8                     i1l4181:	
 10262                           ;doprnt.c: 831: }
 10263  0EF8  2F18               	goto	i1l547
 10264                           	line	644
 10265                           	
 10266  0EF9                     i1l542:	
 10267                           	
 10268  0EF9                     i1l4183:	
 10269  0EF9  0821               	movf	(sprintf@f+1),w
 10270  0EFA  00A9               	movwf	(??_sprintf+0)+0+1
 10271  0EFB  0820               	movf	(sprintf@f),w
 10272  0EFC  00A8               	movwf	(??_sprintf+0)+0
 10273  0EFD  3001               	movlw	(01h)
 10274  0EFE  07A0               	addwf	(sprintf@f),f
 10275  0EFF  1803               	skipnc
 10276  0F00  0AA1               	incf	(sprintf@f+1),f
 10277  0F01  0829               	movf	1+(??_sprintf+0)+0,w
 10278  0F02  00FF               	movwf	btemp+1
 10279  0F03  0828               	movf	0+(??_sprintf+0)+0,w
 10280  0F04  0084               	movwf	fsr0
 10281  0F05  120A  118A  2500   	fcall	stringtab
              120A  158A         
 10282  0F0A  00B3               	movwf	(sprintf@c)
 10283                           	; Switch size 1, requested type "space"
 10284                           ; Number of cases is 4, Range of values is 0 to 117
 10285                           ; switch strategies available:
 10286                           ; Name         Instructions Cycles
 10287                           ; simple_byte           13     7 (average)
 10288                           ; jumptable            260     6 (fixed)
 10289                           ; rangetable           122     6 (fixed)
 10290                           ; spacedrange          242     9 (fixed)
 10291                           ; locatedrange         118     3 (fixed)
 10292                           ;	Chosen strategy is simple_byte
 10293                           
 10294                           	opt asmopt_off
 10295  0F0B  3A00               	xorlw	0^0	; case 0
 10296  0F0C  1903               	skipnz
 10297  0F0D  2FFA               	goto	i1l4231
 10298  0F0E  3A64               	xorlw	100^0	; case 100
 10299  0F0F  1903               	skipnz
 10300  0F10  2F18               	goto	i1l547
 10301  0F11  3A0D               	xorlw	105^100	; case 105
 10302  0F12  1903               	skipnz
 10303  0F13  2F18               	goto	i1l547
 10304  0F14  3A1C               	xorlw	117^105	; case 117
 10305  0F15  1903               	skipnz
 10306  0F16  2EF6               	goto	i1l549
 10307  0F17  2FDF               	goto	i1l4229
 10308                           	opt asmopt_on
 10309                           
 10310                           	line	831
 10311                           	
 10312  0F18                     i1l547:	
 10313                           	line	1258
 10314                           ;doprnt.c: 1258: if((flag & 0x40) == 0x00)
 10315  0F18  1B2D               	btfsc	(sprintf@flag),(6)&7
 10316  0F19  2F1B               	goto	u324_21
 10317  0F1A  2F1C               	goto	u324_20
 10318  0F1B                     u324_21:
 10319  0F1B  2F37               	goto	i1l4195
 10320  0F1C                     u324_20:
 10321                           	line	1266
 10322                           	
 10323  0F1C                     i1l4185:	
 10324                           ;doprnt.c: 1260: {
 10325                           ;doprnt.c: 1266: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 10326  0F1C  082C               	movf	(sprintf@ap),w
 10327  0F1D  0084               	movwf	fsr0
 10328  0F1E  1383               	bcf	status, 7	;select IRP bank0
 10329  0F1F  0800               	movf	indf,w
 10330  0F20  00AE               	movwf	(sprintf@_val)
 10331  0F21  0A84               	incf	fsr0,f
 10332  0F22  0800               	movf	indf,w
 10333  0F23  00AF               	movwf	(sprintf@_val+1)
 10334                           	
 10335  0F24                     i1l4187:	
 10336  0F24  3002               	movlw	(02h)
 10337  0F25  00A8               	movwf	(??_sprintf+0)+0
 10338  0F26  0828               	movf	(??_sprintf+0)+0,w
 10339  0F27  07AC               	addwf	(sprintf@ap),f
 10340                           	line	1268
 10341                           	
 10342  0F28                     i1l4189:	
 10343                           ;doprnt.c: 1268: if((int)_val._val < 0) {
 10344  0F28  1FAF               	btfss	(sprintf@_val+1),7
 10345  0F29  2F2B               	goto	u325_21
 10346  0F2A  2F2C               	goto	u325_20
 10347  0F2B                     u325_21:
 10348  0F2B  2F44               	goto	i1l4199
 10349  0F2C                     u325_20:
 10350                           	line	1269
 10351                           	
 10352  0F2C                     i1l4191:	
 10353                           ;doprnt.c: 1269: flag |= 0x03;
 10354  0F2C  3003               	movlw	(03h)
 10355  0F2D  00A8               	movwf	(??_sprintf+0)+0
 10356  0F2E  0828               	movf	(??_sprintf+0)+0,w
 10357  0F2F  04AD               	iorwf	(sprintf@flag),f
 10358                           	line	1270
 10359                           	
 10360  0F30                     i1l4193:	
 10361                           ;doprnt.c: 1270: _val._val = -_val._val;
 10362  0F30  09AE               	comf	(sprintf@_val),f
 10363  0F31  09AF               	comf	(sprintf@_val+1),f
 10364  0F32  0AAE               	incf	(sprintf@_val),f
 10365  0F33  1903               	skipnz
 10366  0F34  0AAF               	incf	(sprintf@_val+1),f
 10367  0F35  2F44               	goto	i1l4199
 10368                           	line	1271
 10369                           	
 10370  0F36                     i1l551:	
 10371                           	line	1273
 10372                           ;doprnt.c: 1271: }
 10373                           ;doprnt.c: 1273: }
 10374  0F36  2F44               	goto	i1l4199
 10375                           	line	1275
 10376                           	
 10377  0F37                     i1l550:	
 10378                           	line	1293
 10379                           	
 10380  0F37                     i1l4195:	
 10381                           ;doprnt.c: 1275: else
 10382                           ;doprnt.c: 1280: {
 10383                           ;doprnt.c: 1293: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10384  0F37  082C               	movf	(sprintf@ap),w
 10385  0F38  0084               	movwf	fsr0
 10386  0F39  1383               	bcf	status, 7	;select IRP bank0
 10387  0F3A  0800               	movf	indf,w
 10388  0F3B  00AE               	movwf	(sprintf@_val)
 10389  0F3C  0A84               	incf	fsr0,f
 10390  0F3D  0800               	movf	indf,w
 10391  0F3E  00AF               	movwf	(sprintf@_val+1)
 10392                           	
 10393  0F3F                     i1l4197:	
 10394  0F3F  3002               	movlw	(02h)
 10395  0F40  00A8               	movwf	(??_sprintf+0)+0
 10396  0F41  0828               	movf	(??_sprintf+0)+0,w
 10397  0F42  07AC               	addwf	(sprintf@ap),f
 10398  0F43  2F44               	goto	i1l4199
 10399                           	line	1294
 10400                           	
 10401  0F44                     i1l552:	
 10402                           	line	1312
 10403                           	
 10404  0F44                     i1l4199:	
 10405                           ;doprnt.c: 1294: }
 10406                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10407  0F44  01B3               	clrf	(sprintf@c)
 10408  0F45  0AB3               	incf	(sprintf@c),f
 10409                           	
 10410  0F46                     i1l4201:	
 10411  0F46  0833               	movf	(sprintf@c),w
 10412  0F47  3A05               	xorlw	05h
 10413  0F48  1D03               	skipz
 10414  0F49  2F4B               	goto	u326_21
 10415  0F4A  2F4C               	goto	u326_20
 10416  0F4B                     u326_21:
 10417  0F4B  2F4E               	goto	i1l4205
 10418  0F4C                     u326_20:
 10419  0F4C  2F7A               	goto	i1l4213
 10420                           	
 10421  0F4D                     i1l4203:	
 10422  0F4D  2F7A               	goto	i1l4213
 10423                           	line	1313
 10424                           	
 10425  0F4E                     i1l553:	
 10426                           	
 10427  0F4E                     i1l4205:	
 10428                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
 10429  0F4E  0833               	movf	(sprintf@c),w
 10430  0F4F  00A8               	movwf	(??_sprintf+0)+0
 10431  0F50  0728               	addwf	(??_sprintf+0)+0,w
 10432  0F51  3E3A               	addlw	low(_dpowers|8000h)
 10433  0F52  0084               	movwf	fsr0
 10434  0F53  3085               	movlw	high(_dpowers|8000h)
 10435  0F54  1803               	skipnc
 10436  0F55  3E01               	addlw	1
 10437  0F56  00FF               	movwf	btemp+1
 10438  0F57  120A  118A  2500   	fcall	stringtab
              120A  158A         
 10439  0F5C  00A9               	movwf	(??_sprintf+1)+0
 10440  0F5D  120A  118A  2500   	fcall	stringtab
              120A  158A         
 10441  0F62  00AA               	movwf	(??_sprintf+1)+0+1
 10442  0F63  082A               	movf	1+(??_sprintf+1)+0,w
 10443  0F64  022F               	subwf	(sprintf@_val+1),w
 10444  0F65  1D03               	skipz
 10445  0F66  2F69               	goto	u327_25
 10446  0F67  0829               	movf	0+(??_sprintf+1)+0,w
 10447  0F68  022E               	subwf	(sprintf@_val),w
 10448  0F69                     u327_25:
 10449  0F69  1803               	skipnc
 10450  0F6A  2F6C               	goto	u327_21
 10451  0F6B  2F6D               	goto	u327_20
 10452  0F6C                     u327_21:
 10453  0F6C  2F6F               	goto	i1l4209
 10454  0F6D                     u327_20:
 10455  0F6D  2F7A               	goto	i1l4213
 10456                           	line	1314
 10457                           	
 10458  0F6E                     i1l4207:	
 10459                           ;doprnt.c: 1314: break;
 10460  0F6E  2F7A               	goto	i1l4213
 10461                           	
 10462  0F6F                     i1l555:	
 10463                           	line	1312
 10464                           	
 10465  0F6F                     i1l4209:	
 10466  0F6F  3001               	movlw	(01h)
 10467  0F70  00A8               	movwf	(??_sprintf+0)+0
 10468  0F71  0828               	movf	(??_sprintf+0)+0,w
 10469  0F72  07B3               	addwf	(sprintf@c),f
 10470                           	
 10471  0F73                     i1l4211:	
 10472  0F73  0833               	movf	(sprintf@c),w
 10473  0F74  3A05               	xorlw	05h
 10474  0F75  1D03               	skipz
 10475  0F76  2F78               	goto	u328_21
 10476  0F77  2F79               	goto	u328_20
 10477  0F78                     u328_21:
 10478  0F78  2F4E               	goto	i1l4205
 10479  0F79                     u328_20:
 10480  0F79  2F7A               	goto	i1l4213
 10481                           	
 10482  0F7A                     i1l554:	
 10483                           	line	1445
 10484                           	
 10485  0F7A                     i1l4213:	
 10486                           ;doprnt.c: 1429: {
 10487                           ;doprnt.c: 1445: if(flag & 0x03)
 10488  0F7A  082D               	movf	(sprintf@flag),w
 10489  0F7B  3903               	andlw	03h
 10490  0F7C  1903               	btfsc	status,2
 10491  0F7D  2F7F               	goto	u329_21
 10492  0F7E  2F80               	goto	u329_20
 10493  0F7F                     u329_21:
 10494  0F7F  2F8C               	goto	i1l4219
 10495  0F80                     u329_20:
 10496                           	line	1446
 10497                           	
 10498  0F80                     i1l4215:	
 10499                           ;doprnt.c: 1446: ((*sp++ = ('-')));
 10500  0F80  302D               	movlw	(02Dh)
 10501  0F81  00A8               	movwf	(??_sprintf+0)+0
 10502  0F82  0832               	movf	(sprintf@sp),w
 10503  0F83  0084               	movwf	fsr0
 10504  0F84  0828               	movf	(??_sprintf+0)+0,w
 10505  0F85  1383               	bcf	status, 7	;select IRP bank0
 10506  0F86  0080               	movwf	indf
 10507                           	
 10508  0F87                     i1l4217:	
 10509  0F87  3001               	movlw	(01h)
 10510  0F88  00A8               	movwf	(??_sprintf+0)+0
 10511  0F89  0828               	movf	(??_sprintf+0)+0,w
 10512  0F8A  07B2               	addwf	(sprintf@sp),f
 10513  0F8B  2F8C               	goto	i1l4219
 10514                           	
 10515  0F8C                     i1l556:	
 10516                           	line	1479
 10517                           	
 10518  0F8C                     i1l4219:	
 10519                           ;doprnt.c: 1476: }
 10520                           ;doprnt.c: 1479: prec = c;
 10521  0F8C  0833               	movf	(sprintf@c),w
 10522  0F8D  00A8               	movwf	(??_sprintf+0)+0
 10523  0F8E  0828               	movf	(??_sprintf+0)+0,w
 10524  0F8F  00AB               	movwf	(sprintf@prec)
 10525                           	line	1481
 10526                           ;doprnt.c: 1481: while(prec--) {
 10527  0F90  2FD3               	goto	i1l4227
 10528                           	
 10529  0F91                     i1l558:	
 10530                           	line	1496
 10531                           	
 10532  0F91                     i1l4221:	
 10533                           ;doprnt.c: 1485: {
 10534                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
 10535  0F91  300A               	movlw	low(0Ah)
 10536  0F92  00F8               	movwf	(?___lwmod)
 10537  0F93  3000               	movlw	high(0Ah)
 10538  0F94  00F9               	movwf	((?___lwmod))+1
 10539  0F95  082B               	movf	(sprintf@prec),w
 10540  0F96  00A8               	movwf	(??_sprintf+0)+0
 10541  0F97  0728               	addwf	(??_sprintf+0)+0,w
 10542  0F98  3E3A               	addlw	low(_dpowers|8000h)
 10543  0F99  0084               	movwf	fsr0
 10544  0F9A  3085               	movlw	high(_dpowers|8000h)
 10545  0F9B  1803               	skipnc
 10546  0F9C  3E01               	addlw	1
 10547  0F9D  00FF               	movwf	btemp+1
 10548  0F9E  120A  118A  2500   	fcall	stringtab
              120A  158A         
 10549  0FA3  00F0               	movwf	(?___lwdiv)
 10550  0FA4  120A  118A  2500   	fcall	stringtab
              120A  158A         
 10551  0FA9  00F1               	movwf	(?___lwdiv+1)
 10552  0FAA  082F               	movf	(sprintf@_val+1),w
 10553  0FAB  01F3               	clrf	1+(?___lwdiv)+02h
 10554  0FAC  07F3               	addwf	1+(?___lwdiv)+02h
 10555  0FAD  082E               	movf	(sprintf@_val),w
 10556  0FAE  01F2               	clrf	0+(?___lwdiv)+02h
 10557  0FAF  07F2               	addwf	0+(?___lwdiv)+02h
 10558                           
 10559  0FB0  120A  158A  2085   	fcall	___lwdiv
              120A  158A         
 10560  0FB5  0871               	movf	(1+(?___lwdiv)),w
 10561  0FB6  01FB               	clrf	1+(?___lwmod)+02h
 10562  0FB7  07FB               	addwf	1+(?___lwmod)+02h
 10563  0FB8  0870               	movf	(0+(?___lwdiv)),w
 10564  0FB9  01FA               	clrf	0+(?___lwmod)+02h
 10565  0FBA  07FA               	addwf	0+(?___lwmod)+02h
 10566                           
 10567  0FBB  120A  158A  2042   	fcall	___lwmod
              120A  158A         
 10568  0FC0  0878               	movf	(0+(?___lwmod)),w
 10569  0FC1  3E30               	addlw	030h
 10570  0FC2  1283               	bcf	status, 5	;RP0=0, select bank0
 10571  0FC3  1303               	bcf	status, 6	;RP1=0, select bank0
 10572  0FC4  00A9               	movwf	(??_sprintf+1)+0
 10573  0FC5  0829               	movf	(??_sprintf+1)+0,w
 10574  0FC6  00B3               	movwf	(sprintf@c)
 10575                           	line	1531
 10576                           	
 10577  0FC7                     i1l4223:	
 10578                           ;doprnt.c: 1530: }
 10579                           ;doprnt.c: 1531: ((*sp++ = (c)));
 10580  0FC7  0833               	movf	(sprintf@c),w
 10581  0FC8  00A8               	movwf	(??_sprintf+0)+0
 10582  0FC9  0832               	movf	(sprintf@sp),w
 10583  0FCA  0084               	movwf	fsr0
 10584  0FCB  0828               	movf	(??_sprintf+0)+0,w
 10585  0FCC  1383               	bcf	status, 7	;select IRP bank0
 10586  0FCD  0080               	movwf	indf
 10587                           	
 10588  0FCE                     i1l4225:	
 10589  0FCE  3001               	movlw	(01h)
 10590  0FCF  00A8               	movwf	(??_sprintf+0)+0
 10591  0FD0  0828               	movf	(??_sprintf+0)+0,w
 10592  0FD1  07B2               	addwf	(sprintf@sp),f
 10593  0FD2  2FD3               	goto	i1l4227
 10594                           	line	1532
 10595                           	
 10596  0FD3                     i1l557:	
 10597                           	line	1481
 10598                           	
 10599  0FD3                     i1l4227:	
 10600  0FD3  30FF               	movlw	(-1)
 10601  0FD4  00A8               	movwf	(??_sprintf+0)+0
 10602  0FD5  0828               	movf	(??_sprintf+0)+0,w
 10603  0FD6  07AB               	addwf	(sprintf@prec),f
 10604  0FD7  082B               	movf	((sprintf@prec)),w
 10605  0FD8  3AFF               	xorlw	-1
 10606  0FD9  1D03               	skipz
 10607  0FDA  2FDC               	goto	u330_21
 10608  0FDB  2FDD               	goto	u330_20
 10609  0FDC                     u330_21:
 10610  0FDC  2F91               	goto	i1l4221
 10611  0FDD                     u330_20:
 10612  0FDD  2FDF               	goto	i1l4229
 10613                           	
 10614  0FDE                     i1l559:	
 10615  0FDE  2FDF               	goto	i1l4229
 10616                           	line	1540
 10617                           	
 10618  0FDF                     i1l539:	
 10619                           	line	545
 10620                           	
 10621  0FDF                     i1l4229:	
 10622  0FDF  0821               	movf	(sprintf@f+1),w
 10623  0FE0  00A9               	movwf	(??_sprintf+0)+0+1
 10624  0FE1  0820               	movf	(sprintf@f),w
 10625  0FE2  00A8               	movwf	(??_sprintf+0)+0
 10626  0FE3  3001               	movlw	(01h)
 10627  0FE4  07A0               	addwf	(sprintf@f),f
 10628  0FE5  1803               	skipnc
 10629  0FE6  0AA1               	incf	(sprintf@f+1),f
 10630  0FE7  0829               	movf	1+(??_sprintf+0)+0,w
 10631  0FE8  00FF               	movwf	btemp+1
 10632  0FE9  0828               	movf	0+(??_sprintf+0)+0,w
 10633  0FEA  0084               	movwf	fsr0
 10634  0FEB  120A  118A  2500   	fcall	stringtab
              120A  158A         
 10635  0FF0  00AA               	movwf	(??_sprintf+2)+0
 10636  0FF1  082A               	movf	(??_sprintf+2)+0,w
 10637  0FF2  00B3               	movwf	(sprintf@c)
 10638  0FF3  08B3               	movf	((sprintf@c)),f
 10639  0FF4  1D03               	skipz
 10640  0FF5  2FF7               	goto	u331_21
 10641  0FF6  2FF8               	goto	u331_20
 10642  0FF7                     u331_21:
 10643  0FF7  2EDE               	goto	i1l4173
 10644  0FF8                     u331_20:
 10645  0FF8  2FFA               	goto	i1l4231
 10646                           	
 10647  0FF9                     i1l560:	
 10648  0FF9  2FFA               	goto	i1l4231
 10649                           	line	1542
 10650                           ;doprnt.c: 1532: }
 10651                           ;doprnt.c: 1540: }
 10652                           ;doprnt.c: 1542: alldone:
 10653                           	
 10654  0FFA                     i1l544:	
 10655                           	line	1545
 10656                           	
 10657  0FFA                     i1l4231:	
 10658                           ;doprnt.c: 1545: *sp = 0;
 10659  0FFA  0832               	movf	(sprintf@sp),w
 10660  0FFB  0084               	movwf	fsr0
 10661  0FFC  1383               	bcf	status, 7	;select IRP bank0
 10662  0FFD  0180               	clrf	indf
 10663  0FFE  2FFF               	goto	i1l561
 10664                           	line	1547
 10665                           	
 10666  0FFF                     i1l4233:	
 10667                           	line	1548
 10668                           ;doprnt.c: 1547: return 0;
 10669                           ;	Return value of _sprintf is never used
 10670                           	
 10671  0FFF                     i1l561:	
 10672  0FFF  0008               	return
 10673                           	opt stack 0
 10674                           GLOBAL	__end_of_sprintf
 10675  1000                     	__end_of_sprintf:
 10676                           	signat	_sprintf,4698
 10677                           	global	___lwmod
 10678                           
 10679 ;; *************** function ___lwmod *****************
 10680 ;; Defined at:
 10681 ;;		line 5 in file "/opt/microchip/xc8/v1.20/sources/pic/lwmod.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;  divisor         2    8[COMMON] unsigned int 
 10684 ;;  dividend        2   10[COMMON] unsigned int 
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;  counter         1   13[COMMON] unsigned char 
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  2    8[COMMON] unsigned int 
 10689 ;; Registers used:
 10690 ;;		wreg, status,2, status,0
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10696 ;;      Params:         4       0       0       0       0
 10697 ;;      Locals:         1       0       0       0       0
 10698 ;;      Temps:          1       0       0       0       0
 10699 ;;      Totals:         6       0       0       0       0
 10700 ;;Total ram usage:        6 bytes
 10701 ;; Hardware stack levels used:    1
 10702 ;; This function calls:
 10703 ;;		Nothing
 10704 ;; This function is called by:
 10705 ;;		_estado_executa_muda
 10706 ;;		_sprintf
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           psect	text31,local,class=CODE,delta=2,merge=1
 10710                           global __ptext31
 10711  0842                     __ptext31:	;psect for function ___lwmod
 10712                           psect	text31
 10713                           	file	"/opt/microchip/xc8/v1.20/sources/pic/lwmod.c"
 10714                           	line	5
 10715                           	global	__size_of___lwmod
 10716  0043                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 10717                           	
 10718  0842                     ___lwmod:	
 10719                           ;incstack = 0
 10720                           	opt	stack 1
 10721                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10722                           	line	8
 10723                           	
 10724  0842                     i1l4125:	
 10725  0842  0879               	movf	(___lwmod@divisor+1),w
 10726  0843  0478               	iorwf	(___lwmod@divisor),w
 10727  0844  1903               	skipnz
 10728  0845  2847               	goto	u313_21
 10729  0846  2848               	goto	u313_20
 10730  0847                     u313_21:
 10731  0847  287D               	goto	i1l4143
 10732  0848                     u313_20:
 10733                           	line	9
 10734                           	
 10735  0848                     i1l4127:	
 10736  0848  01FD               	clrf	(___lwmod@counter)
 10737  0849  0AFD               	incf	(___lwmod@counter),f
 10738                           	line	10
 10739  084A  2857               	goto	i1l4133
 10740                           	
 10741  084B                     i1l1018:	
 10742                           	line	11
 10743                           	
 10744  084B                     i1l4129:	
 10745  084B  3001               	movlw	01h
 10746                           	
 10747  084C                     u314_25:
 10748  084C  1003               	clrc
 10749  084D  0DF8               	rlf	(___lwmod@divisor),f
 10750  084E  0DF9               	rlf	(___lwmod@divisor+1),f
 10751  084F  3EFF               	addlw	-1
 10752  0850  1D03               	skipz
 10753  0851  284C               	goto	u314_25
 10754                           	line	12
 10755                           	
 10756  0852                     i1l4131:	
 10757  0852  3001               	movlw	(01h)
 10758  0853  00FC               	movwf	(??___lwmod+0)+0
 10759  0854  087C               	movf	(??___lwmod+0)+0,w
 10760  0855  07FD               	addwf	(___lwmod@counter),f
 10761  0856  2857               	goto	i1l4133
 10762                           	line	13
 10763                           	
 10764  0857                     i1l1017:	
 10765                           	line	10
 10766                           	
 10767  0857                     i1l4133:	
 10768  0857  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
 10769  0858  285A               	goto	u315_21
 10770  0859  285B               	goto	u315_20
 10771  085A                     u315_21:
 10772  085A  284B               	goto	i1l4129
 10773  085B                     u315_20:
 10774  085B  285D               	goto	i1l4135
 10775                           	
 10776  085C                     i1l1019:	
 10777  085C  285D               	goto	i1l4135
 10778                           	line	14
 10779                           	
 10780  085D                     i1l1020:	
 10781                           	line	15
 10782                           	
 10783  085D                     i1l4135:	
 10784  085D  0879               	movf	(___lwmod@divisor+1),w
 10785  085E  027B               	subwf	(___lwmod@dividend+1),w
 10786  085F  1D03               	skipz
 10787  0860  2863               	goto	u316_25
 10788  0861  0878               	movf	(___lwmod@divisor),w
 10789  0862  027A               	subwf	(___lwmod@dividend),w
 10790  0863                     u316_25:
 10791  0863  1C03               	skipc
 10792  0864  2866               	goto	u316_21
 10793  0865  2867               	goto	u316_20
 10794  0866                     u316_21:
 10795  0866  286E               	goto	i1l4139
 10796  0867                     u316_20:
 10797                           	line	16
 10798                           	
 10799  0867                     i1l4137:	
 10800  0867  0878               	movf	(___lwmod@divisor),w
 10801  0868  02FA               	subwf	(___lwmod@dividend),f
 10802  0869  0879               	movf	(___lwmod@divisor+1),w
 10803  086A  1C03               	skipc
 10804  086B  03FB               	decf	(___lwmod@dividend+1),f
 10805  086C  02FB               	subwf	(___lwmod@dividend+1),f
 10806  086D  286E               	goto	i1l4139
 10807                           	
 10808  086E                     i1l1021:	
 10809                           	line	17
 10810                           	
 10811  086E                     i1l4139:	
 10812  086E  3001               	movlw	01h
 10813                           	
 10814  086F                     u317_25:
 10815  086F  1003               	clrc
 10816  0870  0CF9               	rrf	(___lwmod@divisor+1),f
 10817  0871  0CF8               	rrf	(___lwmod@divisor),f
 10818  0872  3EFF               	addlw	-1
 10819  0873  1D03               	skipz
 10820  0874  286F               	goto	u317_25
 10821                           	line	18
 10822                           	
 10823  0875                     i1l4141:	
 10824  0875  3001               	movlw	low(01h)
 10825  0876  02FD               	subwf	(___lwmod@counter),f
 10826  0877  1D03               	btfss	status,2
 10827  0878  287A               	goto	u318_21
 10828  0879  287B               	goto	u318_20
 10829  087A                     u318_21:
 10830  087A  285D               	goto	i1l4135
 10831  087B                     u318_20:
 10832  087B  287D               	goto	i1l4143
 10833                           	
 10834  087C                     i1l1022:	
 10835  087C  287D               	goto	i1l4143
 10836                           	line	19
 10837                           	
 10838  087D                     i1l1016:	
 10839                           	line	20
 10840                           	
 10841  087D                     i1l4143:	
 10842  087D  087B               	movf	(___lwmod@dividend+1),w
 10843  087E  01F9               	clrf	(?___lwmod+1)
 10844  087F  07F9               	addwf	(?___lwmod+1)
 10845  0880  087A               	movf	(___lwmod@dividend),w
 10846  0881  01F8               	clrf	(?___lwmod)
 10847  0882  07F8               	addwf	(?___lwmod)
 10848                           
 10849  0883  2884               	goto	i1l1023
 10850                           	
 10851  0884                     i1l4145:	
 10852                           	line	21
 10853                           	
 10854  0884                     i1l1023:	
 10855  0884  0008               	return
 10856                           	opt stack 0
 10857                           GLOBAL	__end_of___lwmod
 10858  0885                     	__end_of___lwmod:
 10859                           	signat	___lwmod,8314
 10860                           	global	___lwdiv
 10861                           
 10862 ;; *************** function ___lwdiv *****************
 10863 ;; Defined at:
 10864 ;;		line 5 in file "/opt/microchip/xc8/v1.20/sources/pic/lwdiv.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  divisor         2    0[COMMON] unsigned int 
 10867 ;;  dividend        2    2[COMMON] unsigned int 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;  quotient        2    5[COMMON] unsigned int 
 10870 ;;  counter         1    7[COMMON] unsigned char 
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  2    0[COMMON] unsigned int 
 10873 ;; Registers used:
 10874 ;;		wreg, status,2, status,0
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10880 ;;      Params:         4       0       0       0       0
 10881 ;;      Locals:         3       0       0       0       0
 10882 ;;      Temps:          1       0       0       0       0
 10883 ;;      Totals:         8       0       0       0       0
 10884 ;;Total ram usage:        8 bytes
 10885 ;; Hardware stack levels used:    1
 10886 ;; This function calls:
 10887 ;;		Nothing
 10888 ;; This function is called by:
 10889 ;;		_estado_executa_muda
 10890 ;;		_sprintf
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           psect	text32,local,class=CODE,delta=2,merge=1
 10894                           global __ptext32
 10895  0885                     __ptext32:	;psect for function ___lwdiv
 10896                           psect	text32
 10897                           	file	"/opt/microchip/xc8/v1.20/sources/pic/lwdiv.c"
 10898                           	line	5
 10899                           	global	__size_of___lwdiv
 10900  004D                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 10901                           	
 10902  0885                     ___lwdiv:	
 10903                           ;incstack = 0
 10904                           	opt	stack 1
 10905                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10906                           	line	9
 10907                           	
 10908  0885                     i1l3777:	
 10909  0885  01F5               	clrf	(___lwdiv@quotient)
 10910  0886  01F6               	clrf	(___lwdiv@quotient+1)
 10911                           	line	10
 10912                           	
 10913  0887                     i1l3779:	
 10914  0887  0871               	movf	(___lwdiv@divisor+1),w
 10915  0888  0470               	iorwf	(___lwdiv@divisor),w
 10916  0889  1903               	skipnz
 10917  088A  288C               	goto	u270_21
 10918  088B  288D               	goto	u270_20
 10919  088C                     u270_21:
 10920  088C  28CA               	goto	i1l3799
 10921  088D                     u270_20:
 10922                           	line	11
 10923                           	
 10924  088D                     i1l3781:	
 10925  088D  01F7               	clrf	(___lwdiv@counter)
 10926  088E  0AF7               	incf	(___lwdiv@counter),f
 10927                           	line	12
 10928  088F  289C               	goto	i1l3787
 10929                           	
 10930  0890                     i1l1008:	
 10931                           	line	13
 10932                           	
 10933  0890                     i1l3783:	
 10934  0890  3001               	movlw	01h
 10935                           	
 10936  0891                     u271_25:
 10937  0891  1003               	clrc
 10938  0892  0DF0               	rlf	(___lwdiv@divisor),f
 10939  0893  0DF1               	rlf	(___lwdiv@divisor+1),f
 10940  0894  3EFF               	addlw	-1
 10941  0895  1D03               	skipz
 10942  0896  2891               	goto	u271_25
 10943                           	line	14
 10944                           	
 10945  0897                     i1l3785:	
 10946  0897  3001               	movlw	(01h)
 10947  0898  00F4               	movwf	(??___lwdiv+0)+0
 10948  0899  0874               	movf	(??___lwdiv+0)+0,w
 10949  089A  07F7               	addwf	(___lwdiv@counter),f
 10950  089B  289C               	goto	i1l3787
 10951                           	line	15
 10952                           	
 10953  089C                     i1l1007:	
 10954                           	line	12
 10955                           	
 10956  089C                     i1l3787:	
 10957  089C  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
 10958  089D  289F               	goto	u272_21
 10959  089E  28A0               	goto	u272_20
 10960  089F                     u272_21:
 10961  089F  2890               	goto	i1l3783
 10962  08A0                     u272_20:
 10963  08A0  28A2               	goto	i1l3789
 10964                           	
 10965  08A1                     i1l1009:	
 10966  08A1  28A2               	goto	i1l3789
 10967                           	line	16
 10968                           	
 10969  08A2                     i1l1010:	
 10970                           	line	17
 10971                           	
 10972  08A2                     i1l3789:	
 10973  08A2  3001               	movlw	01h
 10974                           	
 10975  08A3                     u273_25:
 10976  08A3  1003               	clrc
 10977  08A4  0DF5               	rlf	(___lwdiv@quotient),f
 10978  08A5  0DF6               	rlf	(___lwdiv@quotient+1),f
 10979  08A6  3EFF               	addlw	-1
 10980  08A7  1D03               	skipz
 10981  08A8  28A3               	goto	u273_25
 10982                           	line	18
 10983  08A9  0871               	movf	(___lwdiv@divisor+1),w
 10984  08AA  0273               	subwf	(___lwdiv@dividend+1),w
 10985  08AB  1D03               	skipz
 10986  08AC  28AF               	goto	u274_25
 10987  08AD  0870               	movf	(___lwdiv@divisor),w
 10988  08AE  0272               	subwf	(___lwdiv@dividend),w
 10989  08AF                     u274_25:
 10990  08AF  1C03               	skipc
 10991  08B0  28B2               	goto	u274_21
 10992  08B1  28B3               	goto	u274_20
 10993  08B2                     u274_21:
 10994  08B2  28BB               	goto	i1l3795
 10995  08B3                     u274_20:
 10996                           	line	19
 10997                           	
 10998  08B3                     i1l3791:	
 10999  08B3  0870               	movf	(___lwdiv@divisor),w
 11000  08B4  02F2               	subwf	(___lwdiv@dividend),f
 11001  08B5  0871               	movf	(___lwdiv@divisor+1),w
 11002  08B6  1C03               	skipc
 11003  08B7  03F3               	decf	(___lwdiv@dividend+1),f
 11004  08B8  02F3               	subwf	(___lwdiv@dividend+1),f
 11005                           	line	20
 11006                           	
 11007  08B9                     i1l3793:	
 11008  08B9  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 11009  08BA  28BB               	goto	i1l3795
 11010                           	line	21
 11011                           	
 11012  08BB                     i1l1011:	
 11013                           	line	22
 11014                           	
 11015  08BB                     i1l3795:	
 11016  08BB  3001               	movlw	01h
 11017                           	
 11018  08BC                     u275_25:
 11019  08BC  1003               	clrc
 11020  08BD  0CF1               	rrf	(___lwdiv@divisor+1),f
 11021  08BE  0CF0               	rrf	(___lwdiv@divisor),f
 11022  08BF  3EFF               	addlw	-1
 11023  08C0  1D03               	skipz
 11024  08C1  28BC               	goto	u275_25
 11025                           	line	23
 11026                           	
 11027  08C2                     i1l3797:	
 11028  08C2  3001               	movlw	low(01h)
 11029  08C3  02F7               	subwf	(___lwdiv@counter),f
 11030  08C4  1D03               	btfss	status,2
 11031  08C5  28C7               	goto	u276_21
 11032  08C6  28C8               	goto	u276_20
 11033  08C7                     u276_21:
 11034  08C7  28A2               	goto	i1l3789
 11035  08C8                     u276_20:
 11036  08C8  28CA               	goto	i1l3799
 11037                           	
 11038  08C9                     i1l1012:	
 11039  08C9  28CA               	goto	i1l3799
 11040                           	line	24
 11041                           	
 11042  08CA                     i1l1006:	
 11043                           	line	25
 11044                           	
 11045  08CA                     i1l3799:	
 11046  08CA  0876               	movf	(___lwdiv@quotient+1),w
 11047  08CB  01F1               	clrf	(?___lwdiv+1)
 11048  08CC  07F1               	addwf	(?___lwdiv+1)
 11049  08CD  0875               	movf	(___lwdiv@quotient),w
 11050  08CE  01F0               	clrf	(?___lwdiv)
 11051  08CF  07F0               	addwf	(?___lwdiv)
 11052                           
 11053  08D0  28D1               	goto	i1l1013
 11054                           	
 11055  08D1                     i1l3801:	
 11056                           	line	26
 11057                           	
 11058  08D1                     i1l1013:	
 11059  08D1  0008               	return
 11060                           	opt stack 0
 11061                           GLOBAL	__end_of___lwdiv
 11062  08D2                     	__end_of___lwdiv:
 11063                           	signat	___lwdiv,8314
 11064                           	global	_div
 11065                           
 11066 ;; *************** function _div *****************
 11067 ;; Defined at:
 11068 ;;		line 5 in file "/opt/microchip/xc8/v1.20/sources/common/cdiv.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  number          2    9[COMMON] int 
 11071 ;;  denom           2   11[COMMON] int 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;  rv              4    0[BANK0 ] struct .
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  4    9[COMMON] struct .
 11076 ;; Registers used:
 11077 ;;		wreg, status,2, status,0, pclath, cstack
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11083 ;;      Params:         4       0       0       0       0
 11084 ;;      Locals:         0       4       0       0       0
 11085 ;;      Temps:          0       0       0       0       0
 11086 ;;      Totals:         4       4       0       0       0
 11087 ;;Total ram usage:        8 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; Hardware stack levels required when called:    1
 11090 ;; This function calls:
 11091 ;;		___awdiv
 11092 ;;		___awmod
 11093 ;; This function is called by:
 11094 ;;		_adcon_mostra
 11095 ;; This function uses a non-reentrant model
 11096 ;;
 11097                           psect	text33,local,class=CODE,delta=2,merge=1
 11098                           global __ptext33
 11099  0806                     __ptext33:	;psect for function _div
 11100                           psect	text33
 11101                           	file	"/opt/microchip/xc8/v1.20/sources/common/cdiv.c"
 11102                           	line	5
 11103                           	global	__size_of_div
 11104  003C                     	__size_of_div	equ	__end_of_div-_div
 11105                           	
 11106  0806                     _div:	
 11107                           ;incstack = 0
 11108                           	opt	stack 0
 11109                           ; Regs used in _div: [wreg+status,2+status,0+pclath+cstack]
 11110                           	line	8
 11111                           	
 11112  0806                     i1l4093:	
 11113  0806  087C               	movf	(div@denom+1),w
 11114  0807  01F1               	clrf	(?___awdiv+1)
 11115  0808  07F1               	addwf	(?___awdiv+1)
 11116  0809  087B               	movf	(div@denom),w
 11117  080A  01F0               	clrf	(?___awdiv)
 11118  080B  07F0               	addwf	(?___awdiv)
 11119                           
 11120  080C  087A               	movf	(div@number+1),w
 11121  080D  01F3               	clrf	1+(?___awdiv)+02h
 11122  080E  07F3               	addwf	1+(?___awdiv)+02h
 11123  080F  0879               	movf	(div@number),w
 11124  0810  01F2               	clrf	0+(?___awdiv)+02h
 11125  0811  07F2               	addwf	0+(?___awdiv)+02h
 11126                           
 11127  0812  120A  158A  22F6   	fcall	___awdiv
              120A  158A         
 11128  0817  0871               	movf	(1+(?___awdiv)),w
 11129  0818  1283               	bcf	status, 5	;RP0=0, select bank0
 11130  0819  1303               	bcf	status, 6	;RP1=0, select bank0
 11131  081A  01A3               	clrf	1+(div@rv)+02h
 11132  081B  07A3               	addwf	1+(div@rv)+02h
 11133  081C  0870               	movf	(0+(?___awdiv)),w
 11134  081D  01A2               	clrf	0+(div@rv)+02h
 11135  081E  07A2               	addwf	0+(div@rv)+02h
 11136                           
 11137                           	line	9
 11138  081F  087C               	movf	(div@denom+1),w
 11139  0820  01F1               	clrf	(?___awmod+1)
 11140  0821  07F1               	addwf	(?___awmod+1)
 11141  0822  087B               	movf	(div@denom),w
 11142  0823  01F0               	clrf	(?___awmod)
 11143  0824  07F0               	addwf	(?___awmod)
 11144                           
 11145  0825  087A               	movf	(div@number+1),w
 11146  0826  01F3               	clrf	1+(?___awmod)+02h
 11147  0827  07F3               	addwf	1+(?___awmod)+02h
 11148  0828  0879               	movf	(div@number),w
 11149  0829  01F2               	clrf	0+(?___awmod)+02h
 11150  082A  07F2               	addwf	0+(?___awmod)+02h
 11151                           
 11152  082B  120A  158A  2229   	fcall	___awmod
              120A  158A         
 11153  0830  0871               	movf	(1+(?___awmod)),w
 11154  0831  1283               	bcf	status, 5	;RP0=0, select bank0
 11155  0832  1303               	bcf	status, 6	;RP1=0, select bank0
 11156  0833  01A1               	clrf	(div@rv+1)
 11157  0834  07A1               	addwf	(div@rv+1)
 11158  0835  0870               	movf	(0+(?___awmod)),w
 11159  0836  01A0               	clrf	(div@rv)
 11160  0837  07A0               	addwf	(div@rv)
 11161                           
 11162                           	line	10
 11163                           	
 11164  0838                     i1l4095:	
 11165  0838  0823               	movf	(div@rv+3),w
 11166  0839  00FC               	movwf	(?_div+3)
 11167  083A  0822               	movf	(div@rv+2),w
 11168  083B  00FB               	movwf	(?_div+2)
 11169  083C  0821               	movf	(div@rv+1),w
 11170  083D  00FA               	movwf	(?_div+1)
 11171  083E  0820               	movf	(div@rv),w
 11172  083F  00F9               	movwf	(?_div)
 11173                           
 11174  0840  2841               	goto	i1l822
 11175                           	
 11176  0841                     i1l4097:	
 11177                           	line	11
 11178                           	
 11179  0841                     i1l822:	
 11180  0841  0008               	return
 11181                           	opt stack 0
 11182                           GLOBAL	__end_of_div
 11183  0842                     	__end_of_div:
 11184                           	signat	_div,8316
 11185                           	global	___awmod
 11186                           
 11187 ;; *************** function ___awmod *****************
 11188 ;; Defined at:
 11189 ;;		line 5 in file "/opt/microchip/xc8/v1.20/sources/pic/awmod.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;  divisor         2    0[COMMON] int 
 11192 ;;  dividend        2    2[COMMON] int 
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;  sign            1    6[COMMON] unsigned char 
 11195 ;;  counter         1    5[COMMON] unsigned char 
 11196 ;; Return value:  Size  Location     Type
 11197 ;;                  2    0[COMMON] int 
 11198 ;; Registers used:
 11199 ;;		wreg, status,2, status,0
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11205 ;;      Params:         4       0       0       0       0
 11206 ;;      Locals:         2       0       0       0       0
 11207 ;;      Temps:          1       0       0       0       0
 11208 ;;      Totals:         7       0       0       0       0
 11209 ;;Total ram usage:        7 bytes
 11210 ;; Hardware stack levels used:    1
 11211 ;; This function calls:
 11212 ;;		Nothing
 11213 ;; This function is called by:
 11214 ;;		_div
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           psect	text34,local,class=CODE,delta=2,merge=1
 11218                           global __ptext34
 11219  0A29                     __ptext34:	;psect for function ___awmod
 11220                           psect	text34
 11221                           	file	"/opt/microchip/xc8/v1.20/sources/pic/awmod.c"
 11222                           	line	5
 11223                           	global	__size_of___awmod
 11224  0064                     	__size_of___awmod	equ	__end_of___awmod-___awmod
 11225                           	
 11226  0A29                     ___awmod:	
 11227                           ;incstack = 0
 11228                           	opt	stack 0
 11229                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11230                           	line	8
 11231                           	
 11232  0A29                     i1l3459:	
 11233  0A29  01F6               	clrf	(___awmod@sign)
 11234                           	line	9
 11235                           	
 11236  0A2A                     i1l3461:	
 11237  0A2A  1FF3               	btfss	(___awmod@dividend+1),7
 11238  0A2B  2A2D               	goto	u194_21
 11239  0A2C  2A2E               	goto	u194_20
 11240  0A2D                     u194_21:
 11241  0A2D  2A36               	goto	i1l3467
 11242  0A2E                     u194_20:
 11243                           	line	10
 11244                           	
 11245  0A2E                     i1l3463:	
 11246  0A2E  09F2               	comf	(___awmod@dividend),f
 11247  0A2F  09F3               	comf	(___awmod@dividend+1),f
 11248  0A30  0AF2               	incf	(___awmod@dividend),f
 11249  0A31  1903               	skipnz
 11250  0A32  0AF3               	incf	(___awmod@dividend+1),f
 11251                           	line	11
 11252                           	
 11253  0A33                     i1l3465:	
 11254  0A33  01F6               	clrf	(___awmod@sign)
 11255  0A34  0AF6               	incf	(___awmod@sign),f
 11256  0A35  2A36               	goto	i1l3467
 11257                           	line	12
 11258                           	
 11259  0A36                     i1l797:	
 11260                           	line	13
 11261                           	
 11262  0A36                     i1l3467:	
 11263  0A36  1FF1               	btfss	(___awmod@divisor+1),7
 11264  0A37  2A39               	goto	u195_21
 11265  0A38  2A3A               	goto	u195_20
 11266  0A39                     u195_21:
 11267  0A39  2A40               	goto	i1l3471
 11268  0A3A                     u195_20:
 11269                           	line	14
 11270                           	
 11271  0A3A                     i1l3469:	
 11272  0A3A  09F0               	comf	(___awmod@divisor),f
 11273  0A3B  09F1               	comf	(___awmod@divisor+1),f
 11274  0A3C  0AF0               	incf	(___awmod@divisor),f
 11275  0A3D  1903               	skipnz
 11276  0A3E  0AF1               	incf	(___awmod@divisor+1),f
 11277  0A3F  2A40               	goto	i1l3471
 11278                           	
 11279  0A40                     i1l798:	
 11280                           	line	15
 11281                           	
 11282  0A40                     i1l3471:	
 11283  0A40  0871               	movf	(___awmod@divisor+1),w
 11284  0A41  0470               	iorwf	(___awmod@divisor),w
 11285  0A42  1903               	skipnz
 11286  0A43  2A45               	goto	u196_21
 11287  0A44  2A46               	goto	u196_20
 11288  0A45                     u196_21:
 11289  0A45  2A7B               	goto	i1l3489
 11290  0A46                     u196_20:
 11291                           	line	16
 11292                           	
 11293  0A46                     i1l3473:	
 11294  0A46  01F5               	clrf	(___awmod@counter)
 11295  0A47  0AF5               	incf	(___awmod@counter),f
 11296                           	line	17
 11297  0A48  2A55               	goto	i1l3479
 11298                           	
 11299  0A49                     i1l801:	
 11300                           	line	18
 11301                           	
 11302  0A49                     i1l3475:	
 11303  0A49  3001               	movlw	01h
 11304                           	
 11305  0A4A                     u197_25:
 11306  0A4A  1003               	clrc
 11307  0A4B  0DF0               	rlf	(___awmod@divisor),f
 11308  0A4C  0DF1               	rlf	(___awmod@divisor+1),f
 11309  0A4D  3EFF               	addlw	-1
 11310  0A4E  1D03               	skipz
 11311  0A4F  2A4A               	goto	u197_25
 11312                           	line	19
 11313                           	
 11314  0A50                     i1l3477:	
 11315  0A50  3001               	movlw	(01h)
 11316  0A51  00F4               	movwf	(??___awmod+0)+0
 11317  0A52  0874               	movf	(??___awmod+0)+0,w
 11318  0A53  07F5               	addwf	(___awmod@counter),f
 11319  0A54  2A55               	goto	i1l3479
 11320                           	line	20
 11321                           	
 11322  0A55                     i1l800:	
 11323                           	line	17
 11324                           	
 11325  0A55                     i1l3479:	
 11326  0A55  1FF1               	btfss	(___awmod@divisor+1),(15)&7
 11327  0A56  2A58               	goto	u198_21
 11328  0A57  2A59               	goto	u198_20
 11329  0A58                     u198_21:
 11330  0A58  2A49               	goto	i1l3475
 11331  0A59                     u198_20:
 11332  0A59  2A5B               	goto	i1l3481
 11333                           	
 11334  0A5A                     i1l802:	
 11335  0A5A  2A5B               	goto	i1l3481
 11336                           	line	21
 11337                           	
 11338  0A5B                     i1l803:	
 11339                           	line	22
 11340                           	
 11341  0A5B                     i1l3481:	
 11342  0A5B  0871               	movf	(___awmod@divisor+1),w
 11343  0A5C  0273               	subwf	(___awmod@dividend+1),w
 11344  0A5D  1D03               	skipz
 11345  0A5E  2A61               	goto	u199_25
 11346  0A5F  0870               	movf	(___awmod@divisor),w
 11347  0A60  0272               	subwf	(___awmod@dividend),w
 11348  0A61                     u199_25:
 11349  0A61  1C03               	skipc
 11350  0A62  2A64               	goto	u199_21
 11351  0A63  2A65               	goto	u199_20
 11352  0A64                     u199_21:
 11353  0A64  2A6C               	goto	i1l3485
 11354  0A65                     u199_20:
 11355                           	line	23
 11356                           	
 11357  0A65                     i1l3483:	
 11358  0A65  0870               	movf	(___awmod@divisor),w
 11359  0A66  02F2               	subwf	(___awmod@dividend),f
 11360  0A67  0871               	movf	(___awmod@divisor+1),w
 11361  0A68  1C03               	skipc
 11362  0A69  03F3               	decf	(___awmod@dividend+1),f
 11363  0A6A  02F3               	subwf	(___awmod@dividend+1),f
 11364  0A6B  2A6C               	goto	i1l3485
 11365                           	
 11366  0A6C                     i1l804:	
 11367                           	line	24
 11368                           	
 11369  0A6C                     i1l3485:	
 11370  0A6C  3001               	movlw	01h
 11371                           	
 11372  0A6D                     u200_25:
 11373  0A6D  1003               	clrc
 11374  0A6E  0CF1               	rrf	(___awmod@divisor+1),f
 11375  0A6F  0CF0               	rrf	(___awmod@divisor),f
 11376  0A70  3EFF               	addlw	-1
 11377  0A71  1D03               	skipz
 11378  0A72  2A6D               	goto	u200_25
 11379                           	line	25
 11380                           	
 11381  0A73                     i1l3487:	
 11382  0A73  3001               	movlw	low(01h)
 11383  0A74  02F5               	subwf	(___awmod@counter),f
 11384  0A75  1D03               	btfss	status,2
 11385  0A76  2A78               	goto	u201_21
 11386  0A77  2A79               	goto	u201_20
 11387  0A78                     u201_21:
 11388  0A78  2A5B               	goto	i1l3481
 11389  0A79                     u201_20:
 11390  0A79  2A7B               	goto	i1l3489
 11391                           	
 11392  0A7A                     i1l805:	
 11393  0A7A  2A7B               	goto	i1l3489
 11394                           	line	26
 11395                           	
 11396  0A7B                     i1l799:	
 11397                           	line	27
 11398                           	
 11399  0A7B                     i1l3489:	
 11400  0A7B  0876               	movf	(___awmod@sign),w
 11401  0A7C  1D03               	skipz
 11402  0A7D  2A7F               	goto	u202_20
 11403  0A7E  2A85               	goto	i1l3493
 11404  0A7F                     u202_20:
 11405                           	line	28
 11406                           	
 11407  0A7F                     i1l3491:	
 11408  0A7F  09F2               	comf	(___awmod@dividend),f
 11409  0A80  09F3               	comf	(___awmod@dividend+1),f
 11410  0A81  0AF2               	incf	(___awmod@dividend),f
 11411  0A82  1903               	skipnz
 11412  0A83  0AF3               	incf	(___awmod@dividend+1),f
 11413  0A84  2A85               	goto	i1l3493
 11414                           	
 11415  0A85                     i1l806:	
 11416                           	line	29
 11417                           	
 11418  0A85                     i1l3493:	
 11419  0A85  0873               	movf	(___awmod@dividend+1),w
 11420  0A86  01F1               	clrf	(?___awmod+1)
 11421  0A87  07F1               	addwf	(?___awmod+1)
 11422  0A88  0872               	movf	(___awmod@dividend),w
 11423  0A89  01F0               	clrf	(?___awmod)
 11424  0A8A  07F0               	addwf	(?___awmod)
 11425                           
 11426  0A8B  2A8C               	goto	i1l807
 11427                           	
 11428  0A8C                     i1l3495:	
 11429                           	line	30
 11430                           	
 11431  0A8C                     i1l807:	
 11432  0A8C  0008               	return
 11433                           	opt stack 0
 11434                           GLOBAL	__end_of___awmod
 11435  0A8D                     	__end_of___awmod:
 11436                           	signat	___awmod,8314
 11437                           	global	___awdiv
 11438                           
 11439 ;; *************** function ___awdiv *****************
 11440 ;; Defined at:
 11441 ;;		line 5 in file "/opt/microchip/xc8/v1.20/sources/pic/awdiv.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;  divisor         2    0[COMMON] int 
 11444 ;;  dividend        2    2[COMMON] int 
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;  quotient        2    7[COMMON] int 
 11447 ;;  sign            1    6[COMMON] unsigned char 
 11448 ;;  counter         1    5[COMMON] unsigned char 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  2    0[COMMON] int 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2, status,0
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11458 ;;      Params:         4       0       0       0       0
 11459 ;;      Locals:         4       0       0       0       0
 11460 ;;      Temps:          1       0       0       0       0
 11461 ;;      Totals:         9       0       0       0       0
 11462 ;;Total ram usage:        9 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_div
 11468 ;; This function uses a non-reentrant model
 11469 ;;
 11470                           psect	text35,local,class=CODE,delta=2,merge=1
 11471                           global __ptext35
 11472  0AF6                     __ptext35:	;psect for function ___awdiv
 11473                           psect	text35
 11474                           	file	"/opt/microchip/xc8/v1.20/sources/pic/awdiv.c"
 11475                           	line	5
 11476                           	global	__size_of___awdiv
 11477  0072                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 11478                           	
 11479  0AF6                     ___awdiv:	
 11480                           ;incstack = 0
 11481                           	opt	stack 0
 11482                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11483                           	line	9
 11484                           	
 11485  0AF6                     i1l3415:	
 11486  0AF6  01F6               	clrf	(___awdiv@sign)
 11487                           	line	10
 11488                           	
 11489  0AF7                     i1l3417:	
 11490  0AF7  1FF1               	btfss	(___awdiv@divisor+1),7
 11491  0AF8  2AFA               	goto	u184_21
 11492  0AF9  2AFB               	goto	u184_20
 11493  0AFA                     u184_21:
 11494  0AFA  2B03               	goto	i1l3423
 11495  0AFB                     u184_20:
 11496                           	line	11
 11497                           	
 11498  0AFB                     i1l3419:	
 11499  0AFB  09F0               	comf	(___awdiv@divisor),f
 11500  0AFC  09F1               	comf	(___awdiv@divisor+1),f
 11501  0AFD  0AF0               	incf	(___awdiv@divisor),f
 11502  0AFE  1903               	skipnz
 11503  0AFF  0AF1               	incf	(___awdiv@divisor+1),f
 11504                           	line	12
 11505                           	
 11506  0B00                     i1l3421:	
 11507  0B00  01F6               	clrf	(___awdiv@sign)
 11508  0B01  0AF6               	incf	(___awdiv@sign),f
 11509  0B02  2B03               	goto	i1l3423
 11510                           	line	13
 11511                           	
 11512  0B03                     i1l784:	
 11513                           	line	14
 11514                           	
 11515  0B03                     i1l3423:	
 11516  0B03  1FF3               	btfss	(___awdiv@dividend+1),7
 11517  0B04  2B06               	goto	u185_21
 11518  0B05  2B07               	goto	u185_20
 11519  0B06                     u185_21:
 11520  0B06  2B11               	goto	i1l3429
 11521  0B07                     u185_20:
 11522                           	line	15
 11523                           	
 11524  0B07                     i1l3425:	
 11525  0B07  09F2               	comf	(___awdiv@dividend),f
 11526  0B08  09F3               	comf	(___awdiv@dividend+1),f
 11527  0B09  0AF2               	incf	(___awdiv@dividend),f
 11528  0B0A  1903               	skipnz
 11529  0B0B  0AF3               	incf	(___awdiv@dividend+1),f
 11530                           	line	16
 11531                           	
 11532  0B0C                     i1l3427:	
 11533  0B0C  3001               	movlw	(01h)
 11534  0B0D  00F4               	movwf	(??___awdiv+0)+0
 11535  0B0E  0874               	movf	(??___awdiv+0)+0,w
 11536  0B0F  06F6               	xorwf	(___awdiv@sign),f
 11537  0B10  2B11               	goto	i1l3429
 11538                           	line	17
 11539                           	
 11540  0B11                     i1l785:	
 11541                           	line	18
 11542                           	
 11543  0B11                     i1l3429:	
 11544  0B11  01F7               	clrf	(___awdiv@quotient)
 11545  0B12  01F8               	clrf	(___awdiv@quotient+1)
 11546                           	line	19
 11547                           	
 11548  0B13                     i1l3431:	
 11549  0B13  0871               	movf	(___awdiv@divisor+1),w
 11550  0B14  0470               	iorwf	(___awdiv@divisor),w
 11551  0B15  1903               	skipnz
 11552  0B16  2B18               	goto	u186_21
 11553  0B17  2B19               	goto	u186_20
 11554  0B18                     u186_21:
 11555  0B18  2B56               	goto	i1l3451
 11556  0B19                     u186_20:
 11557                           	line	20
 11558                           	
 11559  0B19                     i1l3433:	
 11560  0B19  01F5               	clrf	(___awdiv@counter)
 11561  0B1A  0AF5               	incf	(___awdiv@counter),f
 11562                           	line	21
 11563  0B1B  2B28               	goto	i1l3439
 11564                           	
 11565  0B1C                     i1l788:	
 11566                           	line	22
 11567                           	
 11568  0B1C                     i1l3435:	
 11569  0B1C  3001               	movlw	01h
 11570                           	
 11571  0B1D                     u187_25:
 11572  0B1D  1003               	clrc
 11573  0B1E  0DF0               	rlf	(___awdiv@divisor),f
 11574  0B1F  0DF1               	rlf	(___awdiv@divisor+1),f
 11575  0B20  3EFF               	addlw	-1
 11576  0B21  1D03               	skipz
 11577  0B22  2B1D               	goto	u187_25
 11578                           	line	23
 11579                           	
 11580  0B23                     i1l3437:	
 11581  0B23  3001               	movlw	(01h)
 11582  0B24  00F4               	movwf	(??___awdiv+0)+0
 11583  0B25  0874               	movf	(??___awdiv+0)+0,w
 11584  0B26  07F5               	addwf	(___awdiv@counter),f
 11585  0B27  2B28               	goto	i1l3439
 11586                           	line	24
 11587                           	
 11588  0B28                     i1l787:	
 11589                           	line	21
 11590                           	
 11591  0B28                     i1l3439:	
 11592  0B28  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
 11593  0B29  2B2B               	goto	u188_21
 11594  0B2A  2B2C               	goto	u188_20
 11595  0B2B                     u188_21:
 11596  0B2B  2B1C               	goto	i1l3435
 11597  0B2C                     u188_20:
 11598  0B2C  2B2E               	goto	i1l3441
 11599                           	
 11600  0B2D                     i1l789:	
 11601  0B2D  2B2E               	goto	i1l3441
 11602                           	line	25
 11603                           	
 11604  0B2E                     i1l790:	
 11605                           	line	26
 11606                           	
 11607  0B2E                     i1l3441:	
 11608  0B2E  3001               	movlw	01h
 11609                           	
 11610  0B2F                     u189_25:
 11611  0B2F  1003               	clrc
 11612  0B30  0DF7               	rlf	(___awdiv@quotient),f
 11613  0B31  0DF8               	rlf	(___awdiv@quotient+1),f
 11614  0B32  3EFF               	addlw	-1
 11615  0B33  1D03               	skipz
 11616  0B34  2B2F               	goto	u189_25
 11617                           	line	27
 11618  0B35  0871               	movf	(___awdiv@divisor+1),w
 11619  0B36  0273               	subwf	(___awdiv@dividend+1),w
 11620  0B37  1D03               	skipz
 11621  0B38  2B3B               	goto	u190_25
 11622  0B39  0870               	movf	(___awdiv@divisor),w
 11623  0B3A  0272               	subwf	(___awdiv@dividend),w
 11624  0B3B                     u190_25:
 11625  0B3B  1C03               	skipc
 11626  0B3C  2B3E               	goto	u190_21
 11627  0B3D  2B3F               	goto	u190_20
 11628  0B3E                     u190_21:
 11629  0B3E  2B47               	goto	i1l3447
 11630  0B3F                     u190_20:
 11631                           	line	28
 11632                           	
 11633  0B3F                     i1l3443:	
 11634  0B3F  0870               	movf	(___awdiv@divisor),w
 11635  0B40  02F2               	subwf	(___awdiv@dividend),f
 11636  0B41  0871               	movf	(___awdiv@divisor+1),w
 11637  0B42  1C03               	skipc
 11638  0B43  03F3               	decf	(___awdiv@dividend+1),f
 11639  0B44  02F3               	subwf	(___awdiv@dividend+1),f
 11640                           	line	29
 11641                           	
 11642  0B45                     i1l3445:	
 11643  0B45  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 11644  0B46  2B47               	goto	i1l3447
 11645                           	line	30
 11646                           	
 11647  0B47                     i1l791:	
 11648                           	line	31
 11649                           	
 11650  0B47                     i1l3447:	
 11651  0B47  3001               	movlw	01h
 11652                           	
 11653  0B48                     u191_25:
 11654  0B48  1003               	clrc
 11655  0B49  0CF1               	rrf	(___awdiv@divisor+1),f
 11656  0B4A  0CF0               	rrf	(___awdiv@divisor),f
 11657  0B4B  3EFF               	addlw	-1
 11658  0B4C  1D03               	skipz
 11659  0B4D  2B48               	goto	u191_25
 11660                           	line	32
 11661                           	
 11662  0B4E                     i1l3449:	
 11663  0B4E  3001               	movlw	low(01h)
 11664  0B4F  02F5               	subwf	(___awdiv@counter),f
 11665  0B50  1D03               	btfss	status,2
 11666  0B51  2B53               	goto	u192_21
 11667  0B52  2B54               	goto	u192_20
 11668  0B53                     u192_21:
 11669  0B53  2B2E               	goto	i1l3441
 11670  0B54                     u192_20:
 11671  0B54  2B56               	goto	i1l3451
 11672                           	
 11673  0B55                     i1l792:	
 11674  0B55  2B56               	goto	i1l3451
 11675                           	line	33
 11676                           	
 11677  0B56                     i1l786:	
 11678                           	line	34
 11679                           	
 11680  0B56                     i1l3451:	
 11681  0B56  0876               	movf	(___awdiv@sign),w
 11682  0B57  1D03               	skipz
 11683  0B58  2B5A               	goto	u193_20
 11684  0B59  2B60               	goto	i1l3455
 11685  0B5A                     u193_20:
 11686                           	line	35
 11687                           	
 11688  0B5A                     i1l3453:	
 11689  0B5A  09F7               	comf	(___awdiv@quotient),f
 11690  0B5B  09F8               	comf	(___awdiv@quotient+1),f
 11691  0B5C  0AF7               	incf	(___awdiv@quotient),f
 11692  0B5D  1903               	skipnz
 11693  0B5E  0AF8               	incf	(___awdiv@quotient+1),f
 11694  0B5F  2B60               	goto	i1l3455
 11695                           	
 11696  0B60                     i1l793:	
 11697                           	line	36
 11698                           	
 11699  0B60                     i1l3455:	
 11700  0B60  0878               	movf	(___awdiv@quotient+1),w
 11701  0B61  01F1               	clrf	(?___awdiv+1)
 11702  0B62  07F1               	addwf	(?___awdiv+1)
 11703  0B63  0877               	movf	(___awdiv@quotient),w
 11704  0B64  01F0               	clrf	(?___awdiv)
 11705  0B65  07F0               	addwf	(?___awdiv)
 11706                           
 11707  0B66  2B67               	goto	i1l794
 11708                           	
 11709  0B67                     i1l3457:	
 11710                           	line	37
 11711                           	
 11712  0B67                     i1l794:	
 11713  0B67  0008               	return
 11714                           	opt stack 0
 11715                           GLOBAL	__end_of___awdiv
 11716  0B68                     	__end_of___awdiv:
 11717                           	signat	___awdiv,8314
 11718                           	global	_adcon_ler_canal
 11719                           
 11720 ;; *************** function _adcon_ler_canal *****************
 11721 ;; Defined at:
 11722 ;;		line 79 in file "adcon.c"
 11723 ;; Parameters:    Size  Location     Type
 11724 ;;  cnl             1    wreg     unsigned char 
 11725 ;; Auto vars:     Size  Location     Type
 11726 ;;  cnl             1    6[COMMON] unsigned char 
 11727 ;;  i               2   11[COMMON] unsigned int 
 11728 ;;  acc             4    7[COMMON] unsigned long 
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  2    0[COMMON] unsigned int 
 11731 ;; Registers used:
 11732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11738 ;;      Params:         2       0       0       0       0
 11739 ;;      Locals:         7       0       0       0       0
 11740 ;;      Temps:          4       0       0       0       0
 11741 ;;      Totals:        13       0       0       0       0
 11742 ;;Total ram usage:       13 bytes
 11743 ;; Hardware stack levels used:    2
 11744 ;; This function calls:
 11745 ;;		Nothing
 11746 ;; This function is called by:
 11747 ;;		_adcon_captura_grava
 11748 ;;		_estado_menu_principal
 11749 ;;		_mq6_calibrar
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           psect	text36,local,class=CODE,delta=2,merge=1
 11753                           global __ptext36
 11754  0C5D                     __ptext36:	;psect for function _adcon_ler_canal
 11755                           psect	text36
 11756                           	file	"adcon.c"
 11757                           	line	79
 11758                           	global	__size_of_adcon_ler_canal
 11759  0087                     	__size_of_adcon_ler_canal	equ	__end_of_adcon_ler_canal-_adcon_ler_canal
 11760                           	
 11761  0C5D                     _adcon_ler_canal:	
 11762                           ;incstack = 0
 11763                           	opt	stack 1
 11764                           ; Regs used in _adcon_ler_canal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
 11765                           ;adcon_ler_canal@cnl stored from wreg
 11766                           	line	92
 11767  0C5D  00F6               	movwf	(adcon_ler_canal@cnl)
 11768                           	
 11769  0C5E                     i1l4075:	
 11770                           ;adcon.c: 92: uint32_t acc = 0;
 11771  0C5E  3000               	movlw	0
 11772  0C5F  00FA               	movwf	(adcon_ler_canal@acc+3)
 11773  0C60  3000               	movlw	0
 11774  0C61  00F9               	movwf	(adcon_ler_canal@acc+2)
 11775  0C62  3000               	movlw	0
 11776  0C63  00F8               	movwf	(adcon_ler_canal@acc+1)
 11777  0C64  3000               	movlw	0
 11778  0C65  00F7               	movwf	(adcon_ler_canal@acc)
 11779                           
 11780                           	line	93
 11781                           	
 11782  0C66                     i1l4077:	
 11783                           ;adcon.c: 93: ADCON0bits.CHS = canais[cnl];
 11784  0C66  0876               	movf	(adcon_ler_canal@cnl),w
 11785  0C67  3E4C               	addlw	low(_canais|8000h)
 11786  0C68  0084               	movwf	fsr0
 11787  0C69  3085               	movlw	high(_canais|8000h)
 11788  0C6A  1803               	skipnc
 11789  0C6B  3E01               	addlw	1
 11790  0C6C  1283               	bcf	status, 5	;RP0=0, select bank0
 11791  0C6D  1303               	bcf	status, 6	;RP1=0, select bank0
 11792  0C6E  00FF               	movwf	btemp+1
 11793  0C6F  120A  118A  2500   	fcall	stringtab
              120A  158A         
 11794  0C74  00F2               	movwf	(??_adcon_ler_canal+0)+0
 11795  0C75  0DF2               	rlf	(??_adcon_ler_canal+0)+0,f
 11796  0C76  0DF2               	rlf	(??_adcon_ler_canal+0)+0,f
 11797  0C77  081F               	movf	(31),w	;volatile
 11798  0C78  0672               	xorwf	(??_adcon_ler_canal+0)+0,w
 11799  0C79  39C3               	andlw	not (((1<<4)-1)<<2)
 11800  0C7A  0672               	xorwf	(??_adcon_ler_canal+0)+0,w
 11801  0C7B  009F               	movwf	(31)	;volatile
 11802                           	line	94
 11803                           	
 11804  0C7C                     i1l4079:	
 11805                           ;adcon.c: 94: _delay((unsigned long)((20)*(4000000/4000000.0)));
 11806                           	opt asmopt_off
 11807  0C7C  3006               movlw	6
 11808  0C7D  00F2               movwf	(??_adcon_ler_canal+0)+0,f
 11809  0C7E                     u402_27:
 11810  0C7E  0BF2               decfsz	(??_adcon_ler_canal+0)+0,f
 11811  0C7F  2C7E               	goto	u402_27
 11812  0C80  0000               	nop
 11813                           opt asmopt_on
 11814                           
 11815                           	line	96
 11816                           	
 11817  0C81                     i1l4081:	
 11818                           ;adcon.c: 96: for (uint16_t i = 0; i < 32; i++) {
 11819  0C81  01FB               	clrf	(adcon_ler_canal@i)
 11820  0C82  01FC               	clrf	(adcon_ler_canal@i+1)
 11821                           	
 11822  0C83                     i1l4083:	
 11823  0C83  3000               	movlw	high(020h)
 11824  0C84  027C               	subwf	(adcon_ler_canal@i+1),w
 11825  0C85  3020               	movlw	low(020h)
 11826  0C86  1903               	skipnz
 11827  0C87  027B               	subwf	(adcon_ler_canal@i),w
 11828  0C88  1C03               	skipc
 11829  0C89  2C8B               	goto	u304_21
 11830  0C8A  2C8C               	goto	u304_20
 11831  0C8B                     u304_21:
 11832  0C8B  2C8E               	goto	i1l253
 11833  0C8C                     u304_20:
 11834  0C8C  2CCB               	goto	i1l4089
 11835                           	
 11836  0C8D                     i1l4085:	
 11837  0C8D  2CCB               	goto	i1l4089
 11838                           	
 11839  0C8E                     i1l253:	
 11840                           	line	98
 11841                           ;adcon.c: 98: ADCON0bits.GO_nDONE = 1;
 11842  0C8E  1283               	bcf	status, 5	;RP0=0, select bank0
 11843  0C8F  1303               	bcf	status, 6	;RP1=0, select bank0
 11844  0C90  149F               	bsf	(31),1	;volatile
 11845                           	line	99
 11846                           ;adcon.c: 99: while (ADCON0bits.GO_nDONE);
 11847  0C91  2C92               	goto	i1l255
 11848                           	
 11849  0C92                     i1l256:	
 11850                           	
 11851  0C92                     i1l255:	
 11852  0C92  189F               	btfsc	(31),1	;volatile
 11853  0C93  2C95               	goto	u305_21
 11854  0C94  2C96               	goto	u305_20
 11855  0C95                     u305_21:
 11856  0C95  2C92               	goto	i1l255
 11857  0C96                     u305_20:
 11858  0C96  2C97               	goto	i1l4087
 11859                           	
 11860  0C97                     i1l257:	
 11861                           	line	100
 11862                           	
 11863  0C97                     i1l4087:	
 11864                           ;adcon.c: 100: acc += ((ADRESH << 8) + ADRESL);
 11865  0C97  1683               	bsf	status, 5	;RP0=1, select bank1
 11866  0C98  1303               	bcf	status, 6	;RP1=0, select bank1
 11867  0C99  081E               	movf	(158)^080h,w	;volatile
 11868  0C9A  00F2               	movwf	((??_adcon_ler_canal+0)+0)
 11869  0C9B  1283               	bcf	status, 5	;RP0=0, select bank0
 11870  0C9C  1303               	bcf	status, 6	;RP1=0, select bank0
 11871  0C9D  081E               	movf	(30),w	;volatile
 11872  0C9E  00F3               	movwf	((??_adcon_ler_canal+0)+0+1)
 11873  0C9F  3000               	movlw	0
 11874  0CA0  1BF3               	btfsc	((??_adcon_ler_canal+0)+0+1),7
 11875  0CA1  30FF               	movlw	255
 11876  0CA2  00F4               	movwf	((??_adcon_ler_canal+0)+0+2)
 11877  0CA3  00F5               	movwf	((??_adcon_ler_canal+0)+0+3)
 11878  0CA4  0872               	movf	0+(??_adcon_ler_canal+0)+0,w
 11879  0CA5  07F7               	addwf	(adcon_ler_canal@acc),f
 11880  0CA6  0873               	movf	1+(??_adcon_ler_canal+0)+0,w
 11881  0CA7  1103               	clrz
 11882  0CA8  1803               	skipnc
 11883  0CA9  3E01               	addlw	1
 11884  0CAA  1903               	skipnz
 11885  0CAB  2CAD               	goto	u306_21
 11886  0CAC  07F8               	addwf	(adcon_ler_canal@acc+1),f
 11887  0CAD                     u306_21:
 11888  0CAD  0874               	movf	2+(??_adcon_ler_canal+0)+0,w
 11889  0CAE  1103               	clrz
 11890  0CAF  1803               	skipnc
 11891  0CB0  3E01               	addlw	1
 11892  0CB1  1903               	skipnz
 11893  0CB2  2CB4               	goto	u306_22
 11894  0CB3  07F9               	addwf	(adcon_ler_canal@acc+2),f
 11895  0CB4                     u306_22:
 11896  0CB4  0875               	movf	3+(??_adcon_ler_canal+0)+0,w
 11897  0CB5  1103               	clrz
 11898  0CB6  1803               	skipnc
 11899  0CB7  3E01               	addlw	1
 11900  0CB8  1903               	skipnz
 11901  0CB9  2CBB               	goto	u306_23
 11902  0CBA  07FA               	addwf	(adcon_ler_canal@acc+3),f
 11903  0CBB                     u306_23:
 11904                           
 11905                           	line	96
 11906  0CBB  3001               	movlw	low(01h)
 11907  0CBC  07FB               	addwf	(adcon_ler_canal@i),f
 11908  0CBD  1803               	skipnc
 11909  0CBE  0AFC               	incf	(adcon_ler_canal@i+1),f
 11910  0CBF  3000               	movlw	high(01h)
 11911  0CC0  07FC               	addwf	(adcon_ler_canal@i+1),f
 11912  0CC1  3000               	movlw	high(020h)
 11913  0CC2  027C               	subwf	(adcon_ler_canal@i+1),w
 11914  0CC3  3020               	movlw	low(020h)
 11915  0CC4  1903               	skipnz
 11916  0CC5  027B               	subwf	(adcon_ler_canal@i),w
 11917  0CC6  1C03               	skipc
 11918  0CC7  2CC9               	goto	u307_21
 11919  0CC8  2CCA               	goto	u307_20
 11920  0CC9                     u307_21:
 11921  0CC9  2C8E               	goto	i1l253
 11922  0CCA                     u307_20:
 11923  0CCA  2CCB               	goto	i1l4089
 11924                           	
 11925  0CCB                     i1l254:	
 11926                           	line	104
 11927                           	
 11928  0CCB                     i1l4089:	
 11929                           ;adcon.c: 101: }
 11930                           ;adcon.c: 104: return acc / 32;
 11931  0CCB  0877               	movf	(adcon_ler_canal@acc),w
 11932  0CCC  00F2               	movwf	(??_adcon_ler_canal+0)+0
 11933  0CCD  0878               	movf	(adcon_ler_canal@acc+1),w
 11934  0CCE  00F3               	movwf	((??_adcon_ler_canal+0)+0+1)
 11935  0CCF  0879               	movf	(adcon_ler_canal@acc+2),w
 11936  0CD0  00F4               	movwf	((??_adcon_ler_canal+0)+0+2)
 11937  0CD1  087A               	movf	(adcon_ler_canal@acc+3),w
 11938  0CD2  00F5               	movwf	((??_adcon_ler_canal+0)+0+3)
 11939  0CD3  3005               	movlw	05h
 11940  0CD4                     u308_25:
 11941  0CD4  1003               	clrc
 11942  0CD5  0CF5               	rrf	(??_adcon_ler_canal+0)+3,f
 11943  0CD6  0CF4               	rrf	(??_adcon_ler_canal+0)+2,f
 11944  0CD7  0CF3               	rrf	(??_adcon_ler_canal+0)+1,f
 11945  0CD8  0CF2               	rrf	(??_adcon_ler_canal+0)+0,f
 11946  0CD9                     u308_20:
 11947  0CD9  3EFF               	addlw	-1
 11948  0CDA  1D03               	skipz
 11949  0CDB  2CD4               	goto	u308_25
 11950  0CDC  0873               	movf	1+(??_adcon_ler_canal+0)+0,w
 11951  0CDD  01F1               	clrf	(?_adcon_ler_canal+1)
 11952  0CDE  07F1               	addwf	(?_adcon_ler_canal+1)
 11953  0CDF  0872               	movf	0+(??_adcon_ler_canal+0)+0,w
 11954  0CE0  01F0               	clrf	(?_adcon_ler_canal)
 11955  0CE1  07F0               	addwf	(?_adcon_ler_canal)
 11956                           
 11957  0CE2  2CE3               	goto	i1l258
 11958                           	
 11959  0CE3                     i1l4091:	
 11960                           	line	106
 11961                           	
 11962  0CE3                     i1l258:	
 11963  0CE3  0008               	return
 11964                           	opt stack 0
 11965                           GLOBAL	__end_of_adcon_ler_canal
 11966  0CE4                     	__end_of_adcon_ler_canal:
 11967                           	signat	_adcon_ler_canal,4218
 11968                           	global	_eeprom_ler_word
 11969                           
 11970 ;; *************** function _eeprom_ler_word *****************
 11971 ;; Defined at:
 11972 ;;		line 4 in file "eeprom.c"
 11973 ;; Parameters:    Size  Location     Type
 11974 ;;  end             1    wreg     unsigned char 
 11975 ;; Auto vars:     Size  Location     Type
 11976 ;;  end             1    6[COMMON] unsigned char 
 11977 ;;  temp_int        2    7[COMMON] unsigned int 
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  2    2[COMMON] unsigned int 
 11980 ;; Registers used:
 11981 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11987 ;;      Params:         2       0       0       0       0
 11988 ;;      Locals:         3       0       0       0       0
 11989 ;;      Temps:          2       0       0       0       0
 11990 ;;      Totals:         7       0       0       0       0
 11991 ;;Total ram usage:        7 bytes
 11992 ;; Hardware stack levels used:    1
 11993 ;; Hardware stack levels required when called:    1
 11994 ;; This function calls:
 11995 ;;		i1_eeprom_read
 11996 ;; This function is called by:
 11997 ;;		_handler
 11998 ;;		_adcon_captura_grava
 11999 ;;		_estado_menu_principal
 12000 ;;		_estado_executa_muda
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           psect	text37,local,class=CODE,delta=2,merge=1
 12004                           global __ptext37
 12005  1678                     __ptext37:	;psect for function _eeprom_ler_word
 12006                           psect	text37
 12007                           	file	"eeprom.c"
 12008                           	line	4
 12009                           	global	__size_of_eeprom_ler_word
 12010  002A                     	__size_of_eeprom_ler_word	equ	__end_of_eeprom_ler_word-_eeprom_ler_word
 12011                           	
 12012  1678                     _eeprom_ler_word:	
 12013                           ;incstack = 0
 12014                           	opt	stack 0
 12015                           ; Regs used in _eeprom_ler_word: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12016                           ;eeprom_ler_word@end stored from wreg
 12017                           	line	13
 12018  1678  00F6               	movwf	(eeprom_ler_word@end)
 12019                           	
 12020  1679                     i1l4065:	
 12021                           ;eeprom.c: 13: uint16_t temp_int = 0;
 12022  1679  01F7               	clrf	(eeprom_ler_word@temp_int)
 12023  167A  01F8               	clrf	(eeprom_ler_word@temp_int+1)
 12024                           	line	14
 12025                           	
 12026  167B                     i1l4067:	
 12027                           ;eeprom.c: 14: temp_int = eeprom_read(end+1);
 12028  167B  0A76               	incf	(eeprom_ler_word@end),w
 12029  167C  160A  118A  25E7   	fcall	i1_eeprom_read
              160A  118A         
 12030  1681  00F4               	movwf	(??_eeprom_ler_word+0)+0+0
 12031  1682  01F5               	clrf	(??_eeprom_ler_word+0)+0+1
 12032  1683  0874               	movf	0+(??_eeprom_ler_word+0)+0,w
 12033  1684  00F7               	movwf	(eeprom_ler_word@temp_int)
 12034  1685  0875               	movf	1+(??_eeprom_ler_word+0)+0,w
 12035  1686  00F8               	movwf	(eeprom_ler_word@temp_int+1)
 12036                           	line	17
 12037                           	
 12038  1687                     i1l4069:	
 12039                           ;eeprom.c: 17: temp_int = temp_int + (eeprom_read(end) << 8);
 12040  1687  0876               	movf	(eeprom_ler_word@end),w
 12041  1688  160A  118A  25E7   	fcall	i1_eeprom_read
              160A  118A         
 12042  168D  00F4               	movwf	(??_eeprom_ler_word+0)+0+0
 12043  168E  01F5               	clrf	(??_eeprom_ler_word+0)+0+1
 12044  168F  0874               	movf	(??_eeprom_ler_word+0)+0,w
 12045  1690  00F5               	movwf	(??_eeprom_ler_word+0)+1
 12046  1691  01F4               	clrf	(??_eeprom_ler_word+0)+0
 12047  1692  0877               	movf	(eeprom_ler_word@temp_int),w
 12048  1693  0774               	addwf	0+(??_eeprom_ler_word+0)+0,w
 12049  1694  00F7               	movwf	(eeprom_ler_word@temp_int)
 12050  1695  0878               	movf	(eeprom_ler_word@temp_int+1),w
 12051  1696  1803               	skipnc
 12052  1697  0A78               	incf	(eeprom_ler_word@temp_int+1),w
 12053  1698  0775               	addwf	1+(??_eeprom_ler_word+0)+0,w
 12054  1699  00F8               	movwf	1+(eeprom_ler_word@temp_int)
 12055                           	line	20
 12056                           	
 12057  169A                     i1l4071:	
 12058                           ;eeprom.c: 20: return temp_int;
 12059  169A  0878               	movf	(eeprom_ler_word@temp_int+1),w
 12060  169B  01F3               	clrf	(?_eeprom_ler_word+1)
 12061  169C  07F3               	addwf	(?_eeprom_ler_word+1)
 12062  169D  0877               	movf	(eeprom_ler_word@temp_int),w
 12063  169E  01F2               	clrf	(?_eeprom_ler_word)
 12064  169F  07F2               	addwf	(?_eeprom_ler_word)
 12065                           
 12066  16A0  2EA1               	goto	i1l273
 12067                           	
 12068  16A1                     i1l4073:	
 12069                           	line	21
 12070                           	
 12071  16A1                     i1l273:	
 12072  16A1  0008               	return
 12073                           	opt stack 0
 12074                           GLOBAL	__end_of_eeprom_ler_word
 12075  16A2                     	__end_of_eeprom_ler_word:
 12076                           	signat	_eeprom_ler_word,4218
 12077                           	global	i1_eeprom_read
 12078                           
 12079 ;; *************** function i1_eeprom_read *****************
 12080 ;; Defined at:
 12081 ;;		line 7 in file "/opt/microchip/xc8/v1.20/sources/pic/eeread.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;  eeprom_read     1    wreg     unsigned char 
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;  eeprom_read     1    1[COMMON] unsigned char 
 12086 ;; Return value:  Size  Location     Type
 12087 ;;                  1    wreg      unsigned char 
 12088 ;; Registers used:
 12089 ;;		wreg, status,2, status,0
 12090 ;; Tracked objects:
 12091 ;;		On entry : 0/0
 12092 ;;		On exit  : 0/0
 12093 ;;		Unchanged: 0/0
 12094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12095 ;;      Params:         0       0       0       0       0
 12096 ;;      Locals:         1       0       0       0       0
 12097 ;;      Temps:          1       0       0       0       0
 12098 ;;      Totals:         2       0       0       0       0
 12099 ;;Total ram usage:        2 bytes
 12100 ;; Hardware stack levels used:    1
 12101 ;; This function calls:
 12102 ;;		Nothing
 12103 ;; This function is called by:
 12104 ;;		_adcon_captura_grava
 12105 ;;		_eeprom_ler_word
 12106 ;;		_rs232_transmite
 12107 ;;		_estado_menu_principal
 12108 ;;		_estado_ver_todos
 12109 ;;		_estado_executa_muda
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           psect	text38,local,class=CODE,delta=2,merge=1
 12113                           global __ptext38
 12114  15E7                     __ptext38:	;psect for function i1_eeprom_read
 12115                           psect	text38
 12116                           	file	"/opt/microchip/xc8/v1.20/sources/pic/eeread.c"
 12117                           	line	7
 12118                           	global	__size_ofi1_eeprom_read
 12119  001F                     	__size_ofi1_eeprom_read	equ	__end_ofi1_eeprom_read-i1_eeprom_read
 12120                           	
 12121  15E7                     i1_eeprom_read:	
 12122                           ;incstack = 0
 12123                           	opt	stack 1
 12124                           ; Regs used in i1_eeprom_read: [wreg+status,2+status,0]
 12125                           ;i1eeprom_read@addr stored from wreg
 12126                           	line	9
 12127  15E7  00F1               	movwf	(i1eeprom_read@addr)
 12128                           	line	8
 12129                           	
 12130  15E8                     i1l574:	
 12131                           	line	9
 12132                           # 9 "/opt/microchip/xc8/v1.20/sources/pic/eeread.c"
 12133  15E8  0064               clrwdt ;# 
 12134                           psect	text38
 12135                           	line	10
 12136  15E9  1683               	bsf	status, 5	;RP0=1, select bank3
 12137  15EA  1703               	bsf	status, 6	;RP1=1, select bank3
 12138  15EB  188C               	btfsc	(3169/8)^0180h,(3169)&7	;volatile
 12139  15EC  2DEE               	goto	u295_21
 12140  15ED  2DEF               	goto	u295_20
 12141  15EE                     u295_21:
 12142  15EE  2DE8               	goto	i1l574
 12143  15EF                     u295_20:
 12144  15EF  2DF0               	goto	i1l3987
 12145                           	
 12146  15F0                     i1l575:	
 12147                           	line	11
 12148                           	
 12149  15F0                     i1l3987:	
 12150  15F0  0871               	movf	(i1eeprom_read@addr),w
 12151  15F1  1283               	bcf	status, 5	;RP0=0, select bank2
 12152  15F2  1703               	bsf	status, 6	;RP1=1, select bank2
 12153  15F3  008D               	movwf	(269)^0100h	;volatile
 12154  15F4  303F               	movlw	(03Fh)
 12155  15F5  00F0               	movwf	(??i1_eeprom_read+0)+0
 12156  15F6  0870               	movf	(??i1_eeprom_read+0)+0,w
 12157  15F7  1683               	bsf	status, 5	;RP0=1, select bank3
 12158  15F8  1703               	bsf	status, 6	;RP1=1, select bank3
 12159  15F9  058C               	andwf	(396)^0180h,f	;volatile
 12160  15FA  140C               	bsf	(3168/8)^0180h,(3168)&7	;volatile
 12161  15FB  1003               	clrc
 12162  15FC  180C               	btfsc	(3168/8)^0180h,(3168)&7	;volatile
 12163  15FD  1403               	setc
 12164  15FE  3000               	movlw	0
 12165  15FF  1803               	skipnc
 12166  1600  3001               	movlw	1
 12167                           
 12168  1601  1283               	bcf	status, 5	;RP0=0, select bank2
 12169  1602  1703               	bsf	status, 6	;RP1=1, select bank2
 12170  1603  080C               	movf	(268)^0100h,w	;volatile
 12171  1604  2E05               	goto	i1l576
 12172                           	
 12173  1605                     i1l3989:	
 12174                           	line	12
 12175                           	
 12176  1605                     i1l576:	
 12177  1605  0008               	return
 12178                           	opt stack 0
 12179                           GLOBAL	__end_ofi1_eeprom_read
 12180  1606                     	__end_ofi1_eeprom_read:
 12181                           	signat	i1_eeprom_read,89
 12182                           	global	_lcd_clear
 12183                           
 12184 ;; *************** function _lcd_clear *****************
 12185 ;; Defined at:
 12186 ;;		line 39 in file "lcd.c"
 12187 ;; Parameters:    Size  Location     Type
 12188 ;;		None
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;		None
 12191 ;; Return value:  Size  Location     Type
 12192 ;;		None               void
 12193 ;; Registers used:
 12194 ;;		wreg, status,2, status,0, pclath, cstack
 12195 ;; Tracked objects:
 12196 ;;		On entry : 0/0
 12197 ;;		On exit  : 0/0
 12198 ;;		Unchanged: 0/0
 12199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12200 ;;      Params:         0       0       0       0       0
 12201 ;;      Locals:         0       0       0       0       0
 12202 ;;      Temps:          2       0       0       0       0
 12203 ;;      Totals:         2       0       0       0       0
 12204 ;;Total ram usage:        2 bytes
 12205 ;; Hardware stack levels used:    1
 12206 ;; Hardware stack levels required when called:    1
 12207 ;; This function calls:
 12208 ;;		i1_lcd_write
 12209 ;; This function is called by:
 12210 ;;		_adcon_captura_grava
 12211 ;;		_estado_menu_principal
 12212 ;;		_estado_executa_muda
 12213 ;;		_mq_mostra
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           psect	text39,local,class=CODE,delta=2,merge=1
 12217                           global __ptext39
 12218  1582                     __ptext39:	;psect for function _lcd_clear
 12219                           psect	text39
 12220                           	file	"lcd.c"
 12221                           	line	39
 12222                           	global	__size_of_lcd_clear
 12223  0019                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
 12224                           	
 12225  1582                     _lcd_clear:	
 12226                           ;incstack = 0
 12227                           	opt	stack 0
 12228                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
 12229                           	line	40
 12230                           	
 12231  1582                     i1l4165:	
 12232                           ;lcd.c: 40: RC0 = 0;
 12233  1582  1283               	bcf	status, 5	;RP0=0, select bank0
 12234  1583  1303               	bcf	status, 6	;RP1=0, select bank0
 12235  1584  1007               	bcf	(56/8),(56)&7	;volatile
 12236                           	line	41
 12237                           	
 12238  1585                     i1l4167:	
 12239                           ;lcd.c: 41: lcd_write(0);
 12240  1585  3000               	movlw	(0)
 12241  1586  160A  118A  26A2   	fcall	i1_lcd_write
              160A  118A         
 12242                           	line	42
 12243                           ;lcd.c: 42: lcd_write(1);
 12244  158B  3001               	movlw	(01h)
 12245  158C  160A  118A  26A2   	fcall	i1_lcd_write
              160A  118A         
 12246                           	line	43
 12247                           	
 12248  1591                     i1l4169:	
 12249                           ;lcd.c: 43: _delay((unsigned long)((2)*(4000000/4000.0)));
 12250                           	opt asmopt_off
 12251  1591  3003               movlw	3
 12252  1592  00F3               movwf	((??_lcd_clear+0)+0+1),f
 12253  1593  3097               	movlw	151
 12254  1594  00F2               movwf	((??_lcd_clear+0)+0),f
 12255  1595                     u403_27:
 12256  1595  0BF2               	decfsz	((??_lcd_clear+0)+0),f
 12257  1596  2D95               	goto	u403_27
 12258  1597  0BF3               	decfsz	((??_lcd_clear+0)+0+1),f
 12259  1598  2D95               	goto	u403_27
 12260  1599  2D9A               	nop2
 12261                           opt asmopt_on
 12262                           
 12263                           	line	44
 12264                           	
 12265  159A                     i1l80:	
 12266  159A  0008               	return
 12267                           	opt stack 0
 12268                           GLOBAL	__end_of_lcd_clear
 12269  159B                     	__end_of_lcd_clear:
 12270                           	signat	_lcd_clear,88
 12271                           	global	i1_lcd_write
 12272                           
 12273 ;; *************** function i1_lcd_write *****************
 12274 ;; Defined at:
 12275 ;;		line 13 in file "lcd.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;  lcd_write       1    wreg     unsigned char 
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;  lcd_write       1    1[COMMON] unsigned char 
 12280 ;; Return value:  Size  Location     Type
 12281 ;;		None               void
 12282 ;; Registers used:
 12283 ;;		wreg
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12289 ;;      Params:         0       0       0       0       0
 12290 ;;      Locals:         1       0       0       0       0
 12291 ;;      Temps:          1       0       0       0       0
 12292 ;;      Totals:         2       0       0       0       0
 12293 ;;Total ram usage:        2 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; This function calls:
 12296 ;;		Nothing
 12297 ;; This function is called by:
 12298 ;;		_lcd_clear
 12299 ;;		i1_lcd_goto
 12300 ;;		i1_lcd_puts
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           psect	text40,local,class=CODE,delta=2,merge=1
 12304                           global __ptext40
 12305  16A2                     __ptext40:	;psect for function i1_lcd_write
 12306                           psect	text40
 12307                           	file	"lcd.c"
 12308                           	line	13
 12309                           	global	__size_ofi1_lcd_write
 12310  002B                     	__size_ofi1_lcd_write	equ	__end_ofi1_lcd_write-i1_lcd_write
 12311                           	
 12312  16A2                     i1_lcd_write:	
 12313                           ;incstack = 0
 12314                           	opt	stack 0
 12315                           ; Regs used in i1_lcd_write: [wreg]
 12316                           ;i1lcd_write@c stored from wreg
 12317  16A2  00F1               	movwf	(i1lcd_write@c)
 12318                           	line	14
 12319                           	
 12320  16A3                     i1l4147:	
 12321                           ;lcd.c: 14: if (c & 0b00000001) {
 12322  16A3  1C71               	btfss	(i1lcd_write@c),(0)&7
 12323  16A4  2EA6               	goto	u319_21
 12324  16A5  2EA7               	goto	u319_20
 12325  16A6                     u319_21:
 12326  16A6  2EAB               	goto	i1l69
 12327  16A7                     u319_20:
 12328                           	line	15
 12329                           	
 12330  16A7                     i1l4149:	
 12331                           ;lcd.c: 15: RC2 = 1;
 12332  16A7  1283               	bcf	status, 5	;RP0=0, select bank0
 12333  16A8  1303               	bcf	status, 6	;RP1=0, select bank0
 12334  16A9  1507               	bsf	(58/8),(58)&7	;volatile
 12335                           	line	16
 12336                           ;lcd.c: 16: } else {
 12337  16AA  2EAE               	goto	i1l70
 12338                           	
 12339  16AB                     i1l69:	
 12340                           	line	17
 12341                           ;lcd.c: 17: RC2 = 0;
 12342  16AB  1283               	bcf	status, 5	;RP0=0, select bank0
 12343  16AC  1303               	bcf	status, 6	;RP1=0, select bank0
 12344  16AD  1107               	bcf	(58/8),(58)&7	;volatile
 12345                           	line	18
 12346                           	
 12347  16AE                     i1l70:	
 12348                           	line	19
 12349                           ;lcd.c: 18: }
 12350                           ;lcd.c: 19: if (c & 0b00000010) {
 12351  16AE  1CF1               	btfss	(i1lcd_write@c),(1)&7
 12352  16AF  2EB1               	goto	u320_21
 12353  16B0  2EB2               	goto	u320_20
 12354  16B1                     u320_21:
 12355  16B1  2EB4               	goto	i1l71
 12356  16B2                     u320_20:
 12357                           	line	20
 12358                           	
 12359  16B2                     i1l4151:	
 12360                           ;lcd.c: 20: RB2 = 1;
 12361  16B2  1506               	bsf	(50/8),(50)&7	;volatile
 12362                           	line	21
 12363                           ;lcd.c: 21: } else {
 12364  16B3  2EB5               	goto	i1l72
 12365                           	
 12366  16B4                     i1l71:	
 12367                           	line	22
 12368                           ;lcd.c: 22: RB2 = 0;
 12369  16B4  1106               	bcf	(50/8),(50)&7	;volatile
 12370                           	line	23
 12371                           	
 12372  16B5                     i1l72:	
 12373                           	line	24
 12374                           ;lcd.c: 23: }
 12375                           ;lcd.c: 24: if (c & 0b00000100) {
 12376  16B5  1D71               	btfss	(i1lcd_write@c),(2)&7
 12377  16B6  2EB8               	goto	u321_21
 12378  16B7  2EB9               	goto	u321_20
 12379  16B8                     u321_21:
 12380  16B8  2EBB               	goto	i1l73
 12381  16B9                     u321_20:
 12382                           	line	25
 12383                           	
 12384  16B9                     i1l4153:	
 12385                           ;lcd.c: 25: RB1 = 1;
 12386  16B9  1486               	bsf	(49/8),(49)&7	;volatile
 12387                           	line	26
 12388                           ;lcd.c: 26: } else {
 12389  16BA  2EBC               	goto	i1l74
 12390                           	
 12391  16BB                     i1l73:	
 12392                           	line	27
 12393                           ;lcd.c: 27: RB1 = 0;
 12394  16BB  1086               	bcf	(49/8),(49)&7	;volatile
 12395                           	line	28
 12396                           	
 12397  16BC                     i1l74:	
 12398                           	line	29
 12399                           ;lcd.c: 28: }
 12400                           ;lcd.c: 29: if (c & 0b00001000) {
 12401  16BC  1DF1               	btfss	(i1lcd_write@c),(3)&7
 12402  16BD  2EBF               	goto	u322_21
 12403  16BE  2EC0               	goto	u322_20
 12404  16BF                     u322_21:
 12405  16BF  2EC2               	goto	i1l75
 12406  16C0                     u322_20:
 12407                           	line	30
 12408                           	
 12409  16C0                     i1l4155:	
 12410                           ;lcd.c: 30: RB0 = 1;
 12411  16C0  1406               	bsf	(48/8),(48)&7	;volatile
 12412                           	line	31
 12413                           ;lcd.c: 31: } else {
 12414  16C1  2EC4               	goto	i1l4157
 12415                           	
 12416  16C2                     i1l75:	
 12417                           	line	32
 12418                           ;lcd.c: 32: RB0 = 0;
 12419  16C2  1006               	bcf	(48/8),(48)&7	;volatile
 12420  16C3  2EC4               	goto	i1l4157
 12421                           	line	33
 12422                           	
 12423  16C4                     i1l76:	
 12424                           	line	34
 12425                           	
 12426  16C4                     i1l4157:	
 12427                           ;lcd.c: 33: }
 12428                           ;lcd.c: 34: _delay((unsigned long)((40)*(4000000/4000000.0)));
 12429                           	opt asmopt_off
 12430  16C4  300D               movlw	13
 12431  16C5  00F0               movwf	(??i1_lcd_write+0)+0,f
 12432  16C6                     u404_27:
 12433  16C6  0BF0               decfsz	(??i1_lcd_write+0)+0,f
 12434  16C7  2EC6               	goto	u404_27
 12435                           opt asmopt_on
 12436                           
 12437                           	line	35
 12438                           	
 12439  16C8                     i1l4159:	
 12440                           ;lcd.c: 35: RC1 = 1;
 12441  16C8  1283               	bcf	status, 5	;RP0=0, select bank0
 12442  16C9  1303               	bcf	status, 6	;RP1=0, select bank0
 12443  16CA  1487               	bsf	(57/8),(57)&7	;volatile
 12444                           	line	36
 12445                           	
 12446  16CB                     i1l4161:	
 12447                           ;lcd.c: 36: RC1 = 0;
 12448  16CB  1087               	bcf	(57/8),(57)&7	;volatile
 12449                           	line	37
 12450                           	
 12451  16CC                     i1l77:	
 12452  16CC  0008               	return
 12453                           	opt stack 0
 12454                           GLOBAL	__end_ofi1_lcd_write
 12455  16CD                     	__end_ofi1_lcd_write:
 12456                           	signat	i1_lcd_write,88
 12457                           	global	_rs232_transmite
 12458                           
 12459 ;; *************** function _rs232_transmite *****************
 12460 ;; Defined at:
 12461 ;;		line 26 in file "rs232.c"
 12462 ;; Parameters:    Size  Location     Type
 12463 ;;		None
 12464 ;; Auto vars:     Size  Location     Type
 12465 ;;  i               1   10[COMMON] unsigned char 
 12466 ;;  x               1    9[COMMON] unsigned char 
 12467 ;;  qtd_bytes       1    8[COMMON] unsigned char 
 12468 ;;  qtd_sens        1    7[COMMON] unsigned char 
 12469 ;;  qtd_val         1    6[COMMON] unsigned char 
 12470 ;; Return value:  Size  Location     Type
 12471 ;;                  1    wreg      unsigned char 
 12472 ;; Registers used:
 12473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12474 ;; Tracked objects:
 12475 ;;		On entry : 0/0
 12476 ;;		On exit  : 0/0
 12477 ;;		Unchanged: 0/0
 12478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12479 ;;      Params:         0       0       0       0       0
 12480 ;;      Locals:         5       0       0       0       0
 12481 ;;      Temps:          2       0       0       0       0
 12482 ;;      Totals:         7       0       0       0       0
 12483 ;;Total ram usage:        7 bytes
 12484 ;; Hardware stack levels used:    1
 12485 ;; Hardware stack levels required when called:    1
 12486 ;; This function calls:
 12487 ;;		___bmul
 12488 ;;		i1_eeprom_read
 12489 ;; This function is called by:
 12490 ;;		_handler
 12491 ;; This function uses a non-reentrant model
 12492 ;;
 12493                           psect	text41,local,class=CODE,delta=2,merge=1
 12494                           global __ptext41
 12495  0BDD                     __ptext41:	;psect for function _rs232_transmite
 12496                           psect	text41
 12497                           	file	"rs232.c"
 12498                           	line	26
 12499                           	global	__size_of_rs232_transmite
 12500  0080                     	__size_of_rs232_transmite	equ	__end_of_rs232_transmite-_rs232_transmite
 12501                           	
 12502  0BDD                     _rs232_transmite:	
 12503                           ;incstack = 0
 12504                           	opt	stack 3
 12505                           ; Regs used in _rs232_transmite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12506                           	line	30
 12507                           	
 12508  0BDD                     i1l4035:	
 12509                           ;rs232.c: 27: uint8_t qtd_val, x;
 12510                           ;rs232.c: 29: uint8_t qtd_sens, qtd_bytes;
 12511                           ;rs232.c: 30: uint8_t i = 0;
 12512  0BDD  01FA               	clrf	(rs232_transmite@i)
 12513                           	line	32
 12514                           	
 12515  0BDE                     i1l4037:	
 12516                           ;rs232.c: 32: qtd_val = eeprom_read(0x08);
 12517  0BDE  3008               	movlw	(08h)
 12518  0BDF  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  158A         
 12519  0BE4  00F4               	movwf	(??_rs232_transmite+0)+0
 12520  0BE5  0874               	movf	(??_rs232_transmite+0)+0,w
 12521  0BE6  00F6               	movwf	(rs232_transmite@qtd_val)
 12522                           	line	33
 12523                           	
 12524  0BE7                     i1l4039:	
 12525                           ;rs232.c: 33: qtd_bytes = qtd_val * 2;
 12526  0BE7  0876               	movf	(rs232_transmite@qtd_val),w
 12527  0BE8  00F4               	movwf	(??_rs232_transmite+0)+0
 12528  0BE9  0774               	addwf	(??_rs232_transmite+0)+0,w
 12529  0BEA  00F5               	movwf	(??_rs232_transmite+1)+0
 12530  0BEB  0875               	movf	(??_rs232_transmite+1)+0,w
 12531  0BEC  00F8               	movwf	(rs232_transmite@qtd_bytes)
 12532                           	line	46
 12533                           	
 12534  0BED                     i1l4041:	
 12535                           ;rs232.c: 46: qtd_sens = eeprom_read(0x00);
 12536  0BED  3000               	movlw	(0)
 12537  0BEE  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  158A         
 12538  0BF3  00F4               	movwf	(??_rs232_transmite+0)+0
 12539  0BF4  0874               	movf	(??_rs232_transmite+0)+0,w
 12540  0BF5  00F7               	movwf	(rs232_transmite@qtd_sens)
 12541                           	line	47
 12542                           	
 12543  0BF6                     i1l4043:	
 12544                           ;rs232.c: 47: TXREG = menu_quant_sensores[qtd_sens].i_quant_sensores;
 12545  0BF6  3003               	movlw	(03h)
 12546  0BF7  00F4               	movwf	(??_rs232_transmite+0)+0
 12547  0BF8  0874               	movf	(??_rs232_transmite+0)+0,w
 12548  0BF9  00F0               	movwf	(?___bmul)
 12549  0BFA  0877               	movf	(rs232_transmite@qtd_sens),w
 12550  0BFB  160A  118A  2569   	fcall	___bmul
              120A  158A         
 12551  0C00  3E02               	addlw	02h
 12552  0C01  3E2E               	addlw	low(_menu_quant_sensores|8000h)
 12553  0C02  0084               	movwf	fsr0
 12554  0C03  3085               	movlw	high(_menu_quant_sensores|8000h)
 12555  0C04  1803               	skipnc
 12556  0C05  3E01               	addlw	1
 12557  0C06  1283               	bcf	status, 5	;RP0=0, select bank0
 12558  0C07  1303               	bcf	status, 6	;RP1=0, select bank0
 12559  0C08  00FF               	movwf	btemp+1
 12560  0C09  120A  118A  2500   	fcall	stringtab
              120A  158A         
 12561  0C0E  0099               	movwf	(25)	;volatile
 12562                           	line	49
 12563                           	
 12564  0C0F                     i1l4045:	
 12565                           ;rs232.c: 49: _delay((unsigned long)((5)*(4000000/4000.0)));
 12566                           	opt asmopt_off
 12567  0C0F  3007               movlw	7
 12568  0C10  00F5               movwf	((??_rs232_transmite+0)+0+1),f
 12569  0C11  307D               	movlw	125
 12570  0C12  00F4               movwf	((??_rs232_transmite+0)+0),f
 12571  0C13                     u405_27:
 12572  0C13  0BF4               	decfsz	((??_rs232_transmite+0)+0),f
 12573  0C14  2C13               	goto	u405_27
 12574  0C15  0BF5               	decfsz	((??_rs232_transmite+0)+0+1),f
 12575  0C16  2C13               	goto	u405_27
 12576                           opt asmopt_on
 12577                           
 12578                           	line	50
 12579                           	
 12580  0C17                     i1l4047:	
 12581                           ;rs232.c: 50: TXREG = 0;
 12582  0C17  1283               	bcf	status, 5	;RP0=0, select bank0
 12583  0C18  1303               	bcf	status, 6	;RP1=0, select bank0
 12584  0C19  0199               	clrf	(25)	;volatile
 12585                           	line	51
 12586                           	
 12587  0C1A                     i1l4049:	
 12588                           ;rs232.c: 51: _delay((unsigned long)((5)*(4000000/4000.0)));
 12589                           	opt asmopt_off
 12590  0C1A  3007               movlw	7
 12591  0C1B  00F5               movwf	((??_rs232_transmite+0)+0+1),f
 12592  0C1C  307D               	movlw	125
 12593  0C1D  00F4               movwf	((??_rs232_transmite+0)+0),f
 12594  0C1E                     u406_27:
 12595  0C1E  0BF4               	decfsz	((??_rs232_transmite+0)+0),f
 12596  0C1F  2C1E               	goto	u406_27
 12597  0C20  0BF5               	decfsz	((??_rs232_transmite+0)+0+1),f
 12598  0C21  2C1E               	goto	u406_27
 12599                           opt asmopt_on
 12600                           
 12601                           	line	53
 12602                           ;rs232.c: 53: for (; i < qtd_bytes; i = i + 2) {
 12603  0C22  2C55               	goto	i1l4063
 12604                           	
 12605  0C23                     i1l317:	
 12606                           	line	54
 12607                           	
 12608  0C23                     i1l4051:	
 12609                           ;rs232.c: 54: x = eeprom_read(0x0e + i + 1);
 12610  0C23  087A               	movf	(rs232_transmite@i),w
 12611  0C24  3E0F               	addlw	0Fh
 12612  0C25  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  158A         
 12613  0C2A  00F4               	movwf	(??_rs232_transmite+0)+0
 12614  0C2B  0874               	movf	(??_rs232_transmite+0)+0,w
 12615  0C2C  00F9               	movwf	(rs232_transmite@x)
 12616                           	line	55
 12617                           	
 12618  0C2D                     i1l4053:	
 12619                           ;rs232.c: 55: TXREG = x;
 12620  0C2D  0879               	movf	(rs232_transmite@x),w
 12621  0C2E  1283               	bcf	status, 5	;RP0=0, select bank0
 12622  0C2F  1303               	bcf	status, 6	;RP1=0, select bank0
 12623  0C30  0099               	movwf	(25)	;volatile
 12624                           	line	56
 12625                           	
 12626  0C31                     i1l4055:	
 12627                           ;rs232.c: 56: _delay((unsigned long)((5)*(4000000/4000.0)));
 12628                           	opt asmopt_off
 12629  0C31  3007               movlw	7
 12630  0C32  00F5               movwf	((??_rs232_transmite+0)+0+1),f
 12631  0C33  307D               	movlw	125
 12632  0C34  00F4               movwf	((??_rs232_transmite+0)+0),f
 12633  0C35                     u407_27:
 12634  0C35  0BF4               	decfsz	((??_rs232_transmite+0)+0),f
 12635  0C36  2C35               	goto	u407_27
 12636  0C37  0BF5               	decfsz	((??_rs232_transmite+0)+0+1),f
 12637  0C38  2C35               	goto	u407_27
 12638                           opt asmopt_on
 12639                           
 12640                           	line	58
 12641                           ;rs232.c: 58: x = eeprom_read(0x0e + i);
 12642  0C39  087A               	movf	(rs232_transmite@i),w
 12643  0C3A  3E0E               	addlw	0Eh
 12644  0C3B  160A  118A  25E7   	fcall	i1_eeprom_read
              120A  158A         
 12645  0C40  00F4               	movwf	(??_rs232_transmite+0)+0
 12646  0C41  0874               	movf	(??_rs232_transmite+0)+0,w
 12647  0C42  00F9               	movwf	(rs232_transmite@x)
 12648                           	line	59
 12649                           	
 12650  0C43                     i1l4057:	
 12651                           ;rs232.c: 59: TXREG = x;
 12652  0C43  0879               	movf	(rs232_transmite@x),w
 12653  0C44  1283               	bcf	status, 5	;RP0=0, select bank0
 12654  0C45  1303               	bcf	status, 6	;RP1=0, select bank0
 12655  0C46  0099               	movwf	(25)	;volatile
 12656                           	line	60
 12657                           	
 12658  0C47                     i1l4059:	
 12659                           ;rs232.c: 60: _delay((unsigned long)((5)*(4000000/4000.0)));
 12660                           	opt asmopt_off
 12661  0C47  3007               movlw	7
 12662  0C48  00F5               movwf	((??_rs232_transmite+0)+0+1),f
 12663  0C49  307D               	movlw	125
 12664  0C4A  00F4               movwf	((??_rs232_transmite+0)+0),f
 12665  0C4B                     u408_27:
 12666  0C4B  0BF4               	decfsz	((??_rs232_transmite+0)+0),f
 12667  0C4C  2C4B               	goto	u408_27
 12668  0C4D  0BF5               	decfsz	((??_rs232_transmite+0)+0+1),f
 12669  0C4E  2C4B               	goto	u408_27
 12670                           opt asmopt_on
 12671                           
 12672                           	line	53
 12673                           	
 12674  0C4F                     i1l4061:	
 12675  0C4F  087A               	movf	(rs232_transmite@i),w
 12676  0C50  3E02               	addlw	02h
 12677  0C51  00F4               	movwf	(??_rs232_transmite+0)+0
 12678  0C52  0874               	movf	(??_rs232_transmite+0)+0,w
 12679  0C53  00FA               	movwf	(rs232_transmite@i)
 12680  0C54  2C55               	goto	i1l4063
 12681                           	
 12682  0C55                     i1l316:	
 12683                           	
 12684  0C55                     i1l4063:	
 12685  0C55  0878               	movf	(rs232_transmite@qtd_bytes),w
 12686  0C56  027A               	subwf	(rs232_transmite@i),w
 12687  0C57  1C03               	skipc
 12688  0C58  2C5A               	goto	u303_21
 12689  0C59  2C5B               	goto	u303_20
 12690  0C5A                     u303_21:
 12691  0C5A  2C23               	goto	i1l4051
 12692  0C5B                     u303_20:
 12693  0C5B  2C5C               	goto	i1l319
 12694                           	
 12695  0C5C                     i1l318:	
 12696                           	line	63
 12697                           ;rs232.c: 61: }
 12698                           ;rs232.c: 62: return i;
 12699                           ;	Return value of _rs232_transmite is never used
 12700                           	
 12701  0C5C                     i1l319:	
 12702  0C5C  0008               	return
 12703                           	opt stack 0
 12704                           GLOBAL	__end_of_rs232_transmite
 12705  0C5D                     	__end_of_rs232_transmite:
 12706                           	signat	_rs232_transmite,89
 12707                           	global	_btns_testa
 12708                           
 12709 ;; *************** function _btns_testa *****************
 12710 ;; Defined at:
 12711 ;;		line 7 in file "botoes.c"
 12712 ;; Parameters:    Size  Location     Type
 12713 ;;		None
 12714 ;; Auto vars:     Size  Location     Type
 12715 ;;		None
 12716 ;; Return value:  Size  Location     Type
 12717 ;;                  1    wreg      unsigned char 
 12718 ;; Registers used:
 12719 ;;		wreg
 12720 ;; Tracked objects:
 12721 ;;		On entry : 0/0
 12722 ;;		On exit  : 0/0
 12723 ;;		Unchanged: 0/0
 12724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12725 ;;      Params:         0       0       0       0       0
 12726 ;;      Locals:         0       0       0       0       0
 12727 ;;      Temps:          3       0       0       0       0
 12728 ;;      Totals:         3       0       0       0       0
 12729 ;;Total ram usage:        3 bytes
 12730 ;; Hardware stack levels used:    1
 12731 ;; This function calls:
 12732 ;;		Nothing
 12733 ;; This function is called by:
 12734 ;;		_handler
 12735 ;; This function uses a non-reentrant model
 12736 ;;
 12737                           psect	text42,local,class=CODE,delta=2,merge=1
 12738                           global __ptext42
 12739  16CD                     __ptext42:	;psect for function _btns_testa
 12740                           psect	text42
 12741                           	file	"botoes.c"
 12742                           	line	7
 12743                           	global	__size_of_btns_testa
 12744  002E                     	__size_of_btns_testa	equ	__end_of_btns_testa-_btns_testa
 12745                           	
 12746  16CD                     _btns_testa:	
 12747                           ;incstack = 0
 12748                           	opt	stack 4
 12749                           ; Regs used in _btns_testa: [wreg]
 12750                           	line	9
 12751                           	
 12752  16CD                     i1l4011:	
 12753                           ;botoes.c: 9: _delay((unsigned long)((200)*(4000000/4000.0)));
 12754                           	opt asmopt_off
 12755  16CD  3002               movlw  2
 12756  16CE  00F2               movwf	((??_btns_testa+0)+0+2),f
 12757  16CF  3004               movlw	4
 12758  16D0  00F1               movwf	((??_btns_testa+0)+0+1),f
 12759  16D1  30BA               	movlw	186
 12760  16D2  00F0               movwf	((??_btns_testa+0)+0),f
 12761  16D3                     u409_27:
 12762  16D3  0BF0               	decfsz	((??_btns_testa+0)+0),f
 12763  16D4  2ED3               	goto	u409_27
 12764  16D5  0BF1               	decfsz	((??_btns_testa+0)+0+1),f
 12765  16D6  2ED3               	goto	u409_27
 12766  16D7  0BF2               	decfsz	((??_btns_testa+0)+0+2),f
 12767  16D8  2ED3               	goto	u409_27
 12768  16D9  0000               	nop
 12769                           opt asmopt_on
 12770                           
 12771                           	line	10
 12772                           	
 12773  16DA                     i1l4013:	
 12774                           ;botoes.c: 10: if(RB4 == 0) {
 12775  16DA  1283               	bcf	status, 5	;RP0=0, select bank0
 12776  16DB  1303               	bcf	status, 6	;RP1=0, select bank0
 12777  16DC  1A06               	btfsc	(52/8),(52)&7	;volatile
 12778  16DD  2EDF               	goto	u299_21
 12779  16DE  2EE0               	goto	u299_20
 12780  16DF                     u299_21:
 12781  16DF  2EE3               	goto	i1l127
 12782  16E0                     u299_20:
 12783                           	line	11
 12784                           	
 12785  16E0                     i1l4015:	
 12786                           ;botoes.c: 11: return 1;
 12787  16E0  3001               	movlw	(01h)
 12788  16E1  2EFA               	goto	i1l128
 12789                           	
 12790  16E2                     i1l4017:	
 12791  16E2  2EFA               	goto	i1l128
 12792                           	line	12
 12793                           	
 12794  16E3                     i1l127:	
 12795                           	line	13
 12796                           ;botoes.c: 12: }
 12797                           ;botoes.c: 13: if(RB5 == 0) {
 12798  16E3  1A86               	btfsc	(53/8),(53)&7	;volatile
 12799  16E4  2EE6               	goto	u300_21
 12800  16E5  2EE7               	goto	u300_20
 12801  16E6                     u300_21:
 12802  16E6  2EEA               	goto	i1l129
 12803  16E7                     u300_20:
 12804                           	line	14
 12805                           	
 12806  16E7                     i1l4019:	
 12807                           ;botoes.c: 14: return 2;
 12808  16E7  3002               	movlw	(02h)
 12809  16E8  2EFA               	goto	i1l128
 12810                           	
 12811  16E9                     i1l4021:	
 12812  16E9  2EFA               	goto	i1l128
 12813                           	line	15
 12814                           	
 12815  16EA                     i1l129:	
 12816                           	line	16
 12817                           ;botoes.c: 15: }
 12818                           ;botoes.c: 16: if(RB6 == 0) {
 12819  16EA  1B06               	btfsc	(54/8),(54)&7	;volatile
 12820  16EB  2EED               	goto	u301_21
 12821  16EC  2EEE               	goto	u301_20
 12822  16ED                     u301_21:
 12823  16ED  2EF1               	goto	i1l130
 12824  16EE                     u301_20:
 12825                           	line	17
 12826                           	
 12827  16EE                     i1l4023:	
 12828                           ;botoes.c: 17: return 3;
 12829  16EE  3003               	movlw	(03h)
 12830  16EF  2EFA               	goto	i1l128
 12831                           	
 12832  16F0                     i1l4025:	
 12833  16F0  2EFA               	goto	i1l128
 12834                           	line	18
 12835                           	
 12836  16F1                     i1l130:	
 12837                           	line	19
 12838                           ;botoes.c: 18: }
 12839                           ;botoes.c: 19: if(RB7 == 0) {
 12840  16F1  1B86               	btfsc	(55/8),(55)&7	;volatile
 12841  16F2  2EF4               	goto	u302_21
 12842  16F3  2EF5               	goto	u302_20
 12843  16F4                     u302_21:
 12844  16F4  2EF8               	goto	i1l4031
 12845  16F5                     u302_20:
 12846                           	line	20
 12847                           	
 12848  16F5                     i1l4027:	
 12849                           ;botoes.c: 20: return 4;
 12850  16F5  3004               	movlw	(04h)
 12851  16F6  2EFA               	goto	i1l128
 12852                           	
 12853  16F7                     i1l4029:	
 12854  16F7  2EFA               	goto	i1l128
 12855                           	line	21
 12856                           	
 12857  16F8                     i1l131:	
 12858                           	line	22
 12859                           	
 12860  16F8                     i1l4031:	
 12861                           ;botoes.c: 21: }
 12862                           ;botoes.c: 22: return 0;
 12863  16F8  3000               	movlw	(0)
 12864  16F9  2EFA               	goto	i1l128
 12865                           	
 12866  16FA                     i1l4033:	
 12867                           	line	23
 12868                           	
 12869  16FA                     i1l128:	
 12870  16FA  0008               	return
 12871                           	opt stack 0
 12872                           GLOBAL	__end_of_btns_testa
 12873  16FB                     	__end_of_btns_testa:
 12874                           	signat	_btns_testa,89
 12875                           	global	___bmul
 12876                           
 12877 ;; *************** function ___bmul *****************
 12878 ;; Defined at:
 12879 ;;		line 3 in file "/opt/microchip/xc8/v1.20/sources/pic/bmul.c"
 12880 ;; Parameters:    Size  Location     Type
 12881 ;;  multiplier      1    wreg     unsigned char 
 12882 ;;  multiplicand    1    0[COMMON] unsigned char 
 12883 ;; Auto vars:     Size  Location     Type
 12884 ;;  multiplier      1    3[COMMON] unsigned char 
 12885 ;;  product         1    2[COMMON] unsigned char 
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      unsigned char 
 12888 ;; Registers used:
 12889 ;;		wreg, status,2, status,0
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12895 ;;      Params:         1       0       0       0       0
 12896 ;;      Locals:         2       0       0       0       0
 12897 ;;      Temps:          1       0       0       0       0
 12898 ;;      Totals:         4       0       0       0       0
 12899 ;;Total ram usage:        4 bytes
 12900 ;; Hardware stack levels used:    1
 12901 ;; This function calls:
 12902 ;;		Nothing
 12903 ;; This function is called by:
 12904 ;;		_adcon_captura_grava
 12905 ;;		_adcon_mostra
 12906 ;;		_rs232_transmite
 12907 ;;		_estado_menu_principal
 12908 ;;		_estado_executa_muda
 12909 ;;		_eval_poly
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           psect	text43,local,class=CODE,delta=2,merge=1
 12913                           global __ptext43
 12914  1569                     __ptext43:	;psect for function ___bmul
 12915                           psect	text43
 12916                           	file	"/opt/microchip/xc8/v1.20/sources/pic/bmul.c"
 12917                           	line	3
 12918                           	global	__size_of___bmul
 12919  0019                     	__size_of___bmul	equ	__end_of___bmul-___bmul
 12920                           	
 12921  1569                     ___bmul:	
 12922                           ;incstack = 0
 12923                           	opt	stack 1
 12924                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12925                           ;___bmul@multiplier stored from wreg
 12926  1569  00F3               	movwf	(___bmul@multiplier)
 12927                           	line	4
 12928                           	
 12929  156A                     i1l3509:	
 12930  156A  01F2               	clrf	(___bmul@product)
 12931  156B  2D6C               	goto	i1l3511
 12932                           	line	6
 12933                           	
 12934  156C                     i1l816:	
 12935                           	line	7
 12936                           	
 12937  156C                     i1l3511:	
 12938  156C  1C73               	btfss	(___bmul@multiplier),(0)&7
 12939  156D  2D6F               	goto	u204_21
 12940  156E  2D70               	goto	u204_20
 12941  156F                     u204_21:
 12942  156F  2D75               	goto	i1l3515
 12943  1570                     u204_20:
 12944                           	line	8
 12945                           	
 12946  1570                     i1l3513:	
 12947  1570  0870               	movf	(___bmul@multiplicand),w
 12948  1571  00F1               	movwf	(??___bmul+0)+0
 12949  1572  0871               	movf	(??___bmul+0)+0,w
 12950  1573  07F2               	addwf	(___bmul@product),f
 12951  1574  2D75               	goto	i1l3515
 12952                           	
 12953  1575                     i1l817:	
 12954                           	line	9
 12955                           	
 12956  1575                     i1l3515:	
 12957  1575  1003               	clrc
 12958  1576  0DF0               	rlf	(___bmul@multiplicand),f
 12959                           
 12960                           	line	10
 12961                           	
 12962  1577                     i1l3517:	
 12963  1577  1003               	clrc
 12964  1578  0CF3               	rrf	(___bmul@multiplier),f
 12965                           
 12966                           	line	11
 12967                           	
 12968  1579                     i1l3519:	
 12969  1579  08F3               	movf	(___bmul@multiplier),f
 12970  157A  1D03               	skipz
 12971  157B  2D7D               	goto	u205_21
 12972  157C  2D7E               	goto	u205_20
 12973  157D                     u205_21:
 12974  157D  2D6C               	goto	i1l3511
 12975  157E                     u205_20:
 12976  157E  2D7F               	goto	i1l3521
 12977                           	
 12978  157F                     i1l818:	
 12979                           	line	12
 12980                           	
 12981  157F                     i1l3521:	
 12982  157F  0872               	movf	(___bmul@product),w
 12983  1580  2D81               	goto	i1l819
 12984                           	
 12985  1581                     i1l3523:	
 12986                           	line	13
 12987                           	
 12988  1581                     i1l819:	
 12989  1581  0008               	return
 12990                           	opt stack 0
 12991                           GLOBAL	__end_of___bmul
 12992  1582                     	__end_of___bmul:
 12993                           	signat	___bmul,8313
 12994                           	global	btemp
 12995  007E                     	btemp set 07Eh
 12996                           
 12997                           	DABS	1,126,2	;btemp
 12998                           	global	wtemp0
 12999  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     267
    Constant    121
    Data        14
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     12      75
    BANK3            96      2      19
    BANK2            96      0       0

Pointer List with Targets:

    ?___awmod	int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?_eeprom_ler_word	unsigned int  size(1) Largest target is 0

    ?_div	struct . size(1) Largest target is 0

    ?_adcon_ler_canal	unsigned int  size(1) Largest target is 0

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_45(CODE[10]), STR_44(CODE[10]), STR_42(CODE[9]), STR_21(CODE[7]), 
		 -> STR_16(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> estado_executa_muda@tmp(BANK0[17]), mq_mostra@temp_str(BANK0[16]), adcon_mostra@temp_str(BANK0[9]), 

    ?_sprintf	int  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S854$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    menu_inicial	PTR const unsigned char [7] size(2) Largest target is 15
		 -> STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[7]), STR_25(CODE[8]), 
		 -> STR_24(CODE[10]), STR_23(CODE[15]), STR_22(CODE[9]), 

    S397$str_quant_sensores	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[11]), STR_29(CODE[9]), 
		 -> STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[9]), 
		 -> STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[9]), 

    menu_quant_sensores.str_quant_sensores	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[11]), STR_29(CODE[9]), 
		 -> STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[9]), 
		 -> STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[11]), STR_11(CODE[9]), 

    S235$str_tempo_amostra	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[7]), STR_36(CODE[6]), 
		 -> STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[6]), STR_10(CODE[7]), 
		 -> STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[7]), 
		 -> STR_5(CODE[7]), STR_4(CODE[6]), 

    menu_tempo_amostra.str_tempo_amostra	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[7]), STR_36(CODE[6]), 
		 -> STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[6]), STR_10(CODE[7]), 
		 -> STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[7]), 
		 -> STR_5(CODE[7]), STR_4(CODE[6]), 

    lcd_puts@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_46(CODE[11]), STR_43(CODE[12]), STR_41(CODE[12]), estado_executa_muda@tmp(BANK0[17]), 
		 -> STR_40(CODE[14]), STR_39(CODE[7]), STR_38(CODE[7]), STR_37(CODE[7]), 
		 -> STR_36(CODE[6]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[6]), 
		 -> STR_32(CODE[11]), STR_31(CODE[11]), STR_30(CODE[11]), STR_29(CODE[9]), 
		 -> STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[7]), STR_25(CODE[8]), 
		 -> STR_24(CODE[10]), STR_23(CODE[15]), STR_22(CODE[9]), mq_mostra@temp_str(BANK0[16]), 
		 -> STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[11]), STR_17(CODE[9]), 
		 -> adcon_mostra@temp_str(BANK0[9]), STR_15(CODE[14]), STR_14(CODE[11]), STR_13(CODE[11]), 
		 -> STR_12(CODE[11]), STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[7]), 
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[7]), STR_5(CODE[7]), 
		 -> STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[2]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _handler in COMMON

    ___lbdiv->i1_eeprom_read
    _estado_executa_muda->___lwmod
    i1_eeprom_gravar_word->i1_eeprom_write
    i1_lcd_puts->___bmul
    i1_lcd_goto->i1_lcd_write
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _div->___awdiv
    _eeprom_ler_word->i1_eeprom_read
    _lcd_clear->i1_lcd_write
    _rs232_transmite->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _handler in BANK0

    _handler->_estado_maquina
    _estado_maquina->_estado_menu_principal
    _estado_menu_conf_quant_sensores->_estado_executa_muda
    _estado_menu_conf_tempo_amostra->_estado_executa_muda
    _estado_menu_limpar->_estado_executa_muda
    _estado_max_min->_estado_executa_muda
    _estado_ver_todos->_estado_executa_muda
    _estado_captura_mostra->_estado_executa_muda
    _estado_menu_principal->_estado_executa_muda
    _estado_inicial->_estado_executa_muda
    _estado_executa_muda->_sprintf
    _adcon_captura_grava->_adcon_mostra
    _adcon_mostra->_sprintf

Critical Paths under _main in BANK1

    _main->_lcd_puts
    _main->_eeprom_gravar_word
    _eeprom_gravar_word->_eeprom_write
    _lcd_goto->_lcd_write
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_write

Critical Paths under _handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     942
                                              0 BANK3      2     2      0
                          _btns_init
                         _rs232_init
                           _lcd_init
                           _lcd_puts
                           _lcd_goto
                        _eeprom_read
                       _eeprom_write
                 _eeprom_gravar_word
                         _adcon_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcon_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_gravar_word                                   4     2      2     186
                                              8 BANK1      4     2      2
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1      62
                                              5 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      31
                                              5 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             3     2      1     186
                                              7 BANK1      3     2      1
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             5     3      2     254
                                              7 BANK1      5     3      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     124
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0     124
                                              5 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _rs232_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _btns_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _handler                                             10    10      0   48154
                                             73 BANK0      5     5      0
                                              0 BANK1      5     5      0
                         _btns_testa
                    _rs232_transmite
                    _eeprom_ler_word
                _adcon_captura_grava
                     _estado_maquina
 ---------------------------------------------------------------------------------
 (4) _estado_maquina                                       1     1      0   42274
                                             72 BANK0      1     1      0
                     _estado_inicial
              _estado_menu_principal
              _estado_captura_mostra
                   _estado_ver_todos
                     _estado_max_min
                 _estado_menu_limpar
     _estado_menu_conf_tempo_amostra
    _estado_menu_conf_quant_sensores
 ---------------------------------------------------------------------------------
 (5) _estado_menu_conf_quant_sensores                      2     2      0    4647
                                             58 BANK0      2     2      0
                _estado_executa_muda
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (5) _estado_menu_conf_tempo_amostra                       1     1      0    4939
                                             58 BANK0      1     1      0
                _estado_executa_muda
               i1_eeprom_gravar_word
 ---------------------------------------------------------------------------------
 (5) _estado_menu_limpar                                   1     1      0    4501
                                             58 BANK0      1     1      0
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (5) _estado_max_min                                       1     1      0    4501
                                             58 BANK0      1     1      0
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (5) _estado_ver_todos                                     2     2      0    4736
                                             58 BANK0      2     2      0
                _estado_executa_muda
                            ___lbdiv
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (6) ___lbdiv                                              5     4      1     162
                                              2 COMMON     5     4      1
                      i1_eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (5) _estado_captura_mostra                                1     1      0    4501
                                             58 BANK0      1     1      0
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (5) _estado_menu_principal                               14    14      0    9772
                                             58 BANK0     14    14      0
                          _lcd_clear
                    _eeprom_ler_word
                    _adcon_ler_canal
                       _adcon_mostra
                _estado_executa_muda
                             ___bmul
                         i1_lcd_puts
               i1_eeprom_gravar_word
                      i1_eeprom_read
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (5) _estado_inicial                                       1     1      0    4479
                _estado_executa_muda
 ---------------------------------------------------------------------------------
 (6) _estado_executa_muda                                 46    46      0    4479
                                             20 BANK0     38    38      0
                          _lcd_clear
                    _eeprom_ler_word
                            _sprintf
                             ___bmul
                            ___lwdiv
                            ___lwmod
                         i1_lcd_goto
                         i1_lcd_puts
               i1_eeprom_gravar_word
                      i1_eeprom_read
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (4) _adcon_captura_grava                                 15    15      0    5249
                                             40 BANK0     15    15      0
                          _lcd_clear
                    _eeprom_ler_word
                    _adcon_ler_canal
                       _adcon_mostra
                             ___bmul
                         i1_lcd_puts
               i1_eeprom_gravar_word
                      i1_eeprom_read
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (7) i1_eeprom_gravar_word                                 4     2      2     438
                                              3 COMMON     4     2      2
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (6) i1_eeprom_write                                       3     2      1     146
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _adcon_mostra                                        20    17      3    2890
                                             20 BANK0     20    17      3
                                _div
                            _sprintf
                             ___bmul
                         i1_lcd_goto
                         i1_lcd_puts
 ---------------------------------------------------------------------------------
 (7) i1_lcd_puts                                           5     3      2     588
                                              4 COMMON     5     3      2
                             ___bmul (ARG)
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (7) i1_lcd_goto                                           3     2      1     438
                                              2 COMMON     3     2      1
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             20    12      8     845
                                              0 BANK0     20    12      8
                             ___bmul (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     159
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     162
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _div                                                  8     4      4     731
                                              9 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              7     3      4     296
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4     300
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) _adcon_ler_canal                                     13    11      2      92
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (7) _eeprom_ler_word                                      7     5      2     164
                                              2 COMMON     7     5      2
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (7) i1_eeprom_read                                        2     2      0      73
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _lcd_clear                                            2     2      0     292
                                              2 COMMON     2     2      0
                        i1_lcd_write
 ---------------------------------------------------------------------------------
 (8) i1_lcd_write                                          2     2      0     292
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _rs232_transmite                                      7     7      0     376
                                              4 COMMON     7     7      0
                             ___bmul
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (4) _btns_testa                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1      92
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _btns_init
   _rs232_init
   _lcd_init
     _lcd_write
   _lcd_puts
     _lcd_write
   _lcd_goto
     _lcd_write
   _eeprom_read
   _eeprom_write
   _eeprom_gravar_word
     _eeprom_write
   _adcon_init
   _timer0_init

 _handler (ROOT)
   _btns_testa
   _rs232_transmite
     ___bmul
     i1_eeprom_read
   _eeprom_ler_word
     i1_eeprom_read
   _adcon_captura_grava
     _lcd_clear
       i1_lcd_write
     _eeprom_ler_word
       i1_eeprom_read
     _adcon_ler_canal
     _adcon_mostra
       _div
         ___awdiv
         ___awmod
       _sprintf
         ___bmul (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
       ___bmul
       i1_lcd_goto
         i1_lcd_write
       i1_lcd_puts
         ___bmul (ARG)
         i1_lcd_write (ARG)
     ___bmul
     i1_lcd_puts
       ___bmul (ARG)
       i1_lcd_write (ARG)
     i1_eeprom_gravar_word
       i1_eeprom_write
     i1_eeprom_read
     i1_eeprom_write
   _estado_maquina
     _estado_inicial
       _estado_executa_muda
         _lcd_clear
           i1_lcd_write
         _eeprom_ler_word
           i1_eeprom_read
         _sprintf
           ___bmul (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         i1_lcd_goto
           i1_lcd_write
         i1_lcd_puts
           ___bmul (ARG)
           i1_lcd_write (ARG)
         i1_eeprom_gravar_word
           i1_eeprom_write
         i1_eeprom_read
         i1_eeprom_write
     _estado_menu_principal
       _lcd_clear
         i1_lcd_write
       _eeprom_ler_word
         i1_eeprom_read
       _adcon_ler_canal
       _adcon_mostra
         _div
           ___awdiv
           ___awmod
         _sprintf
           ___bmul (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         ___bmul
         i1_lcd_goto
           i1_lcd_write
         i1_lcd_puts
           ___bmul (ARG)
           i1_lcd_write (ARG)
       _estado_executa_muda
         _lcd_clear
           i1_lcd_write
         _eeprom_ler_word
           i1_eeprom_read
         _sprintf
           ___bmul (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         i1_lcd_goto
           i1_lcd_write
         i1_lcd_puts
           ___bmul (ARG)
           i1_lcd_write (ARG)
         i1_eeprom_gravar_word
           i1_eeprom_write
         i1_eeprom_read
         i1_eeprom_write
       ___bmul
       i1_lcd_puts
         ___bmul (ARG)
         i1_lcd_write (ARG)
       i1_eeprom_gravar_word
         i1_eeprom_write
       i1_eeprom_read
       i1_eeprom_write
     _estado_captura_mostra
       _estado_executa_muda
         _lcd_clear
           i1_lcd_write
         _eeprom_ler_word
           i1_eeprom_read
         _sprintf
           ___bmul (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         i1_lcd_goto
           i1_lcd_write
         i1_lcd_puts
           ___bmul (ARG)
           i1_lcd_write (ARG)
         i1_eeprom_gravar_word
           i1_eeprom_write
         i1_eeprom_read
         i1_eeprom_write
     _estado_ver_todos
       _estado_executa_muda
         _lcd_clear
           i1_lcd_write
         _eeprom_ler_word
           i1_eeprom_read
         _sprintf
           ___bmul (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         i1_lcd_goto
           i1_lcd_write
         i1_lcd_puts
           ___bmul (ARG)
           i1_lcd_write (ARG)
         i1_eeprom_gravar_word
           i1_eeprom_write
         i1_eeprom_read
         i1_eeprom_write
       ___lbdiv
         i1_eeprom_read (ARG)
       i1_eeprom_read
     _estado_max_min
       _estado_executa_muda
         _lcd_clear
           i1_lcd_write
         _eeprom_ler_word
           i1_eeprom_read
         _sprintf
           ___bmul (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         i1_lcd_goto
           i1_lcd_write
         i1_lcd_puts
           ___bmul (ARG)
           i1_lcd_write (ARG)
         i1_eeprom_gravar_word
           i1_eeprom_write
         i1_eeprom_read
         i1_eeprom_write
     _estado_menu_limpar
       _estado_executa_muda
         _lcd_clear
           i1_lcd_write
         _eeprom_ler_word
           i1_eeprom_read
         _sprintf
           ___bmul (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         i1_lcd_goto
           i1_lcd_write
         i1_lcd_puts
           ___bmul (ARG)
           i1_lcd_write (ARG)
         i1_eeprom_gravar_word
           i1_eeprom_write
         i1_eeprom_read
         i1_eeprom_write
     _estado_menu_conf_tempo_amostra
       _estado_executa_muda
         _lcd_clear
           i1_lcd_write
         _eeprom_ler_word
           i1_eeprom_read
         _sprintf
           ___bmul (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         i1_lcd_goto
           i1_lcd_write
         i1_lcd_puts
           ___bmul (ARG)
           i1_lcd_write (ARG)
         i1_eeprom_gravar_word
           i1_eeprom_write
         i1_eeprom_read
         i1_eeprom_write
       i1_eeprom_gravar_word
         i1_eeprom_write
     _estado_menu_conf_quant_sensores
       _estado_executa_muda
         _lcd_clear
           i1_lcd_write
         _eeprom_ler_word
           i1_eeprom_read
         _sprintf
           ___bmul (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         i1_lcd_goto
           i1_lcd_write
         i1_lcd_puts
           ___bmul (ARG)
           i1_lcd_write (ARG)
         i1_eeprom_gravar_word
           i1_eeprom_write
         i1_eeprom_read
         i1_eeprom_write
       i1_eeprom_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      2      13       9       19.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      C      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CA      12        0.0%
ABS                  0      0      BC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       E       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Fri Feb 12 18:02:36 2016

                                       pc 0002                            ___bmul@product 0072  
                             __CFG_CP$OFF 0000                                        l31 0EC6  
                                      l32 0EA0                                        l33 0EB9  
                                      l34 0EC7                                        l35 0ED2  
                                      l36 0ED2                                        l37 0ED3  
                                      l70 04CC                                        l38 0ED3  
                                      l71 04D6                                        l72 04D9  
                                      l73 04E3                                        l74 04E6  
                                      l90 0ADE                                        l75 04F0  
                                      l91 0A91                                        l83 1740  
                                      l76 04F4                                        l92 0AF5  
                                      l84 1731                                        l77 04FE  
                                      l69 04C9                                        l93 0AF5  
                                      l85 174A                                        l86 1738  
                                      l87 1758                                        l96 17C4  
                                      _RD 0C60                                        _WR 0C61  
                            ___awdiv@sign 0076                                        fsr 0004  
            _gl_item_menu_config_sensores 006E                                       l134 07F9  
                                     l313 15B3                                       l600 17FE  
                                     l601 17FF                                       l602 17FF  
                                     l266 15CC                                       l276 15E6  
                                     l188 14FD                                       l574 1609  
                                     l575 1611                                       l576 162A  
                                     l595 17C8                                       l596 17C9  
                                     l597 17C9                                       l598 17D0  
                                     l599 17EC                                       _GIE 005F  
                                     _RB0 0030                                       _RB1 0031  
                                     _RC0 0038                                       _RB2 0032  
                                     _RC1 0039                                       _RC2 003A  
                                     _RB4 0034                                       _RB5 0035  
                                     _RB6 0036                                       _RB7 0037  
                                     _TX9 04C6                                       _div 0806  
                                     fsr0 0004                                       indf 0000  
                            ___awmod@sign 0076                    estado_menu_principal@i 0064  
                            __CFG_FOSC$XT 0000                                i1_lcd_goto 1651  
                              i1_lcd_puts 08D2                              __CFG_LVP$OFF 0000  
                  estado_executa_muda@tmp 0038                                      ?_div 0079  
                                    l4701 0ED1                                      l4703 07C6  
                                    l4711 15AD                                      l4705 07EE  
                                    l4713 15AF                                      l4801 04C1  
                                    l4721 0A8D                                      l4707 07F8  
                                    l4715 15B0                                      l4811 04F4  
                                    l4803 04C5                                      l4731 0AD1  
                                    l4723 0A91                                      l4709 159B  
                                    l4813 04FA                                      l4805 04D2  
                                    l4717 178A                                      l4733 0AD7  
                                    l4725 0AAF                                      l4741 1738  
                                    l4815 04FD                                      l4807 04DF  
                                    l4719 179A                                      l4727 0AB5  
                                    l4735 0ADE                                      l4743 173F  
                                    l4751 1611                                      l4671 0E1B  
                                    l4809 04EC                                      l4729 0ABB  
                                    l4745 1740                                      l4737 172D  
                                    l4753 162A                                      l4761 17E7  
                                    l4681 0E54                                      l4673 0E2A  
                                    l4747 174A                                      l4739 1731  
                                    l4771 17F6                                      l4763 17EB  
                                    l4755 17D0                                      l4691 0EA0  
                                    l4683 0E5F                                      l4675 0E35  
                                    l4749 1752                                      l4773 17FC  
                                    l4765 17F0                                      l4757 17DC  
                                    l4781 15BF                                      l4693 0EAC  
                                    l4685 0E95                                      l4677 0E40  
                                    l4767 17F4                                      l4759 17E4  
                                    l4775 15D0                                      l4783 15C0  
                                    l4791 14F5                                      l4695 0EB2  
                                    l4687 0E98                                      l4679 0E49  
                                    l4769 17F5                                      l4785 15C6  
                                    l4777 15B4                                      l4793 14F8  
                                    l4689 0E9F                                      l4697 0EB9  
                                    l4787 15C9                                      l4779 15BC  
                                    l4795 14F9                                      l4699 0EC7  
                                    l4797 14FB                                      l4789 14F1  
                                    l4799 14FC                       _menu_quant_sensores 052E  
                                    STR_1 05C5                                      STR_2 0694  
                                    STR_3 060B                                      STR_4 0688  
                                    STR_5 066C                                      STR_6 0673  
                                    STR_7 068E                                      STR_8 067A  
                                    STR_9 0681                                      _BRGH 04C2  
                                    _CREN 00C4                                      _IOCB 0096  
                                    u3800 07E0                                      u3801 07DC  
                                    u3810 07EA                                      u3811 07E6  
                                    u3804 07D9                                      u3900 04D2  
                                    u3901 04D1                                      u3814 07E3  
                                    u3910 04DF                                      u3911 04DE  
                                    _RBIE 005B                                      u3824 07ED  
                                    u3920 04EC                                      u3840 0AF4  
                                    u3760 0E5F                                      _RBIF 0058  
                                    u3921 04EB                                      u3841 0AF3  
                                    u3761 0E5E                                      u3850 1610  
                                    u3770 0E9E                                      u3835 0AA6  
                                    u3851 160F                                      u3771 0E9D  
                                    u3860 17CF                                      u3780 0EB8  
                                    u3861 17CE                                      u3781 0EB7  
                                    i1l70 16AE                                      u3790 07D6  
                                    u3870 17EB                                      i1l71 16B4  
                                    u3791 07D2                                      u3871 17EA  
                                    i1l72 16B5                                      i1l80 159A  
                                    u3880 17FC                                      i1l73 16BB  
                                    u3881 17FB                                      i1l74 16BC  
                                    i1l90 090D                                      u3890 04C5  
                                    i1l75 16C2                                      i1l83 1665  
                                    i1l91 08D6                                      u3891 04C4  
                                    i1l76 16C4                                      i1l84 1656  
                                    i1l92 091E                                      i1l77 16CC  
                                    i1l69 16AB                                      i1l85 166D  
                                    i1l93 091E                                      u3957 1756  
                                    i1l86 165D                                      i1l87 1677  
                                    u3967 0AB9                                      u3977 0AD5  
                                    u3987 04F8                                      _TMR0 0001  
                                    _SPEN 00C7                                      _WREN 0C62  
                                    _TXEN 04C5                                      _SYNC 04C4  
                                    _WPUB 0095                            ??_eeprom_write 00E5  
                       ??_adcon_ler_canal 0072                                      _main 0E1B  
                                    btemp 007E                               lcd_puts@cmd 00EA  
                             lcd_puts@str 00E6                                      start 0012  
                        _estado_ver_todos 0971                    ?_estado_menu_principal 0070  
                       ___bmul@multiplier 0073                               i1_lcd_write 16A2  
              __end_of_menu_tempo_amostra 052E                        eeprom_ler_word@end 0076  
                                   ??_div 007D               __size_of_eeprom_gravar_word 001A  
                                   ?_main 0070                           __end_of___awdiv 0B68  
                         __end_of___lbdiv 172A                                     _EEADR 010D  
                                   STR_10 0665                                     STR_11 0646  
                                   STR_12 05EA                                     STR_21 065E  
                                   STR_13 05F5                                     STR_14 0600  
                                   STR_30 05EA                                     STR_22 0634  
                                   STR_15 05B7                                     STR_31 05F5  
                                   STR_23 058B                                     STR_40 05B7  
                                   STR_16 063D                                     _BRG16 0C3B  
                                   STR_32 0600                                     STR_24 062A  
                                   STR_41 05D3                                     STR_33 0688  
                                   STR_25 064F                             __CFG_WDTE$OFF 0000  
                                   STR_42 063D                                     STR_34 066C  
                                   STR_26 0657                                     STR_43 05D3  
                                   STR_35 0673                                     STR_27 05A9  
                                   STR_44 0620                                     STR_36 068E  
                                   STR_28 059A                           __end_of___awmod 0A8D  
                                   STR_45 0616                                     STR_29 0646  
                                   STR_37 067A                                     STR_46 05DF  
                                   STR_38 0681                                     STR_39 0665  
                                   _CARRY 0018                                     _ANSEL 0188  
                         ___awdiv@divisor 0070                           __end_of___lwdiv 08D2  
                                   i1l130 16F1                                     i1l131 16F8  
                                   i1l127 16E3                                     i1l128 16FA  
                                   i1l240 071F                                     i1l129 16EA  
                                   i1l241 07C5                                     i1l242 07C4  
                                   i1l250 07C5                                     i1l170 0D8E  
                                   i1l243 07BC                                     i1l171 0D8D  
                                   i1l316 0C55                                     i1l244 072C  
                                   i1l500 0970                                     i1l420 0B8F  
                                   i1l172 0DEC                                     i1l317 0C23  
                                   i1l253 0C8E                                     i1l245 0743  
                                   i1l237 0720                                     i1l501 0931  
                                   i1l421 0B98                                     i1l173 0DEB  
                                   i1l318 0C5C                                     i1l254 0CCB  
                                   i1l246 07C3                                     i1l238 0718  
                                   i1l510 02D7                                     i1l502 0944  
                                   i1l414 0BBD                                     i1l422 0BA1  
                                   i1l174 0DDB                                     i1l319 0C5C  
                                   i1l255 0C92                                     i1l263 0D74  
                                   i1l247 07B5                                     i1l239 06F4  
                                   i1l511 002F                                     i1l431 152D  
                                   i1l503 0945                                     i1l423 0BAA  
                                   i1l415 0B6C                                     i1l175 0DE5  
                                   i1l256 0C92                                     i1l600 1788  
                                   i1l248 076A                                     i1l512 02F3  
                                   i1l520 0140                                     i1l440 0300  
                                   i1l432 152D                                     i1l504 094C  
                                   i1l416 0BDC                                     i1l424 0BB3  
                                   i1l176 0E0E                                     i1l273 16A1  
                                   i1l257 0C97                           __end_of___lwmod 0885  
                                   i1l601 1789                                     i1l249 0782  
                                   i1l521 0142                                     i1l513 0047  
                                   i1l441 030D                                     i1l505 0970  
                                   i1l417 0B74                                     i1l425 0BDC  
                                   i1l177 0E0D                                     i1l169 0D8F  
                                   i1l258 0CE3                                     i1l602 1789  
                                   i1l530 02FB                                     i1l522 017E  
                                   i1l514 0049                                     i1l442 04BD  
                                   i1l450 037B                                     i1l418 0B7D  
                                   i1l178 0E0B                                     i1l523 017D  
                                   i1l515 004B                                     i1l451 04B0  
                                   i1l443 030E                                     i1l435 153F  
                                   i1l419 0B86                                     i1l179 0E0E  
                                   i1l540 0EDE                                     i1l276 1568  
                                   i1l524 0224                                     i1l516 006A  
                                   i1l428 14E8                                     i1l460 045A  
                                   i1l452 0382                                     i1l444 0321  
                                   i1l436 153F                                     i1l541 0EF0  
                                   i1l525 0225                                     i1l517 0141  
                                   i1l461 0461                                     i1l453 044C  
                                   i1l445 0322                                     i1l550 0F37  
                                   i1l542 0EF9                                     i1l526 025C  
                                   i1l518 0139                                     i1l446 0497  
                                   i1l462 0468                                     i1l454 03B0  
                                   i1l470 0984                                     i1l551 0F36  
                                   i1l543 0EF2                                     i1l527 0271  
                                   i1l519 00A6                                     i1l439 04B2  
                                   i1l463 046F                                     i1l455 03D3  
                                   i1l447 0323                                     i1l471 09C7  
                                   i1l800 0A55                                     i1l544 0FFA  
                                   i1l560 0FF9                                     i1l552 0F44  
                                   i1l528 0280                                     i1l464 0484  
                                   i1l456 0453                                     i1l448 0374  
                                   i1l472 0985                                     i1l801 0A49  
                                   i1l561 0FFF                                     i1l553 0F4E  
                                   i1l545 0EF3                                     i1l529 02AB  
                                   i1l457 0445                                     i1l449 0350  
                                   i1l465 04BD                                     i1l473 09B1  
                                   i1l802 0A5A                                     i1l554 0F7A  
                                   i1l546 0EF4                                     i1l458 03FA  
                                   i1l474 09B2                                     i1l482 0A18  
                                   i1l490 0A28                                     i1l803 0A5B  
                                   i1l539 0FDF                                     i1l555 0F6F  
                                   i1l547 0F18                                     i1l459 0412  
                                   i1l475 09C7                                     i1l483 09CC  
                                   i1l804 0A6C                                     i1l556 0F8C  
                                   i1l548 0EF5                                     i1l468 09BA  
                                   i1l484 09E1                                     i1l805 0A7A  
                                   i1l557 0FD3                                     i1l549 0EF6  
                                   i1l469 0975                                     i1l485 0A28  
                                   i1l574 15E8                                     i1l806 0A85  
                                   i1l822 0841                                     i1l558 0F91  
                                   i1l478 151C                                     i1l486 09E2  
                                   i1l575 15F0                                     i1l807 0A8C  
                                   i1l559 0FDE                                     i1l479 151C  
                                   i1l487 09FA                                     i1l816 156C  
                                   i1l576 1605                                     i1l488 09FB  
                                   i1l817 1575                                     i1l489 0A02  
                                   i1l497 0960                                     i1l818 157F  
                                   i1l930 1711                                     i1l498 0923  
                                   i1l819 1581                                     i1l595 175A  
                                   i1l931 171D                                     i1l499 0930  
                                   i1l596 175B                                     i1l932 1726  
                                   i1l597 175B                                     i1l933 1729  
                                   i1l790 0B2E                                     i1l598 1762  
                                   i1l926 1727                                     i1l791 0B47  
                                   i1l599 1776                                     i1l927 170B  
                                   i1l792 0B55                                     i1l784 0B03  
                                   i1l928 1704                                     i1l793 0B60  
                                   i1l785 0B11                                     i1l929 1710  
                                   i1l794 0B67                                     i1l786 0B56  
                                   i1l787 0B28                                     i1l788 0B1C  
                                   i1l789 0B2D                                     i1l797 0A36  
                                   i1l798 0A40                                     i1l799 0A7B  
                         ___awdiv@counter 0075                                     _RCREG 001A  
                                   _SPBRG 0099                                     _TRISA 0085  
                                   _TXREG 0019                             __CFG_PWRTE$ON 0000  
                         __end_of_handler 0E1B                           __end_of_dpowers 0544  
                                   _errno 00C9                                     div@rv 0020  
                                   main@i 01A2                            __CFG_BOREN$OFF 0000  
                      _estado_menu_limpar 151D                                     pclath 000A  
                   __size_of_adcon_mostra 0091                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 1000  
                estado_menu_principal@opt 0060                           ___lbdiv@divisor 0072  
                         ___lbdiv@counter 0075                       ?_estado_menu_limpar 0070  
                estado_executa_muda@F1751 0190                           __initialization 162B  
                            __end_of_main 0ED6         estado_menu_conf_tempo_amostra@opt 005A  
                             i1lcd_goto@x 0072                               i1lcd_goto@y 0074  
                estado_executa_muda@i_835 0058                                    ??_main 01A1  
                estado_executa_muda@maior 0050                  estado_executa_muda@menor 0052  
                 i1eeprom_gravar_word@end 0076                      ??_estado_menu_limpar 007E  
                  __size_ofi1_eeprom_read 001F                               ?i1_lcd_goto 0072  
                            _adcon_mostra 0CE4                               ?i1_lcd_puts 0074  
          __size_of_estado_captura_mostra 0012                       _estado_executa_muda 0015  
           __end_of_estado_captura_mostra 1540                                    _ADRESH 001E  
                                  _ADRESL 009E                                    _EEDATA 010C  
                                  _EECON1 018C                                    _EECON2 018D  
                        ___awdiv@dividend 0072                                    _ANSELH 0189  
                                  i1l1010 08A2                                    i1l1011 08BB  
                                  i1l1012 08C9                                    i1l1020 085D  
                                  i1l1013 08D1                                    i1l1021 086E  
                                  i1l1006 08CA                                    i1l1022 087C  
                                  i1l1007 089C                                    i1l1023 0884  
                                  i1l1008 0890                                    i1l1016 087D  
                                  i1l1009 08A1                                    i1l1017 0857  
                                  i1l1018 084B                                    i1l1019 085C  
                                  i1l4001 177A                                    i1l4011 16CD  
                                  i1l4003 177E                                    i1l4021 16E9  
                                  i1l4013 16DA                                    u200_25 0A6D  
                                  i1l4005 177F                                    i1l4101 16FD  
                                  i1l4031 16F8                                    i1l4023 16EE  
                                  i1l4015 16E0                                    i1l4007 1780  
                                  i1l4111 1711                                    i1l4103 1701  
                                  u201_20 0A79                                    i1l4033 16FA  
                                  i1l4025 16F0                                    i1l4017 16E2  
                                  i1l4041 0BED                                    u201_21 0A78  
                                  i1l4201 0F46                                    i1l4009 1786  
                                  i1l4113 1719                                    i1l4105 1704  
                                  i1l4121 1727                                    i1l4027 16F5  
                                  i1l4019 16E7                                    i1l4051 0C23  
                                  i1l4043 0BF6                                    i1l4035 0BDD  
                                  i1l4131 0852                                    i1l4211 0F73  
                                  i1l4203 0F4D                                    i1l4123 1729  
                                  i1l4115 171B                                    i1l4107 1706  
                                  i1l4029 16F7                                    i1l4061 0C4F  
                                  i1l4053 0C2D                                    i1l4045 0C0F  
                                  i1l4037 0BDE                                    i1l3421 0B00  
                                  i1l4141 0875                                    i1l4133 0857  
                                  i1l4125 0842                                    i1l4221 0F91  
                                  i1l4213 0F7A                                    i1l4205 0F4E  
                                  i1l4301 00E2                                    i1l4117 171D  
                                  i1l4109 170B                                    i1l3511 156C  
                                  i1l4055 0C31                                    i1l4063 0C55  
                                  i1l4047 0C17                                    i1l4039 0BE7  
                                  i1l4151 16B2                                    i1l4071 169A  
                                  i1l3431 0B13                                    i1l3423 0B03  
                                  i1l3415 0AF6                                    i1l4135 085D  
                                  i1l4127 0848                                    i1l4143 087D  
                                  i1l4223 0FC7                                    i1l4215 0F80  
                                  i1l4207 0F6E                                    i1l4231 0FFA  
                                  i1l4303 00FF                                    i1l4311 0139  
                                  i1l4119 171F                                    u202_20 0A7F  
                                  i1l3521 157F                                    i1l3513 1570  
                                  i1l4057 0C43                                    i1l4049 0C1A  
                                  i1l4161 16CB                                    i1l4153 16B9  
                                  i1l4073 16A1                                    i1l4065 1679  
                                  i1l4081 0C81                                    i1l3441 0B2E  
                                  i1l3433 0B19                                    i1l3425 0B07  
                                  i1l3417 0AF7                                    i1l4145 0884  
                                  i1l4137 0867                                    i1l4129 084B  
                                  i1l4233 0FFF                                    i1l4225 0FCE  
                                  i1l4217 0F87                                    i1l4209 0F6F  
                                  i1l4241 1664                                    i1l4401 0732  
                                  i1l4321 0169                                    i1l4313 0142  
                                  i1l4305 0124                                    i1l3523 1581  
                                  i1l3515 1575                                    i1l4059 0C47  
                                  i1l4155 16C0                                    i1l4147 16A3  
                                  i1l4067 167B                                    i1l4091 0CE3  
                                  i1l4083 0C83                                    i1l4075 0C5E  
                                  i1l3443 0B3F                                    i1l3435 0B1C  
                                  i1l3451 0B56                                    i1l3427 0B0C  
                                  i1l3419 0AFB                                    i1l4139 086E  
                                  i1l4227 0FD3                                    i1l4219 0F8C  
                                  i1l4171 0ED9                                    i1l4243 1665  
                                  i1l4235 1652                                    i1l4251 08D6  
                                  i1l4163 1554                                    i1l4411 0753  
                                  i1l4403 0733                                    i1l4331 01CD  
                                  i1l4323 0173                                    i1l4315 0147  
                                  i1l4307 012D                                    i1l3517 1577  
                                  i1l3509 156A                                    i1l4157 16C4  
                                  i1l4149 16A7                                    i1l4165 1582  
                                  i1l4069 1687                                    i1l4085 0C8D  
                                  i1l4077 0C66                                    i1l3453 0B5A  
                                  i1l3445 0B45                                    i1l3437 0B23  
                                  i1l3429 0B11                                    i1l3461 0A2A  
                                  i1l4093 0806                                    i1l4181 0EF8  
                                  i1l4173 0EDE                                    i1l4229 0FDF  
                                  i1l4245 166D                                    i1l4237 1656  
                                  i1l4261 0908                                    i1l4253 08EA  
                                  i1l4421 0799                                    i1l4413 075D  
                                  i1l4405 0738                                    i1l4341 0225  
                                  i1l4333 01D4                                    i1l4325 017E  
                                  i1l4317 0155                                    i1l4309 0134  
                                  i1l4501 0468                                    i1l3519 1579  
                                  i1l4159 16C8                                    i1l4167 1585  
                                  i1l4087 0C97                                    i1l4079 0C7C  
                                  i1l3455 0B60                                    i1l3447 0B47  
                                  i1l3439 0B28                                    i1l3471 0A40  
                                  i1l3463 0A2E                                    i1l4095 0838  
                                  i1l4191 0F2C                                    i1l4183 0EF9  
                                  i1l4175 0EE4                                    i1l4247 1673  
                                  i1l4239 165D                                    i1l4255 08F0  
                                  i1l4263 090D                                    i1l4271 0D46  
                                  i1l4423 07A3                                    i1l4415 076A  
                                  i1l4407 0742                                    i1l4351 0264  
                                  i1l4343 0251                                    i1l4335 01ED  
                                  i1l4327 01AE                                    i1l4319 0163  
                                  i1l4511 0496                                    i1l4503 046F  
                                  i1l4431 02FF                                    i1l4169 1591  
                                  i1l4089 0CCB                                    i1l3457 0B67  
                                  i1l3449 0B4E                                    i1l3481 0A5B  
                                  i1l3473 0A46                                    i1l3465 0A33  
                                  i1l4097 0841                                    i1l3801 08D1  
                                  i1l4193 0F30                                    i1l4185 0F1C  
                                  i1l4177 0EEB                                    i1l4257 08F4  
                                  i1l4249 08D2                                    i1l4273 0D6B  
                                  i1l4265 0CE4                                    i1l4417 0776  
                                  i1l4425 07B5                                    i1l4409 0743  
                                  i1l4361 0285                                    i1l4353 026A  
                                  i1l4345 0254                                    i1l4337 0204  
                                  i1l4329 01C4                                    i1l4281 004B  
                                  i1l4505 047D                                    i1l4513 0497  
                                  i1l4441 031A                                    i1l4433 0304  
                                  i1l4521 1537                                    i1l4601 0B74  
                                  i1l3491 0A7F                                    i1l3483 0A65  
                                  i1l3475 0A49                                    i1l3467 0A36  
                                  i1l3459 0A29                                    i1l4187 0F24  
                                  i1l4195 0F37                                    i1l4179 0EF0  
                                  i1l4259 0904                                    i1l4267 0CFB  
                                  i1l4419 0793                                    i1l4427 07BC  
                                  i1l4363 02AB                                    i1l4347 025B  
                                  i1l4355 0271                                    i1l4339 021A  
                                  i1l4291 0090                                    i1l4283 005B  
                                  i1l4371 02F3                                    i1l4275 0018  
                                  i1l4515 04B1                                    i1l4507 0484  
                                  i1l4451 036D                                    i1l4443 0323  
                                  i1l4435 0306                                    i1l4523 1538  
                                  i1l4099 16FC                                    i1l4531 0985  
                                  i1l4611 0BA1                                    i1l4603 0B7D  
                                  i1l3493 0A85                                    i1l3485 0A6C  
                                  i1l3477 0A50                                    i1l3469 0A3A  
                                  i1l4197 0F3F                                    i1l4189 0F28  
                                  i1l4269 0D14                                    i1l4381 06D5  
                                  i1l4373 0696                                    i1l4365 02B0  
                                  i1l4357 0276                                    i1l4349 025C  
                                  i1l4293 00A4                                    i1l4285 0060  
                                  i1l4277 002F                                    i1l4429 14E2  
                                  i1l4509 048F                                    i1l4461 03A0  
                                  i1l4453 0374                                    i1l4445 0333  
                                  i1l4437 030E                                    i1l4517 04B2  
                                  i1l4533 09A2                                    i1l4541 09BA  
                                  i1l4525 0974                                    i1l4613 0BAA  
                                  i1l4605 0B86                                    i1l4621 0D75  
                                  i1l3495 0A8C                                    i1l3487 0A73  
                                  i1l3479 0A55                                    i1l4199 0F44  
                                  i1l4391 0711                                    i1l4383 06E3  
                                  i1l4375 06A1                                    i1l4367 02D6  
                                  i1l4359 0280                                    i1l4295 00A6  
                                  i1l4287 006A                                    i1l4279 0034  
                                  i1l4471 03C8                                    i1l4463 03AE  
                                  i1l4455 037B                                    i1l4447 034E  
                                  i1l4439 0316                                    i1l4519 1531  
                                  i1l4535 09AA                                    i1l4527 097B  
                                  i1l4543 150F                                    i1l4551 09CB  
                                  i1l4615 0BB3                                    i1l4607 0B8F  
                                  i1l4631 0D93                                    i1l4623 0D7B  
                                  u204_20 1570                                    u300_20 16E7  
                                  u204_21 156F                                    u300_21 16E6  
                                  i1l3489 0A7B                                    i1l4393 0718  
                                  i1l4385 06E8                                    i1l4377 06BC  
                                  i1l4297 00B4                                    i1l4289 0075  
                                  i1l4369 02D7                                    i1l4481 03FA  
                                  i1l4473 03D2                                    i1l4465 03B0  
                                  i1l4457 0382                                    i1l4449 0350  
                                  i1l4537 09B2                                    i1l4529 097D  
                                  i1l4545 1515                                    i1l4561 09ED  
                                  i1l4553 09CC                                    i1l4617 0BBC  
                                  i1l4609 0B98                                    i1l4641 0DDB  
                                  i1l4633 0D97                                    i1l4625 0D81  
                                  i1l4387 06F0                                    i1l4395 0720  
                                  i1l4379 06C7                                    i1l4299 00CB  
                                  i1l4483 0406                                    i1l4491 0445  
                                  i1l4467 03C2                                    i1l4475 03D3  
                                  i1l4459 0392                                    i1l4539 09B9  
                                  i1l4547 1520                                    i1l4571 0A17  
                                  i1l4563 09F3                                    i1l4555 09D4  
                                  i1l4619 0BBD                                    i1l4651 0DF0  
                                  i1l4643 0DE0                                    i1l4635 0DA5  
                                  i1l4627 0D87                                    i1l3781 088D  
                                  i1l4397 0728                                    i1l4389 06F4  
                                  i1l4485 0423                                    i1l4477 03E3  
                                  i1l4469 03C3                                    i1l4493 044C  
                                  i1l4549 1526                                    i1l4565 09FB  
                                  i1l4557 09DA                                    i1l4573 0A18  
                                  i1l4581 0931                                    i1l4653 0DF4  
                                  i1l4645 0DE5                                    i1l4637 0DCA  
                                  i1l4629 0D8F                                    i1l3791 08B3  
                                  i1l3783 0890                                    i1l4399 072C  
                                  i1l4487 0429                                    i1l4479 03ED  
                                  i1l4495 0453                                    i1l4567 0A02  
                                  i1l4559 09E2                                    i1l4591 0958  
                                  i1l4583 0939                                    i1l4575 0922  
                                  i1l4655 0E00                                    i1l4647 0DE9  
                                  i1l4639 0DD4                                    u205_20 157E  
                                  u301_20 16EE                                    u205_21 157D  
                                  u301_21 16ED                                    i1l3793 08B9  
                                  i1l3785 0897                                    i1l3777 0885  
                                  i1l4497 045A                                    i1l4489 0433  
                                  i1l4569 0A10                                    i1l4593 095F  
                                  i1l4585 093D                                    i1l4577 0927  
                                  i1l4657 0E04                                    i1l4649 0DEC  
                                  i1l3795 08BB                                    i1l3787 089C  
                                  i1l3779 0887                                    i1l4499 0461  
                                  i1l4587 0945                                    i1l4579 0929  
                                  i1l4595 0960                                    i1l4659 0E0B  
                                  i1l3797 08C2                                    i1l3789 08A2  
                                  i1l4589 094C                                    i1l4597 0B6B  
                                  i1l3799 08CA                                    i1l3991 1762  
                                  i1l4599 0B6C                                    u302_20 16F5  
                                  u310_20 170F                                    u302_21 16F4  
                                  i1l3993 1768                                    u310_21 170E  
                                  i1l3987 15F0                                    i1l3995 176E  
                                  i1l3989 1605                                    i1l3997 1771  
                                  i1l3999 1775                                    u303_20 0C5B  
                                  u311_20 1719                                    u303_21 0C5A  
                                  u311_21 1718                                    u320_20 16B2  
                                  u304_20 0C8C                                    u312_20 1725  
                                  u320_21 16B1                                    u304_21 0C8B  
                                  u312_21 1724                                    u400_27 0906  
                                  u321_20 16B9                                    u305_20 0C96  
                                  u313_20 0848                                    u321_21 16B8  
                                  u305_21 0C95                                    u313_21 0847  
                                  u401_27 1675                                    u322_20 16C0  
                                  u330_20 0FDD                                    u322_21 16BF  
                                  u306_21 0CAD                                    u330_21 0FDC  
                                  u306_22 0CB4                                    u306_23 0CBB  
                                  u314_25 084C                                    u402_27 0C7E  
                                  u307_20 0CCA                                    u315_20 085B  
                                  u331_20 0FF8                                    u323_20 0EE4  
                                  u307_21 0CC9                                    u315_21 085A  
                                  u331_21 0FF7                                    u323_21 0EE3  
                                  u403_27 1595                                    u308_20 0CD9  
                                  u316_20 0867                                    u324_20 0F1C  
                                  u340_20 025A                                    u316_21 0866  
                                  u324_21 0F1B                                    u340_21 0259  
                                  u308_25 0CD4                                    u316_25 0863  
                                  u332_25 08E1                                    u404_27 16C6  
                                  u325_20 0F2C                                    u333_20 091D  
                                  u341_20 0270                                    u309_20 1701  
                                  u325_21 0F2B                                    u333_21 091C  
                                  u341_21 026F                                    u317_25 086F  
                                  u405_27 0C13                                    u190_20 0B3F  
                                  u270_20 088D                                    u318_20 087B  
                                  u326_20 0F4C                                    u334_20 0CEE  
                                  u350_20 0304                                    u190_21 0B3E  
                                  u270_21 088C                                    u318_21 087A  
                                  u326_21 0F4B                                    u190_25 0B3B  
                                  u342_25 028C                                    u406_27 0C1E  
                                  u319_20 16A7                                    u327_20 0F6D  
                                  u343_20 06F0                                    u335_20 0020  
                                  u351_20 0316                                    u319_21 16A6  
                                  u327_21 0F6C                                    u343_21 06EF  
                                  u351_21 0315                                    u191_25 0B48  
                                  u271_25 0891                                    u327_25 0F69  
                                  u407_27 0C35                                    u192_20 0B54  
                                  u184_20 0AFB                                    u272_20 08A0  
                                  u328_20 0F79                                    u344_20 071E  
                                  u336_20 0060                                    u352_20 037A  
                                  u360_20 1515                                    u192_21 0B53  
                                  u184_21 0AFA                                    u272_21 089F  
                                  u328_21 0F78                                    u344_21 071D  
                                  u336_21 005F                                    u352_21 0379  
                                  u360_21 1514                                    u408_27 0C4B  
                                  u193_20 0B5A                                    u185_20 0B07  
                                  u329_20 0F80                                    u345_20 0728  
                                  u337_20 013F                                    u353_20 03C2  
                                  u361_20 1526                                    u185_21 0B06  
                                  u329_21 0F7F                                    u345_21 0727  
                                  u337_21 013E                                    u353_21 03C1  
                                  u361_21 1525                                    u273_25 08A3  
                                  u353_25 03BE                                    u409_27 16D3  
                                  u186_20 0B19                                    u194_20 0A2E  
                                  u274_20 08B3                                    u346_20 0732  
                                  u338_20 0169                                    u354_20 03ED  
                                  u362_20 09D4                                    u370_20 0D97  
                                  u186_21 0B18                                    u194_21 0A2D  
                                  u274_21 08B2                                    u346_21 0731  
                                  u338_21 0168                                    u354_21 03EC  
                                  u362_21 09D3                                    u370_21 0D96  
                                  u274_25 08AF                                    u354_25 03E9  
                                  u195_20 0A3A                                    u347_20 075D  
                                  u339_20 0173                                    u355_20 0406  
                                  u363_20 09ED                                    u195_21 0A39  
                                  u347_21 075C                                    u339_21 0172  
                                  u355_21 0405                                    u363_21 09EC  
                                  u187_25 0B1D                                    u275_25 08BC  
                                  u347_25 0759                                    u339_25 016F  
                                  u355_25 0402                                    u371_25 0DAA  
                                  u188_20 0B2C                                    u196_20 0A46  
                                  u276_20 08C8                                    u348_20 0776  
                                  u356_20 0452                                    u364_20 0927  
                                  u372_20 0DD4                                    u188_21 0B2B  
                                  u196_21 0A45                                    u276_21 08C7  
                                  u348_21 0775                                    u356_21 0451  
                                  u372_21 0DD3                                    u348_25 0772  
                                  u372_25 0DD0                                    u349_20 07C2  
                                  u357_20 1537                                    u365_20 0939  
                                  u373_20 0DF0                                    u349_21 07C1  
                                  u357_21 1536                                    u365_21 0938  
                                  u373_21 0DEF                                    u189_25 0B2F  
                                  u197_25 0A4A                                    u198_20 0A59  
                                  u358_20 097B                                    u374_20 0DF4  
                                  u366_20 0D7B                                    u198_21 0A58  
                                  u374_21 0DF3                                    u366_21 0D7A  
                                  u295_20 15EF                                    u199_20 0A65  
                                  u359_20 09A2                                    u375_20 0E04  
                                  u367_20 0D81                                    u295_21 15EE  
                                  u199_21 0A64                                    u359_21 09A1  
                                  u367_21 0D80                                    u199_25 0A61  
                                  u296_20 1761                                    u368_20 0D87  
                                  u296_21 1760                                    u368_21 0D86  
                                  u297_20 1775                                    u369_20 0D93  
                                  u297_21 1774                                    u369_21 0D92  
                                  u298_20 1786                                    u298_21 1785  
                                  u299_20 16E0                                    u299_21 16DF  
                                  u399_27 08F2                                    _TRISB0 0430  
                                  _TRISB1 0431                                    _TRISC0 0438  
                                  _TRISB2 0432                                    _TRISC1 0439  
                                  _TRISC2 043A                                    _TRISB4 0434  
                                  _TRISB5 0435                                    _TRISB6 0436  
                                  _TRISB7 0437                                    _TRISC6 043E  
                                  _TRISC7 043F                  __size_of_eeprom_ler_word 002A  
                    __size_of_eeprom_read 0025                          __end_of_lcd_init 17C5  
                        __end_of_lcd_goto 1759                                    ___bmul 1569  
                        __end_of_lcd_puts 0AF6                      ?_estado_executa_muda 0070  
                                  _canais 054C                                 ??___awdiv 0074  
                               ??___lbdiv 0073                                 ??___awmod 0074  
                            ?_timer0_init 0070                          estado_maquina@op 0068  
                               ??___lwdiv 0074                                 ??___lwmod 007C  
      estado_menu_conf_quant_sensores@opt 005B                          ___awdiv@quotient 0077  
                         ___awmod@divisor 0070                          __end_of_mq_gl_r0 0552  
                    __end_of_eeprom_write 1800                           ___awmod@counter 0075  
                               ??_handler 0069                       _adcon_captura_grava 0696  
                __size_of_rs232_transmite 0080                                    saved_w 007E  
                               ??_sprintf 0028                          ___lbdiv@dividend 0074  
                        __end_ofexp@coeff 0570                          __end_oflog@coeff 058B  
                 __end_of__initialization 164D                estado_menu_principal@i_806 0065  
                         eeprom_read@addr 00E5                      ?_adcon_captura_grava 0070  
              estado_menu_principal@maior 005C              __end_ofi1_eeprom_gravar_word 1569  
              estado_menu_principal@menor 005E                      estado_executa_muda@i 0059  
              estado_menu_principal@t_int 0066                             i1_eeprom_read 15E7  
                     ___bmul@multiplicand 0070                     ??_estado_executa_muda 0034  
                          __pcstackCOMMON 0070                       __size_ofi1_lcd_goto 0027  
                            __pidataBANK1 14FE             estado_menu_principal@qtd_sens 0062  
                     __size_ofi1_lcd_puts 004D                          ___lbdiv@quotient 0076  
                              _adcon_init 15B4                            _OPTION_REGbits 0081  
                         _adcon_ler_canal 0C5D                  __end_of_estado_ver_todos 09C8  
                              _rs232_init 159B                        __size_of_lcd_clear 0019  
                            i1lcd_write@c 0071                         eeprom_write@value 00E4  
                   eeprom_gravar_word@end 00EA                        __size_of_lcd_write 0041  
                 __size_of_estado_inicial 0007                   __size_of_estado_max_min 0011  
                 __size_of_estado_maquina 0075                                __pbssBANK0 006E  
                              __pbssBANK1 00A0                                __pbssBANK3 0190  
                      __size_of_btns_init 0034                       estado_ver_todos@opt 005B  
                i1eeprom_gravar_word@dado 0073                     ??_adcon_captura_grava 0048  
                 ??_estado_menu_principal 005A                           handler@count_t0 00CD  
                          ?i1_eeprom_read 0070                   __size_ofi1_eeprom_write 0031  
                              __pmaintext 0E1B                                   ?___bmul 0070  
                            ?i1_lcd_write 0070                          adcon_ler_canal@i 007B  
                              __pintentry 0004                           handler@pos_taxa 00E1  
                       ??_eeprom_ler_word 0074                        adcon_ler_canal@acc 0077  
                      adcon_ler_canal@cnl 0076                        _menu_tempo_amostra 0512  
                               ?_lcd_init 0070                                 ?_lcd_goto 00E6  
                               ?_lcd_puts 00E6                                __stringtab 0500  
                estado_captura_mostra@opt 005A                         ??_rs232_transmite 0074  
                       estado_inicial@opt 0070                                _btns_testa 16CD  
                       __end_of_lcd_clear 159B                     __size_of_eeprom_write 003B  
              estado_executa_muda@qtd_val 0049                __end_of_eeprom_gravar_word 15E7  
              estado_executa_muda@posicao 004A                         estado_max_min@opt 005A  
                         __size_of___bmul 0019                  adcon_captura_grava@i_536 0054  
                                 ___awdiv 0AF6                                   ___lbdiv 16FB  
                                 ___awmod 0A29                         __end_of_lcd_write 04FF  
                                 ___lwdiv 0885                                   ___lwmod 0842  
                 __end_of_adcon_ler_canal 0CE4                  adcon_captura_grava@maior 004A  
                adcon_captura_grava@menor 004C                         __end_of_btns_init 07FA  
                adcon_captura_grava@t_int 0055                      __size_of_timer0_init 000D  
                                 _handler 0D75                  rs232_transmite@qtd_bytes 0078  
                                 __ptext1 14F1                                   __ptext2 15B4  
                                 __ptext3 15CD                                   __ptext4 17C5  
                                 __ptext5 1606                                   __ptext6 172A  
                                 __ptext7 0A8D                                   __ptext8 178A  
                                 __ptext9 04BE                               ?_adcon_init 0070  
          estado_executa_muda@novo_estado 004D                                   _dpowers 053A  
                            __size_of_div 003C                          ___awmod@dividend 0072  
                    i1_eeprom_gravar_word 1553                               ?_rs232_init 0070  
                            ??i1_lcd_goto 0073                              ??i1_lcd_puts 0076  
              adcon_captura_grava@qtd_val 0052                adcon_captura_grava@posicao 0050  
                                 _sprintf 0ED6                                   clrloop0 14EA  
                              ??_lcd_init 00E6                                ??_lcd_goto 00E7  
                              ??_lcd_puts 00E8                      end_of_initialization 164D  
                 eeprom_ler_word@temp_int 0077                           ??i1_eeprom_read 0070  
                            _eeprom_write 17C5               __end_of_menu_quant_sensores 053A  
                    adcon_captura_grava@i 0053                      adcon_captura_grava@x 004E  
        ??_estado_menu_conf_tempo_amostra 007E           ?_estado_menu_conf_tempo_amostra 0070  
                      __end_ofi1_lcd_goto 1678                              __pstringtext 0500  
                      __end_ofi1_lcd_puts 091F                  _estado_executa_muda$1447 0054  
                _estado_executa_muda$1448 0056                     ?i1_eeprom_gravar_word 0073  
             __size_of_estado_menu_limpar 0011                            _estado_inicial 14E2  
                          _estado_max_min 150C                            _estado_maquina 0B68  
                   _estado_captura_mostra 152E                             ??_eeprom_read 00E4  
                             ?_btns_testa 0070                            i1_eeprom_write 1759  
                     __size_of_adcon_init 0019                                lcd_write@c 00E5  
                     __size_of_rs232_init 0019                            __end_of___bmul 1582  
                          __end_of_canais 0550                      __size_ofi1_lcd_write 002B  
                        ?_adcon_ler_canal 0070                    __end_of_estado_inicial 14E9  
                     start_initialization 162B                    __end_of_estado_max_min 151D  
                  __end_of_estado_maquina 0BDD                         ?_estado_ver_todos 0070  
                             __end_of_div 0842                        ??_estado_ver_todos 005A  
                  __end_ofi1_eeprom_write 178A               __end_of_estado_executa_muda 02FC  
                         _eeprom_ler_word 1678                             i1lcd_puts@cmd 0078  
                           i1lcd_puts@str 0074            __size_of_estado_menu_principal 01C2  
           __end_of_estado_menu_principal 04BE                    eeprom_gravar_word@dado 00E7  
                                ??___bmul 0071                       __end_of_eeprom_read 162B  
                              init_fetch0 1540                       __end_of_LCD_POSICAO 054C  
                             __pdataBANK1 00D1                    ??i1_eeprom_gravar_word 0075  
                         _rs232_transmite 0BDD                       __size_of_btns_testa 002E  
                         ?_estado_inicial 0070                           ?_estado_max_min 0070  
                           __pcstackBANK0 0020                             __pcstackBANK1 00DF  
                           __pcstackBANK3 01A1                           ?_estado_maquina 0070  
                     __end_of__stringdata 0696              estado_menu_principal@qtd_val 0063  
            estado_menu_principal@posicao 0061                    _gl_item_menu_principal 006F  
             __end_of_adcon_captura_grava 07C6                    _gl_item_menu_ver_todos 00D0  
                  ?_estado_captura_mostra 0070                          eeprom_write@addr 00E6  
                       __size_of_lcd_init 003B                         __size_of_lcd_goto 002F  
                             sprintf@_val 002E                               sprintf@flag 002D  
                       __size_of_lcd_puts 0069                           ?i1_eeprom_write 0070  
                        rs232_transmite@i 007A                               sprintf@prec 002B  
                        rs232_transmite@x 0079                          ___lwdiv@dividend 0072  
                     i1eeprom_write@value 0070                                  ?___awdiv 0070  
                                ?___lbdiv 0072                                  ?___awmod 0070  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
                               _lcd_clear 1582                                 _gl_estado 00CF  
                            _menu_inicial 00D1                                  ?_handler 0070  
                               _lcd_write 04BE                              ??_adcon_init 00E4  
                               _btns_init 07C6                        _eeprom_gravar_word 15CD  
                            ??_rs232_init 00E4                             ?_adcon_mostra 0034  
                          mq_mostra@F1741 00B0                            mq_mostra@F1739 00A0  
                        ___lwdiv@quotient 0075                   __end_of_eeprom_ler_word 16A2  
                                ?_sprintf 0020                   rs232_transmite@qtd_sens 0077  
                     ?_eeprom_gravar_word 00E7                         interrupt_function 0004  
                               clear_ram0 14E9                               _eeprom_read 1606  
                               div@number 0079                                  _PIE1bits 008C  
                             _LCD_POSICAO 0544                        __end_of_adcon_init 15CD  
                                _PIR1bits 000C                             ??_timer0_init 00E4  
                      __end_of_rs232_init 15B4                   __end_of_rs232_transmite 0C5D  
                    ??_eeprom_gravar_word 00E9                                ?_lcd_clear 0070  
                              _ADCON0bits 001F                               __stringbase 0512  
                              _ADCON1bits 009F                               __stringdata 058B  
                              ?_lcd_write 0070                                 lcd_goto@x 00E6  
                               lcd_goto@y 00E8                                ?_btns_init 0070  
                          ??_adcon_mostra 0037    __end_of_estado_menu_conf_tempo_amostra 0A29  
 __size_of_estado_menu_conf_tempo_amostra 0061            _estado_menu_conf_tempo_amostra 09C8  
             estado_executa_muda@endereco 004F                              ??_btns_testa 0070  
                   __end_ofi1_eeprom_read 1606               estado_executa_muda@temp_int 004B  
             estado_executa_muda@qtd_sens 004E                          __size_of___awdiv 0072  
                        __size_of___lbdiv 002F                          __size_of___awmod 0064  
                        __size_of___lwdiv 004D                          __size_of___lwmod 0043  
                      __end_of__stringtab 0512                __end_of_estado_menu_limpar 152E  
                        __size_of_handler 00A6                       __end_of_timer0_init 14FE  
                      i1eeprom_write@addr 0072   __end_of_estado_menu_conf_quant_sensores 0971  
__size_of_estado_menu_conf_quant_sensores 0052         ??_estado_menu_conf_quant_sensores 005A  
        ?_estado_menu_conf_quant_sensores 0070           _estado_menu_conf_quant_sensores 091F  
                      __end_of_btns_testa 16FB                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                             handler@option 00E3  
                                __ptext10 159B                                  __ptext11 07C6  
                                __ptext20 152E                                  __ptext12 0D75  
                                __ptext21 02FC                                  __ptext13 0B68  
                                __ptext30 0ED6                                  __ptext22 14E2  
                                __ptext14 091F                                  __ptext31 0842  
                                __ptext23 0015                                  __ptext15 09C8  
                                __ptext40 16A2                                  __ptext32 0885  
                                __ptext24 0696                                  __ptext16 151D  
                                __ptext41 0BDD                                  __ptext33 0806  
                                __ptext25 1553                                  __ptext17 150C  
                                __ptext42 16CD                                  __ptext34 0A29  
                                __ptext26 1759                                  __ptext18 0971  
                                __ptext43 1569                                  __ptext35 0AF6  
                                __ptext27 0CE4                                  __ptext19 16FB  
                                __ptext36 0C5D                                  __ptext28 08D2  
                                __ptext37 1678                                  __ptext29 1651  
                                __ptext38 15E7                                  __ptext39 1582  
                                _lcd_init 178A                                  _lcd_goto 172A  
                        ?_eeprom_ler_word 0072                                  _lcd_puts 0A8D  
                       i1eeprom_read@addr 0071                          __size_of_sprintf 012A  
                           __size_of_main 00BB                    rs232_transmite@qtd_val 0076  
                                _mq_gl_r0 0550                                  div@denom 007B  
               __size_of_estado_ver_todos 0057                             ??i1_lcd_write 0070  
                        ?_rs232_transmite 0070               adcon_captura_grava@qtd_sens 0051  
                             ??_lcd_clear 0072                          ??_estado_inicial 007E  
                        ??_estado_max_min 007E                          ??_estado_maquina 007E  
                             ??_lcd_write 00E4                                  exp@coeff 0552  
                                log@coeff 0570                               ??_btns_init 00E4  
                              _INTCONbits 000B                   ??_estado_captura_mostra 007E  
                __size_of_adcon_ler_canal 0087                                  init_ram0 1544  
                        ??i1_eeprom_write 0071                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0032  
                        ___lwmod@dividend 007A                                 stringcode 050A  
                    __end_of_adcon_mostra 0D75                             adcon_mostra@i 0036  
                   _estado_menu_principal 02FC              __size_of_estado_executa_muda 02E7  
                             _timer0_init 14F1                     estado_menu_limpar@opt 005A  
                     __end_ofi1_lcd_write 16CD                                  sprintf@c 0033  
                                sprintf@f 0020                           ___lwmod@divisor 0078  
                         ___lwmod@counter 007D             __size_ofi1_eeprom_gravar_word 0016  
                                stringtab 0500                         adcon_mostra@F1828 00C0  
                    handler@tempo_amostra 00DF                      adcon_mostra@temp_div 0044  
                    adcon_mostra@temp_str 003B                             ?_eeprom_write 00E4  
            __size_of_adcon_captura_grava 0130                              ?_eeprom_read 0070  
             _gl_item_menu_config_amostra 00CB                         adcon_mostra@t_int 0034  
